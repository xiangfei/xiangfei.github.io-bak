<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hive 3.1.2 高可用安装</title>
      <link href="/2020/08/19/hive/"/>
      <url>/2020/08/19/hive/</url>
      
        <content type="html"><![CDATA[<h4 id="机器">机器</h4><table><thead><tr><th>vip</th><th>ip</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>192.168.151.200</td><td>192.168.226.64</td><td>hadoop-cluster-1</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.65</td><td>hadoop-cluster-2</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.63</td><td>hadoop-cluster-3</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.66</td><td>hadoop-datanode01</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.67</td><td>hadoop-datanode02</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.68</td><td>hadoop-datanode03</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.69</td><td>hadoop-datanode04</td><td>centos 7</td></tr><tr><td></td><td>192.168.213.59</td><td>mariadb-galera-cluster</td><td>centos 7</td></tr><tr><td></td><td>192.168.213.65</td><td>mariadb-galera-cluster</td><td>centos 7</td></tr><tr><td></td><td>192.168.213.58</td><td>mariadb-galera-cluster</td><td>centos 7</td></tr></tbody></table><h4 id="cluster-node">cluster node</h4><ul><li>hiveserver2</li></ul><h3 id="tar包下载">tar包下载</h3><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz</a></li></ul><h3 id="cluster-配置">cluster 配置</h3><h4 id="add-hive-home-path">add hive_home_path</h4><pre><code># /etc/profileexport HIVE_HOME=/data/tools/apache-hive-3.1.2-binexport PATH=$HIVE_HOME/bin:$PATH</code></pre><h4 id="创建hive-dir">创建hive dir</h4><pre><code>[root@hadoop-cluster-2 bin]# ./hadoop  fs -mkdir       /tmp2020-08-19 07:00:55,671 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[root@hadoop-cluster-2 bin]# [root@hadoop-cluster-2 bin]# ./hadoop  fs -mkdir          /user/hive/warehouse2020-08-19 07:01:12,608 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicablemkdir: `hdfs://mycluster/user/hive': No such file or directory[root@hadoop-cluster-2 bin]# ./hadoop  fs -mkdir       -p   /user/hive/warehouse2020-08-19 07:01:35,783 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[root@hadoop-cluster-2 bin]# ./hadoop  fs  -chmod g+w   /tmp2020-08-19 07:02:04,907 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[root@hadoop-cluster-2 bin]# ./hadoop  fs -chmod g+w   /user/hive/warehouse2020-08-19 07:02:20,989 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[root@hadoop-cluster-2 bin]# </code></pre><h4 id="安装-mariadb-clint">安装 mariadb clint</h4><pre><code>[root@hadoop-cluster-2 conf]# yum -y install mariadb mariadb-dev mariadb-server</code></pre><h4 id="修改hive-remote-配置">修改hive remote 配置</h4><ul><li>touch apache-hive-3.1.2-bin/conf/hive-site.xml</li></ul><pre><code>[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# cat conf/hive-site.xml &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;configuration&gt;        &lt;property&gt;                &lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;                &lt;value&gt;jdbc:mysql://192.168.213.59:3306/hive&lt;/value&gt;        &lt;/property&gt;        &lt;property&gt;                &lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;                &lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;        &lt;/property&gt;        &lt;property&gt;                &lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;                &lt;value&gt;root&lt;/value&gt;        &lt;/property&gt;        &lt;property&gt;                &lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;                &lt;value&gt;123456&lt;/value&gt;        &lt;/property&gt;        &lt;property&gt;                &lt;name&gt;hive.metastore.schema.verification&lt;/name&gt;                &lt;value&gt;false&lt;/value&gt;        &lt;/property&gt;&lt;property&gt;     &lt;name&gt;hive.cli.print.current.db&lt;/name&gt; &lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;          &lt;name&gt;hive.cli.print.header&lt;/name&gt;         &lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;        &lt;name&gt;hive.server2.thrift.port&lt;/name&gt;      &lt;value&gt;9090&lt;/value&gt;&lt;/property&gt;    &lt;property&gt;       &lt;name&gt;hive.server2.thrift.bind.host&lt;/name&gt;       &lt;value&gt;192.168.213.178&lt;/value&gt;     &lt;/property&gt;&lt;/configuration&gt;</code></pre><ul><li><a href="http://hive-env.sh" target="_blank" rel="noopener">hive-env.sh</a></li></ul><pre><code># export HIVE_CONF_DIR=# Folder containing extra libraries required for hive compilation/execution can be controlled by:# export HIVE_AUX_JARS_PATH=export HIVE_HOME=/data/tools/apache-hive-3.1.2-binexport HIVE_CONF_DIR=/data/tools/apache-hive-3.1.2-bin/confexport HADOOP_HOME=/data/tools/hadoop-3.3.0export HIVE_AUX_JARS_PATH=/data/tools/apache-hive-3.1.2-bin/lib[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# </code></pre><h3 id="启动hiveserver2">启动hiveserver2</h3><pre><code>[root@hadoop-cluster-2 bin]# cat start.sh nohup ./hiveserver2 2&gt;&amp;1 &gt;/dev/null&amp;[root@hadoop-cluster-2 bin]# </code></pre><h3 id="error">error</h3><ul><li>java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument</li></ul><pre><code>which: no hbase in (/data/tools/apache-hive-3.1.2-bin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)2020-08-19 15:54:32: Starting HiveServer2SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in [jar:file:/data/tools/apache-hive-3.1.2-bin/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: Found binding in [jar:file:/data/tools/hadoop-3.3.0/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]Exception in thread &quot;main&quot; java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument(ZLjava/lang/String;Ljava/lang/Object;)Vat org.apache.hadoop.conf.Configuration.set(Configuration.java:1380)at org.apache.hadoop.conf.Configuration.set(Configuration.java:1361)at org.apache.hadoop.mapred.JobConf.setJar(JobConf.java:536)at org.apache.hadoop.mapred.JobConf.setJarByClass(JobConf.java:554)at org.apache.hadoop.mapred.JobConf.&lt;init&gt;(JobConf.java:448)at org.apache.hadoop.hive.conf.HiveConf.initialize(HiveConf.java:5141)at org.apache.hadoop.hive.conf.HiveConf.&lt;init&gt;(HiveConf.java:5099)at org.apache.hadoop.hive.common.LogUtils.initHiveLog4jCommon(LogUtils.java:97)</code></pre><blockquote><p>hadoop和hive中guava jar包可能版本冲突，删除低版本使用高版本的jar包</p></blockquote><pre><code>[root@hadoop-cluster-2 hadoop-3.3.0]# pwd/data/tools/hadoop-3.3.0[root@hadoop-cluster-2 hadoop-3.3.0]# cd ../hbase-2.3.0[root@hadoop-cluster-2 hbase-2.3.0]# find -name \*.jar | grep gu./lib/jersey-guava-2.25.1.jar./lib/guice-3.0.jar./lib/guice-servlet-3.0.jar./lib/guava-11.0.2.jar./lib/commons-configuration-1.6.jar[root@hadoop-cluster-2 hbase-2.3.0]# pwd/data/tools/hbase-2.3.0[root@hadoop-cluster-2 hbase-2.3.0]# pwd/data/tools/hbase-2.3.0[root@hadoop-cluster-2 hbase-2.3.0]# cd /data/tools/hadoop-3.3.0/[root@hadoop-cluster-2 hadoop-3.3.0]# find -name \*.jar | grep gua./share/hadoop/common/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar./share/hadoop/common/lib/guava-27.0-jre.jar./share/hadoop/yarn/csi/lib/guava-20.0.jar./share/hadoop/hdfs/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar./share/hadoop/hdfs/lib/guava-27.0-jre.jar[root@hadoop-cluster-2 hadoop-3.3.0]# [root@hadoop-cluster-2 hadoop-3.3.0]# pwd/data/tools/hadoop-3.3.0[root@hadoop-cluster-2 hadoop-3.3.0]# cd /data/tools/apache-apache-hive-3.1.2-bin/        apache-hive-3.1.2-bin.tar.gz  apache-zookeeper-3.6.0-bin/   [root@hadoop-cluster-2 hadoop-3.3.0]# cd /data/tools/apache-hive-3.1.2-bin[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# mv lib/guava-19.0.jar  lib/guava-19.0.jar.bak[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# cp /data/tools/hadoop-3.3.0/share/hadoop/yarn/csi/lib/guava-20.0.jar lib/\[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# [root@hadoop-cluster-2 apache-hive-3.1.2-bin]# [root@hadoop-cluster-2 apache-hive-3.1.2-bin]# ./hiveserver2 -bash: ./hiveserver2: No such file or directory[root@hadoop-cluster-2 apache-hive-3.1.2-bin]# cd bin[root@hadoop-cluster-2 bin]# ./hiveserver2 which: no hbase in (/data/tools/apache-hive-3.1.2-bin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)2020-08-19 16:01:32: Starting HiveServer2SLF4J: Class path contains multiple SLF4J bindings.SLF4J: Found binding in [jar:file:/data/tools/apache-hive-3.1.2-bin/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: Found binding in [jar:file:/data/tools/hadoop-3.3.0/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]Hive Session ID = edac1d17-208b-4a6e-b79e-af51f84a2d29</code></pre><blockquote><p>配置galera cluster ,其他2 台机器连接自己的thrift2 server 和数据库配置</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hive </category>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bigdata </tag>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opentsdb 2.4.0 集群安装</title>
      <link href="/2020/08/14/opentsdb/"/>
      <url>/2020/08/14/opentsdb/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="机器"><a href="#机器" class="headerlink" title="机器"></a>机器</h4><table><thead><tr><th>vip</th><th>ip</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>192.168.151.200</td><td>192.168.226.64</td><td>hadoop-cluster-1</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.65</td><td>hadoop-cluster-2</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.63</td><td>hadoop-cluster-3</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.66</td><td>hadoop-datanode01</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.67</td><td>hadoop-datanode02</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.68</td><td>hadoop-datanode03</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.69</td><td>hadoop-datanode04</td><td>centos 7</td></tr></tbody></table><h4 id="cluster-node"><a href="#cluster-node" class="headerlink" title="cluster node"></a>cluster node</h4><ul><li>config opentsdb</li></ul><h4 id="data-node"><a href="#data-node" class="headerlink" title="data node"></a>data node</h4><ul><li>not used</li></ul><h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install gnuplot.x86_64  gnuplot-common.x86_64  git -y</span><span class="token punctuation">[</span>root@hadoop-cluster-3 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum groupinstall 'Development Tools' -y</span></code></pre><h3 id="安装opentsb"><a href="#安装opentsb" class="headerlink" title="安装opentsb"></a>安装opentsb</h3><ul><li>zk  hbase opentsdb  在同一台机器</li></ul><h4 id="git-下载-rpm文件"><a href="#git-下载-rpm文件" class="headerlink" title="git 下载 rpm文件"></a>git 下载 rpm文件</h4><ul><li><a href="https://github.com/OpenTSDB/opentsdb/releases/tag/v2.4.0" target="_blank" rel="noopener">https://github.com/OpenTSDB/opentsdb/releases/tag/v2.4.0</a> </li></ul><pre><code>[root@hadoop-cluster-2 tools]# lsapache-zookeeper-3.6.0-bin  hadoop-3.3.0  hbase-2.3.0  hbase-2.3.0-bin.tar.gz  opentsdb-2.4.0.noarch.rpm[root@hadoop-cluster-2 tools]# yum install ../  ../ [root@hadoop-cluster-2 tools]# yum install ./opentsdb-2.4.0.noarch.rpm  Loaded plugins: fastestmirrorExamining ./opentsdb-2.4.0.noarch.rpm: opentsdb-2.4.0-1.noarchMarking ./opentsdb-2.4.0.noarch.rpm to be installedResolving Dependencies--&gt; Running transaction check---&gt; Package opentsdb.noarch 0:2.4.0-1 will be installed--&gt; Finished Dependency ResolutionDependencies Resolved=========================================================================================================================================================================== Package                               Arch                                Version                               Repository                                           Size===========================================================================================================================================================================Installing: opentsdb                              noarch                              2.4.0-1                               /opentsdb-2.4.0.noarch                               14 MTransaction Summary===========================================================================================================================================================================Install  1 PackageTotal size: 14 MInstalled size: 14 MIs this ok [y/d/N]: yDownloading packages:Running transaction checkRunning transaction testTransaction test succeededRunning transaction  Installing : opentsdb-2.4.0-1.noarch                                                                                                                                 1/1   Verifying  : opentsdb-2.4.0-1.noarch                                                                                                                                 1/1 Installed:  opentsdb.noarch 0:2.4.0-1                                                                                                                                                Complete!</code></pre><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><pre><code>[root@hadoop-cluster-2 tools]# env COMPRESSION=NONE HBASE_HOME=/data/tools/hbase-2.3.0  /usr/share/opentsdb/tools/create_table.sh2020-08-19 03:21:22,421 WARN  [main] util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableHBase ShellUse &quot;help&quot; to get list of supported commands.Use &quot;exit&quot; to quit this interactive shell.For Reference, please visit: http://hbase.apache.org/2.0/book.html#shellVersion 2.3.0, re0e1382705c59d3fb3ad8f5bff720a9dc7120fb8, Mon Jul  6 22:27:43 UTC 2020Took 0.0016 seconds                                                                                                                                                        create &#39;tsdb-uid&#39;,  {NAME =&gt; &#39;id&#39;, COMPRESSION =&gt; &#39;NONE&#39;, BLOOMFILTER =&gt; &#39;ROW&#39;, DATA_BLOCK_ENCODING =&gt; &#39;DIFF&#39;},  {NAME =&gt; &#39;name&#39;, COMPRESSION =&gt; &#39;NONE&#39;, BLOOMFILTER =&gt; &#39;ROW&#39;, DATA_BLOCK_ENCODING =&gt; &#39;DIFF&#39;}Created table tsdb-uidTook 4.1026 seconds                                                                                                                                                        Hbase::Table - tsdb-uidcreate &#39;tsdb&#39;,  {NAME =&gt; &#39;t&#39;, VERSIONS =&gt; 1, COMPRESSION =&gt; &#39;NONE&#39;, BLOOMFILTER =&gt; &#39;ROW&#39;, DATA_BLOCK_ENCODING =&gt; &#39;DIFF&#39;, TTL =&gt; &#39;FOREVER&#39;}Created table tsdbTook 2.1730 seconds                                                                                                                                                        Hbase::Table - tsdbcreate &#39;tsdb-tree&#39;,  {NAME =&gt; &#39;t&#39;, VERSIONS =&gt; 1, COMPRESSION =&gt; &#39;NONE&#39;, BLOOMFILTER =&gt; &#39;ROW&#39;, DATA_BLOCK_ENCODING =&gt; &#39;DIFF&#39;}Created table tsdb-treeTook 2.1679 seconds                                                                                                                                                        Hbase::Table - tsdb-treecreate &#39;tsdb-meta&#39;,  {NAME =&gt; &#39;name&#39;, COMPRESSION =&gt; &#39;NONE&#39;, BLOOMFILTER =&gt; &#39;ROW&#39;, DATA_BLOCK_ENCODING =&gt; &#39;DIFF&#39;}Created table tsdb-metaTook 2.1447 seconds                                                                                                                                                        Hbase::Table - tsdb-meta</code></pre><h4 id="hbase-table-校验"><a href="#hbase-table-校验" class="headerlink" title="hbase table 校验"></a>hbase table 校验</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./hbase shell</span>2020-08-19 03:22:45,560 WARN  <span class="token punctuation">[</span>main<span class="token punctuation">]</span> util.NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicableHBase ShellUse <span class="token string">"help"</span> to get list of supported commands.Use <span class="token string">"exit"</span> to quit this interactive shell.For Reference, please visit: http://hbase.apache.org/2.0/book.html<span class="token comment" spellcheck="true">#shell</span>Version 2.3.0, re0e1382705c59d3fb3ad8f5bff720a9dc7120fb8, Mon Jul  6 22:27:43 UTC 2020Took 0.0022 seconds                                                                                                                                                        hbase<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:008:0* listTABLE                                                                                                                                                                      hbase_1103                                                                                                                                                                 hbase_1104                                                                                                                                                                 hbase_machine                                                                                                                                                              hbase_machine_log                                                                                                                                                          hbase_machine_resource_usage                                                                                                                                               tsdb                                                                                                                                                                       tsdb-meta                                                                                                                                                                  tsdb-tree                                                                                                                                                                  tsdb-uid                                                                                                                                                                   9 row<span class="token punctuation">(</span>s<span class="token punctuation">)</span>Took 0.9993 seconds                                                                                                                                                        <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span><span class="token string">"hbase_1103"</span>, <span class="token string">"hbase_1104"</span>, <span class="token string">"hbase_machine"</span>, <span class="token string">"hbase_machine_log"</span>, <span class="token string">"hbase_machine_resource_usage"</span>, <span class="token string">"tsdb"</span>, <span class="token string">"tsdb-meta"</span>, <span class="token string">"tsdb-tree"</span>, <span class="token string">"tsdb-uid"</span><span class="token punctuation">]</span>hbase<span class="token punctuation">(</span>main<span class="token punctuation">)</span>:009:0<span class="token operator">></span> <span class="token comment" spellcheck="true"># hadoop-cluster-1/2 都能看见opentsb table</span></code></pre><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><ul><li>/etc/opentsdb/opentsdb.conf</li></ul><pre><code>#tsd.http.cachedir - Path to write temporary files to#tsd.http.staticroot - Path to the static GUI files found in ./build/staticroot#在同一台机器,不需要配置#tsd.storage.hbase.zk_quorum - If HBase and Zookeeper are not running on the same machine, specify the host and port here.tsd.core.auto_create_metrics  = truetsd.core.meta.enable_realtime_uid=truetsd.core.meta.enable_realtime_ts=truetsd.core.meta.enable_tsuid_tracking=true</code></pre><h4 id="启动opentsdb-all-cluster-node"><a href="#启动opentsdb-all-cluster-node" class="headerlink" title="启动opentsdb (all cluster node)"></a>启动opentsdb (all cluster node)</h4><ul><li>service 启动找不到文件,手动启用</li></ul><pre><code>[root@hadoop-cluster-2 tools]# cat start_opentsdb.sh export LOG_FILE=/var/log/opentsdb/server.lognohup tsdb  tsd  --config=/etc/opentsdb/opentsdb.conf    2&gt;&amp;1 &gt;/dev/null &amp;</code></pre><h4 id="yum-安装文件说明"><a href="#yum-安装文件说明" class="headerlink" title="yum 安装文件说明"></a>yum 安装文件说明</h4><pre><code>/etc/opentsdb - Configuration files/tmp/opentsdb - Temporary cache files/usr/share/opentsdb - Application files/usr/share/opentsdb/bin - The &quot;tsdb&quot; startup script that launches a TSD or command line tools/usr/share/opentsdb/lib - Java JAR library files/usr/share/opentsdb/plugins - Location for plugin files and dependencies/usr/share/opentsdb/static - Static files for the GUI/usr/share/opentsdb/tools - Scripts and other tools/var/log/opentsdb - Logs</code></pre><h4 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h4><ul><li>zk opentsb 在同一台机器,官方文档不需要配置</li></ul><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ul><li>任意一台机器插入, 其他2台机器都能获取到数据</li></ul><blockquote><p> 缺少图片</p></blockquote><h3 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h3><pre class=" language-bash"><code class="language-bash">04:34:23.346 WARN  <span class="token punctuation">[</span>PutDataPointRpc.processDataPoint<span class="token punctuation">]</span> - Unknown metric: metric<span class="token operator">=</span>sys.cpu.nice ts<span class="token operator">=</span>1597811662 value<span class="token operator">=</span>22 host<span class="token operator">=</span>xiangfeidc<span class="token operator">=</span>dc1</code></pre><pre class=" language-/etc/opentsdb/opentsdb.conf"><code class="language-/etc/opentsdb/opentsdb.conf">tsd.core.auto_create_metrics  = true</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opentsdb </category>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bigdata </tag>
            
            <tag> opentsdb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hbase 2.3 高可用安装</title>
      <link href="/2020/08/12/hbase/"/>
      <url>/2020/08/12/hbase/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="机器"><a href="#机器" class="headerlink" title="机器"></a>机器</h4><table><thead><tr><th>vip</th><th>ip</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>192.168.151.200</td><td>192.168.226.64</td><td>hadoop-cluster-1</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.65</td><td>hadoop-cluster-2</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.63</td><td>hadoop-cluster-3</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.66</td><td>hadoop-datanode01</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.67</td><td>hadoop-datanode02</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.68</td><td>hadoop-datanode03</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.69</td><td>hadoop-datanode04</td><td>centos 7</td></tr></tbody></table><h4 id="cluster-node"><a href="#cluster-node" class="headerlink" title="cluster node"></a>cluster node</h4><ul><li>hmaster</li></ul><h4 id="data-node"><a href="#data-node" class="headerlink" title="data node"></a>data node</h4><ul><li>hregionserver</li></ul><blockquote><p>官方介绍hmaster是主备模式, hregionserver部署在datanoe 节点</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="cluster-node-1"><a href="#cluster-node-1" class="headerlink" title="cluster node"></a>cluster node</h4><ul><li><p>解压/data/hbase-2.3.0</p></li><li><p>修改env 文件  hbase-env.sh </p></li></ul><pre><code># adddexport JAVA_HOME=/usrexport HBASE_MANAGES_ZK=false</code></pre><ul><li>修改hbase-site.xml 文件</li></ul><pre><code>&lt;configuration&gt;  &lt;!--    The following properties are set for running HBase as a single process on a    developer workstation. With this configuration, HBase is running in    &quot;stand-alone&quot; mode and without a distributed file system. In this mode, and    without further configuration, HBase and ZooKeeper data are stored on the    local filesystem, in a path under the value configured for `hbase.tmp.dir`.    This value is overridden from its default value of `/tmp` because many    systems clean `/tmp` on a regular basis. Instead, it points to a path within    this HBase installation directory.    Running against the `LocalFileSystem`, as opposed to a distributed    filesystem, runs the risk of data integrity issues and data loss. Normally    HBase will refuse to run in such an environment. Setting    `hbase.unsafe.stream.capability.enforce` to `false` overrides this behavior,    permitting operation. This configuration is for the developer workstation    only and __should not be used in production!__    See also https://hbase.apache.org/book.html#standalone_dist  --&gt;  &lt;property&gt;    &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;    &lt;value&gt;true&lt;/value&gt;  &lt;/property&gt;  &lt;property&gt;     &lt;name&gt;hbase.rootdir&lt;/name&gt;     &lt;value&gt;hdfs://mycluster/hbase&lt;/value&gt;  &lt;/property&gt;  &lt;property&gt;    &lt;name&gt;hbase.tmp.dir&lt;/name&gt;    &lt;value&gt;./tmp&lt;/value&gt;  &lt;/property&gt;  &lt;property&gt;    &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt;    &lt;value&gt;hadoop-cluster-3,hadoop-cluster-1,hadoop-cluster-2&lt;/value&gt;  &lt;/property&gt;  &lt;property&gt;    &lt;name&gt;hbase.unsafe.stream.capability.enforce&lt;/name&gt;    &lt;value&gt;false&lt;/value&gt;  &lt;/property&gt;&lt;/configuration&gt;</code></pre><ul><li><p>copy hdfs-site.xml 到 conf 目录</p></li><li><p>启动</p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 hbase-2.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hbase-daemon.sh start master</span></code></pre><blockquote><p> master-backup 命令找不到,直接启动master,看日志是standby 模式 </p></blockquote><ul><li>启动 rest api</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat restart_web.sh </span><span class="token function">nohup</span> ./hbase rest start -p 4444 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">></span>/dev/null<span class="token operator">&amp;</span></code></pre><ul><li>启动thrift2</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat restart_thrift.sh</span><span class="token function">nohup</span> ./hbase thrift2  start -p 9090 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">></span>/dev/null<span class="token operator">&amp;</span></code></pre><blockquote><p>all cluster node 启动</p></blockquote><h4 id="data-node-1"><a href="#data-node-1" class="headerlink" title="data node"></a>data node</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-data-node-1 hbase-2.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hbase-daemon.sh  start regionserver</span></code></pre><h3 id="最终安装状态"><a href="#最终安装状态" class="headerlink" title="最终安装状态"></a>最终安装状态</h3><pre><code>2020-08-13 01:14:18,218 WARN  [main] util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableHBase ShellUse &quot;help&quot; to get list of supported commands.Use &quot;exit&quot; to quit this interactive shell.For Reference, please visit: http://hbase.apache.org/2.0/book.html#shellVersion 2.3.0, re0e1382705c59d3fb3ad8f5bff720a9dc7120fb8, Mon Jul  6 22:27:43 UTC 2020hbase(main):001:0&gt; hbase(main):002:0* hbase(main):003:0* status1 active master, 2 backup masters, 3 servers, 0 dead, 0.6667 average loadTook 1.0644 seconds                                                                                                                                                        hbase(main):004:0&gt; </code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hbase </category>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hbase </tag>
            
            <tag> bigdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop 3.3 高可用安装</title>
      <link href="/2020/08/10/hadoop/"/>
      <url>/2020/08/10/hadoop/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="机器"><a href="#机器" class="headerlink" title="机器"></a>机器</h4><table><thead><tr><th>vip</th><th>ip</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>192.168.151.200</td><td>192.168.226.64</td><td>hadoop-cluster-1</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.65</td><td>hadoop-cluster-2</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.226.63</td><td>hadoop-cluster-3</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.66</td><td>hadoop-datanode01</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.67</td><td>hadoop-datanode02</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.68</td><td>hadoop-datanode03</td><td>centos 7</td></tr><tr><td></td><td>192.168.226.69</td><td>hadoop-datanode04</td><td>centos 7</td></tr></tbody></table><h4 id="cluster-node"><a href="#cluster-node" class="headerlink" title="cluster node"></a>cluster node</h4><ul><li>zookeeper</li><li>journalnode</li><li>namenode</li><li>zkfc</li><li>resourcemanager</li></ul><h4 id="data-node"><a href="#data-node" class="headerlink" title="data node"></a>data node</h4><ul><li>datanode</li><li>nodemanager</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="all-cluster-node"><a href="#all-cluster-node" class="headerlink" title="all cluster node"></a>all cluster node</h4><ul><li>修改hosts</li></ul><pre><code>cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.226.63 hadoop-cluster-3192.168.226.65 hadoop-cluster-2192.168.226.64 hadoop-cluster-1</code></pre><ul><li>安装openjdk</li></ul><pre><code>[root@hadoop-cluster-1 ~]# yum -y install java-1.8.0-openjdk-devel.x86_64  java-1.8.0-openjdk.x86_64</code></pre><ul><li>ssh-keygen</li><li><p>ssh-copy-id  hadoop-cluster-2/hadoop-cluster-1/hadoop-cluster-3</p></li><li><p>安装 zookeeper 集群</p><ul><li><p>安装包下载</p></li><li><p>创建数据folder , 输入zookeeper 集群id</p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mkdir -p  /data/zookeeper_data</span><span class="token keyword">echo</span> 2 <span class="token operator">></span> /data/zookeeper_data/myid   <span class="token comment" spellcheck="true"># 不同机器的myid 唯一,对应配置文件的id名</span></code></pre><ul><li>修改配置文件</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat ../conf/zoo.cfg</span><span class="token comment" spellcheck="true"># The number of milliseconds of each tick</span>tickTime<span class="token operator">=</span>2000<span class="token comment" spellcheck="true"># The number of ticks that the initial </span><span class="token comment" spellcheck="true"># synchronization phase can take</span>initLimit<span class="token operator">=</span>10<span class="token comment" spellcheck="true"># The number of ticks that can pass between </span><span class="token comment" spellcheck="true"># sending a request and getting an acknowledgement</span>syncLimit<span class="token operator">=</span>5<span class="token comment" spellcheck="true"># the directory where the snapshot is stored.</span><span class="token comment" spellcheck="true"># do not use /tmp for storage, /tmp here is just </span><span class="token comment" spellcheck="true"># example sakes.</span>dataDir<span class="token operator">=</span>/data/zookeeper_data<span class="token comment" spellcheck="true"># the port at which the clients will connect</span>clientPort<span class="token operator">=</span>2181<span class="token comment" spellcheck="true"># the maximum number of client connections.</span><span class="token comment" spellcheck="true"># increase this if you need to handle more clients</span><span class="token comment" spellcheck="true">#maxClientCnxns=60</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Be sure to read the maintenance section of the </span><span class="token comment" spellcheck="true"># administrator guide before turning on autopurge.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># The number of snapshots to retain in dataDir</span><span class="token comment" spellcheck="true">#autopurge.snapRetainCount=3</span><span class="token comment" spellcheck="true"># Purge task interval in hours</span><span class="token comment" spellcheck="true"># Set to "0" to disable auto purge feature</span><span class="token comment" spellcheck="true">#autopurge.purgeInterval=1</span><span class="token comment" spellcheck="true">## Metrics Providers</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># https://prometheus.io Metrics Exporter</span><span class="token comment" spellcheck="true">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><span class="token comment" spellcheck="true">#metricsProvider.httpPort=7000</span><span class="token comment" spellcheck="true">#metricsProvider.exportJvmInfo=true</span>quorumListenOnAllIPs<span class="token operator">=</span>trueextendedTypesEnabled <span class="token operator">=</span> <span class="token boolean">true</span>emulate353TTLNodes <span class="token operator">=</span> <span class="token boolean">true</span>server.1 <span class="token operator">=</span> hadoop-cluster-1:2888:3888server.2 <span class="token operator">=</span> hadoop-cluster-2:2888:3888server.3 <span class="token operator">=</span> hadoop-cluster-3:2888:3888</code></pre><ul><li><p>启动</p><ul><li>cd zookeeper bin folder</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-1 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./zkServer.sh  start</span>/usr/bin/javaZooKeeper JMX enabled by defaultUsing config: /data/tools/apache-zookeeper-3.6.0-bin/bin/<span class="token punctuation">..</span>/conf/zoo.cfgStarting zookeeper <span class="token punctuation">..</span>. STARTED</code></pre><ul><li>status</li></ul><pre class=" language-bash"><code class="language-bash">  <span class="token punctuation">[</span>root@hadoop-cluster-1 bin<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./zkServer.sh  status</span>  /usr/bin/java  ZooKeeper JMX enabled by default  Using config: /data/tools/apache-zookeeper-3.6.0-bin/bin/<span class="token punctuation">..</span>/conf/zoo.cfg  Client port found: 2181. Client address: localhost.  Mode: follower</code></pre></li></ul><ul><li>安装hadoop 集群   <ul><li>解压hadoop-3.3.0-aarch64.tar.gz安装到到 /data # hadoop-cluster-3 执行 ,ssh-keygen 机器</li><li>set env</li></ul></li></ul><pre class=" language-bash"><code class="language-bash">vim ./etc/hadoop/hadoop-env.sh <span class="token comment" spellcheck="true"># yum 安装不需要手动配置JAVA_HOME,其他安装需要配置JAVA_HOME</span><span class="token function">export</span> JAVA_HOME<span class="token operator">=</span>/usr<span class="token function">export</span> HDFS_NAMENODE_USER<span class="token operator">=</span>root<span class="token function">export</span> HDFS_DATANODE_USER<span class="token operator">=</span>root<span class="token function">export</span> HDFS_SECONDARYNAMENODE_USER<span class="token operator">=</span>root<span class="token function">export</span> HDFS_JOURNALNODE_USER<span class="token operator">=</span>root<span class="token function">export</span> HDFS_ZKFC_USER<span class="token operator">=</span>root</code></pre><ul><li>修改core-site.xml</li></ul><pre><code>[root@hadoop-cluster-3 hadoop-3.3.0]# cat ./etc/hadoop/core-site.xml &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;!--  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  you may not use this file except in compliance with the License.  You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. See accompanying LICENSE file.--&gt;&lt;!-- Put site-specific property overrides in this file. --&gt;&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;fs.defaultFS&lt;/name&gt;        &lt;value&gt;hdfs://mycluster&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;        &lt;value&gt;/data/tools/hadoop-3.3.0/tmp&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;        &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;        &lt;value&gt;hadoop-cluster-1:2181,hadoop-cluster-2:2181,hadoop-cluster-3:2181&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre><ul><li>修改hdfs-site.xml </li></ul><pre><code>[root@hadoop-cluster-3 hadoop-3.3.0]# cat ./etc/hadoop/hdfs-site.xml &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;&lt;!--  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  you may not use this file except in compliance with the License.  You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. See accompanying LICENSE file.--&gt;&lt;!-- Put site-specific property overrides in this file. --&gt;&lt;configuration&gt;    &lt;property&gt;        &lt;name&gt;dfs.replication&lt;/name&gt;        &lt;value&gt;3&lt;/value&gt;    &lt;/property&gt;   &lt;property&gt;        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;        &lt;value&gt;/data/tools/hadoop-3.3.0/data&lt;/value&gt;    &lt;/property&gt;   &lt;property&gt;        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;        &lt;value&gt;/data/tools/hadoop-3.3.0/name&lt;/value&gt;    &lt;/property&gt;   &lt;property&gt;        &lt;name&gt;dfs.nameservices&lt;/name&gt;        &lt;value&gt;mycluster&lt;/value&gt;    &lt;/property&gt;   &lt;property&gt;     &lt;name&gt;dfs.ha.namenodes.mycluster&lt;/name&gt;     &lt;value&gt;nn1,nn2,nn3&lt;/value&gt;   &lt;/property&gt;    &lt;property&gt;       &lt;name&gt;dfs.namenode.rpc-address.mycluster.nn1&lt;/name&gt;       &lt;value&gt;hadoop-cluster-1:8020&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;       &lt;name&gt;dfs.namenode.rpc-address.mycluster.nn2&lt;/name&gt;       &lt;value&gt;hadoop-cluster-2:8020&lt;/value&gt;    &lt;/property&gt;    &lt;property&gt;       &lt;name&gt;dfs.namenode.rpc-address.mycluster.nn3&lt;/name&gt;       &lt;value&gt;hadoop-cluster-3:8020&lt;/value&gt;    &lt;/property&gt;&lt;property&gt;  &lt;name&gt;dfs.namenode.http-address.mycluster.nn1&lt;/name&gt;  &lt;value&gt;hadoop-cluster-1:9870&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;dfs.namenode.http-address.mycluster.nn2&lt;/name&gt;  &lt;value&gt;hadoop-cluster-2:9870&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;dfs.namenode.http-address.mycluster.nn3&lt;/name&gt;  &lt;value&gt;hadoop-cluster-3:9870&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;  &lt;value&gt;qjournal://hadoop-cluster-1:8485;hadoop-cluster-2:8485;hadoop-cluster-3:8485/mycluster&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;dfs.journalnode.edits.dir&lt;/name&gt;    &lt;value&gt;/data/tools/hadoop-3.3.0/journaldata&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;    &lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;dfs.client.failover.proxy.provider.mycluster&lt;/name&gt;  &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;    &lt;value&gt;        sshfence    &lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;    &lt;value&gt;/root/.ssh/id_rsa&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;dfs.ha.fencing.ssh.connect-timeout&lt;/name&gt;    &lt;value&gt;30000&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;</code></pre><ul><li><p>copy hadoop包到其他机器的文件夹下</p></li><li><p>启动journal node</p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hdfs --daemon start journalnode</span></code></pre><blockquote><p> 启动失败</p></blockquote><pre><code> 2020-08-10 06:39:05,583 INFO org.apache.hadoop.util.ExitUtil: Exiting with status -1: java.io.IOException: java.lang.RuntimeException: Could not resolve Kerberos principal name: java.net.UnknownHostException: hadoop-cluster-3.novalocal: hadoop-cluster-3.novalocal: Name or service not known# 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.226.63 hadoop-cluster-3  hadoop-cluster-3.novalocal192.168.226.65 hadoop-cluster-2   hadoop-cluster-2.novalocal192.168.226.64 hadoop-cluster-1   hadoop-cluster-1.novalocal</code></pre><ul><li><p>启动 namenode  cluster-3</p><ul><li>格式化</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hdfs namenode -format</span>2020-08-10 08:33:52,826 INFO namenode.FSImage: Allocated new BlockPoolId: BP-769463694-192.168.226.64-15970484328262020-08-10 08:33:52,851 INFO common.Storage: Storage directory /data/tools/hadoop-3.3.0/tmp/dfs/name has been successfully formatted.  <span class="token comment" spellcheck="true">#format 成功</span>2020-08-10 08:33:53,320 INFO namenode.FSImageFormatProtobuf: Saving image <span class="token function">file</span> /data/tools/hadoop-3.3.0/tmp/dfs/name/current/fsimage.ckpt_0000000000000000000 using no compression2020-08-10 08:33:53,480 INFO namenode.FSImageFormatProtobuf: Image <span class="token function">file</span> /data/tools/hadoop-3.3.0/tmp/dfs/name/current/fsimage.ckpt_0000000000000000000 of size 399 bytes saved <span class="token keyword">in</span> 0 seconds <span class="token keyword">.</span>2020-08-10 08:33:53,503 INFO namenode.NNStorageRetentionManager: Going to retain 1 images with txid <span class="token operator">>=</span> 02020-08-10 08:33:53,546 INFO namenode.FSImage: FSImageSaver clean checkpoint: txid<span class="token operator">=</span>0 when meet shutdown.2020-08-10 08:33:53,546 INFO namenode.NameNode: SHUTDOWN_MSG: /************************************************************SHUTDOWN_MSG: Shutting down NameNode at hadoop-cluster-1/192.168.226.64************************************************************/<span class="token punctuation">[</span>root@hadoop-cluster-1 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># bin/hdfs --daemon start namenode</span><span class="token punctuation">[</span>root@hadoop-cluster-1 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  bin/hdfs zkfc -formatZK</span>2020-08-10 08:35:04,689 INFO tools.DFSZKFailoverController: STARTUP_MSG: </code></pre><ul><li>启动</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># bin/hdfs --daemon start namenode</span></code></pre><ul><li>启动 cluster-2 , cluster-1 namenode </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># bin/hdfs namenode -bootstrapStandby  #拉取元数据</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>About to bootstrap Standby ID nn3 from:           Nameservice ID: mycluster        Other Namenode ID: nn1  Other NN<span class="token string">'s HTTP address: http://hadoop-cluster-1:9870  Other NN'</span>s IPC  address: hadoop-cluster-1/192.168.226.64:9820             Namespace ID: 1318654867            Block pool ID: BP-769463694-192.168.226.64-1597048432826               Cluster ID: CID-601989a3-e419-4ef5-8ae1-1d960eb3c75d           Layout version: -65       isUpgradeFinalized: <span class="token boolean">true</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>2020-08-10 08:34:47,970 INFO common.Storage: Storage directory /data/tools/hadoop-3.3.0/tmp/dfs/name has been successfully formatted.2020-08-10 08:34:48,056 INFO namenode.FSEditLog: Edit logging is async:true2020-08-10 08:34:48,177 INFO namenode.TransferFsImage: Opening connection to http://hadoop-cluster-1:9870/imagetransfer?getimage<span class="token operator">=</span>1<span class="token operator">&amp;</span>txid<span class="token operator">=</span>0<span class="token operator">&amp;</span>storageInfo<span class="token operator">=</span>-65:1318654867:1597048432826:CID-601989a3-e419-4ef5-8ae1-1d960eb3c75d<span class="token operator">&amp;</span>bootstrapstandby<span class="token operator">=</span>true2020-08-10 08:34:48,217 INFO common.Util: Combined <span class="token function">time</span> <span class="token keyword">for</span> <span class="token function">file</span> download and fsync to all disks took 0.01s. The <span class="token function">file</span> download took 0.00s at 0.00 KB/s. Synchronous <span class="token punctuation">(</span>fsync<span class="token punctuation">)</span> <span class="token function">write</span> to disk of /data/tools/hadoop-3.3.0/tmp/dfs/name/current/fsimage.ckpt_0000000000000000000 took 0.00s.2020-08-10 08:34:48,217 INFO namenode.TransferFsImage: Downloaded <span class="token function">file</span> fsimage.ckpt_0000000000000000000 size 399 bytes.2020-08-10 08:34:48,233 INFO ha.BootstrapStandby: Skipping InMemoryAliasMap bootstrap as it was not configured<span class="token comment" spellcheck="true"># 启动namenode</span><span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  bin/hdfs --daemon start namenode</span></code></pre><ul><li>格式化ZKFC<ul><li>在cluster-3执行</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-3 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  bin/hdfs zkfc -formatZK</span>2020-08-10 08:35:05,356 INFO zookeeper.ClientCnxn: zookeeper.request.timeout value is 0. feature enabled<span class="token operator">=</span>2020-08-10 08:35:05,368 INFO zookeeper.ClientCnxn: Opening socket connection to server hadoop-cluster-1/192.168.226.64:2181. Will not attempt to authenticate using SASL <span class="token punctuation">(</span>unknown error<span class="token punctuation">)</span>2020-08-10 08:35:05,377 INFO zookeeper.ClientCnxn: Socket connection established, initiating session, client: /192.168.226.64:41577, server: hadoop-cluster-1/192.168.226.64:21812020-08-10 08:35:05,420 INFO zookeeper.ClientCnxn: Session establishment complete on server hadoop-cluster-1/192.168.226.64:2181, sessionid <span class="token operator">=</span> 0x100007377b50000, negotiated <span class="token function">timeout</span> <span class="token operator">=</span> 100002020-08-10 08:35:05,424 INFO ha.ActiveStandbyElector: Session connected.2020-08-10 08:35:05,480 INFO ha.ActiveStandbyElector: Successfully created /hadoop-ha/mycluster <span class="token keyword">in</span> ZK.2020-08-10 08:35:05,593 INFO zookeeper.ZooKeeper: Session: 0x100007377b50000 closed2020-08-10 08:35:05,593 WARN ha.ActiveStandbyElector: Ignoring stale result from old client with sessionId 0x100007377b500002020-08-10 08:35:05,594 INFO zookeeper.ClientCnxn: EventThread shut down <span class="token keyword">for</span> session: 0x100007377b500002020-08-10 08:35:05,597 INFO tools.DFSZKFailoverController: SHUTDOWN_MSG: </code></pre><ul><li>启用 zkfc (all controller nodes)</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># bin/hdfs --daemon start zkfc</span></code></pre><ul><li>配置yarn(all cluster nodes)<ul><li>resourcemanager </li></ul></li></ul><pre><code>#参考官方最小化配置[root@hadoop-cluster-2 hadoop-3.3.0]# cat etc/hadoop/yarn-site.xml &lt;?xml version=&quot;1.0&quot;?&gt;&lt;!--  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);  you may not use this file except in compliance with the License.  You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License. See accompanying LICENSE file.--&gt;&lt;configuration&gt;&lt;!-- Site specific YARN configuration properties --&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.ha.enabled&lt;/name&gt;  &lt;value&gt;true&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.cluster-id&lt;/name&gt;  &lt;value&gt;cluster1&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.ha.rm-ids&lt;/name&gt;  &lt;value&gt;rm1,rm2,rm3&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.hostname.rm1&lt;/name&gt;  &lt;value&gt;hadoop-cluster-1&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.hostname.rm2&lt;/name&gt;  &lt;value&gt;hadoop-cluster-2&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.hostname.rm3&lt;/name&gt;  &lt;value&gt;hadoop-cluster-3&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.webapp.address.rm1&lt;/name&gt;  &lt;value&gt;hadoop-cluster-1:8088&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.webapp.address.rm2&lt;/name&gt;  &lt;value&gt;hadoop-cluster-2:8088&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;yarn.resourcemanager.webapp.address.rm3&lt;/name&gt;  &lt;value&gt;hadoop-cluster-3:8088&lt;/value&gt;&lt;/property&gt;&lt;property&gt;  &lt;name&gt;hadoop.zk.address&lt;/name&gt;  &lt;value&gt;hadoop-cluster-1:2181,hadoop-cluster-2:2181,hadoop-cluster-3:2181&lt;/value&gt;&lt;/property&gt;&lt;/configuration&gt;</code></pre><blockquote><p>默认是主备模式 , 先配置3个看启动什么结果</p></blockquote><pre><code>[root@hadoop-cluster-3 hadoop-3.3.0]# ./bin/yarn rmadmin -getServiceState rm12020-08-12 03:42:39,832 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicablestandby[root@hadoop-cluster-3 hadoop-3.3.0]# ./bin/yarn rmadmin -getServiceState rm22020-08-12 03:42:45,492 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableactive[root@hadoop-cluster-3 hadoop-3.3.0]# ./bin/yarn rmadmin -getServiceState rm32020-08-12 03:42:48,463 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicablestandby</code></pre><ul><li>启动resourcemanage<pre><code>[root@hadoop-cluster-2 hadoop-3.3.0]# ./bin/yarn --daemon start resourcemanager</code></pre></li></ul><h4 id="data-node-1"><a href="#data-node-1" class="headerlink" title="data node"></a>data node</h4><blockquote><p>配置文件直接copy</p></blockquote><ul><li>datanode</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-data-node-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ./bin/hdfs --daemon start datanode</span></code></pre><ul><li>nodemanager</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-data-node-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ./bin/yarn --daemon start nodemanager</span></code></pre><h4 id="集群状态查看"><a href="#集群状态查看" class="headerlink" title="集群状态查看"></a>集群状态查看</h4><ul><li>yarn</li></ul><pre><code>[root@hadoop-cluster-3 hadoop-3.3.0]# ./bin/yarn  node -all -list2020-08-13 01:19:46,181 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableTotal Nodes:5         Node-Id         Node-State    Node-Http-Address    Number-of-Running-Containershadoop-data-node-3:44796            RUNNING    hadoop-data-node-3:8042                               0hadoop-data-node-1:48271            RUNNING    hadoop-data-node-1:8042                               0hadoop-data-node-4:49883            RUNNING    hadoop-data-node-4:8042                               0hadoop-data-node-2:59034            RUNNING    hadoop-data-node-2:8042                               0[root@hadoop-cluster-3 hadoop-3.3.0]# ./bin/yarn rmadmin -getAllServiceState2020-08-13 01:21:27,869 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicablehadoop-cluster-1:8033                              active    hadoop-cluster-2:8033                              standby   hadoop-cluster-3:8033                              standby   [root@hadoop-cluster-3 hadoop-3.3.0]# </code></pre><ul><li>hdfs</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hadoop dfsadmin -report</span>WARNING: Use of this script to execute dfsadmin is deprecated.WARNING: Attempting to execute replacement <span class="token string">"hdfs dfsadmin"</span> instead.2020-08-13 01:32:27,451 WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicableConfigured Capacity: 429287014400 <span class="token punctuation">(</span>399.80 GB<span class="token punctuation">)</span>Present Capacity: 420413999971 <span class="token punctuation">(</span>391.54 GB<span class="token punctuation">)</span>DFS Remaining: 420411299249 <span class="token punctuation">(</span>391.54 GB<span class="token punctuation">)</span>DFS Used: 2700722 <span class="token punctuation">(</span>2.58 MB<span class="token punctuation">)</span>DFS Used%: 0.00%Replicated Blocks:    Under replicated blocks: 0    Blocks with corrupt replicas: 0    Missing blocks: 0    Missing blocks <span class="token punctuation">(</span>with replication factor 1<span class="token punctuation">)</span>: 0    Low redundancy blocks with highest priority to recover: 0    Pending deletion blocks: 0Erasure Coded Block Groups:     Low redundancy block groups: 0    Block <span class="token function">groups</span> with corrupt internal blocks: 0    Missing block groups: 0    Low redundancy blocks with highest priority to recover: 0    Pending deletion blocks: 0-------------------------------------------------Live datanodes <span class="token punctuation">(</span>4<span class="token punctuation">)</span>:Name: 192.168.226.66:9866 <span class="token punctuation">(</span>hadoop-data-node-2<span class="token punctuation">)</span>Hostname: hadoop-data-node-2Decommission Status <span class="token keyword">:</span> NormalConfigured Capacity: 107321753600 <span class="token punctuation">(</span>99.95 GB<span class="token punctuation">)</span>DFS Used: 868352 <span class="token punctuation">(</span>848 KB<span class="token punctuation">)</span>Non DFS Used: 1490026496 <span class="token punctuation">(</span>1.39 GB<span class="token punctuation">)</span>DFS Remaining: 105293993621 <span class="token punctuation">(</span>98.06 GB<span class="token punctuation">)</span>DFS Used%: 0.00%DFS Remaining%: 98.11%Configured Cache Capacity: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Remaining: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used%: 100.00%Cache Remaining%: 0.00%Xceivers: 9Last contact: Thu Aug 13 01:32:27 UTC 2020Last Block Report: Wed Aug 12 21:04:08 UTC 2020Num of Blocks: 88Name: 192.168.226.67:9866 <span class="token punctuation">(</span>hadoop-data-node-3<span class="token punctuation">)</span>Hostname: hadoop-data-node-3Decommission Status <span class="token keyword">:</span> NormalConfigured Capacity: 107321753600 <span class="token punctuation">(</span>99.95 GB<span class="token punctuation">)</span>DFS Used: 882098 <span class="token punctuation">(</span>861.42 KB<span class="token punctuation">)</span>Non DFS Used: 1490025038 <span class="token punctuation">(</span>1.39 GB<span class="token punctuation">)</span>DFS Remaining: 105159763059 <span class="token punctuation">(</span>97.94 GB<span class="token punctuation">)</span>DFS Used%: 0.00%DFS Remaining%: 97.99%Configured Cache Capacity: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Remaining: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used%: 100.00%Cache Remaining%: 0.00%Xceivers: 11Last contact: Thu Aug 13 01:32:27 UTC 2020Last Block Report: Wed Aug 12 21:21:20 UTC 2020Num of Blocks: 89Name: 192.168.226.68:9866 <span class="token punctuation">(</span>hadoop-data-node-1<span class="token punctuation">)</span>Hostname: hadoop-data-node-1Decommission Status <span class="token keyword">:</span> NormalConfigured Capacity: 107321753600 <span class="token punctuation">(</span>99.95 GB<span class="token punctuation">)</span>DFS Used: 98304 <span class="token punctuation">(</span>96 KB<span class="token punctuation">)</span>Non DFS Used: 1987067904 <span class="token punctuation">(</span>1.85 GB<span class="token punctuation">)</span>DFS Remaining: 104797718122 <span class="token punctuation">(</span>97.60 GB<span class="token punctuation">)</span>DFS Used%: 0.00%DFS Remaining%: 97.65%Configured Cache Capacity: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Remaining: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used%: 100.00%Cache Remaining%: 0.00%Xceivers: 9Last contact: Thu Aug 13 01:32:27 UTC 2020Last Block Report: Thu Aug 13 01:05:53 UTC 2020Num of Blocks: 4Name: 192.168.226.69:9866 <span class="token punctuation">(</span>hadoop-data-node-4<span class="token punctuation">)</span>Hostname: hadoop-data-node-4Decommission Status <span class="token keyword">:</span> NormalConfigured Capacity: 107321753600 <span class="token punctuation">(</span>99.95 GB<span class="token punctuation">)</span>DFS Used: 851968 <span class="token punctuation">(</span>832 KB<span class="token punctuation">)</span>Non DFS Used: 1489993728 <span class="token punctuation">(</span>1.39 GB<span class="token punctuation">)</span>DFS Remaining: 105159824447 <span class="token punctuation">(</span>97.94 GB<span class="token punctuation">)</span>DFS Used%: 0.00%DFS Remaining%: 97.99%Configured Cache Capacity: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Remaining: 0 <span class="token punctuation">(</span>0 B<span class="token punctuation">)</span>Cache Used%: 100.00%Cache Remaining%: 0.00%Xceivers: 11Last contact: Thu Aug 13 01:32:26 UTC 2020Last Block Report: Wed Aug 12 22:04:37 UTC 2020Num of Blocks: 86<span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ./bin/hdfs  haadmin  -getAllServiceState</span>2020-08-13 01:32:35,172 WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="token keyword">for</span> your platform<span class="token punctuation">..</span>. using builtin-java classes where applicablehadoop-cluster-1:8020                              standby   hadoop-cluster-2:8020                              active    hadoop-cluster-3:8020                              standby   <span class="token punctuation">[</span>root@hadoop-cluster-2 hadoop-3.3.0<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hadoop </category>
          
          <category> bigdata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bigdata </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装  ceph 集群安装</title>
      <link href="/2020/08/06/openstack-19/"/>
      <url>/2020/08/06/openstack-19/</url>
      
        <content type="html"><![CDATA[<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/hosts </span>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain610.10.102.191 controller0110.10.102.192 controller0210.10.102.193 controller0310.10.102.190 controller10.10.100.191 ceph-controller0110.10.100.192 ceph-controller0210.10.100.193 ceph-controller03</code></pre><h3 id="all-controller-执行"><a href="#all-controller-执行" class="headerlink" title="all controller 执行"></a>all controller 执行</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install ceph ceph-radosgw</span></code></pre><blockquote><p>需要拷贝公钥(已经在环境准备中完成)</p></blockquote><h3 id="ceph-controller01-执行"><a href="#ceph-controller01-执行" class="headerlink" title="ceph-controller01 执行"></a>ceph-controller01 执行</h3><ul><li>配置monitor manage<ul><li>/etc/ceph/ceph.conf</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>global<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># specify cluster network for monitoring</span>cluster network <span class="token operator">=</span> 10.10.100.0/24<span class="token comment" spellcheck="true"># specify public network</span>public network <span class="token operator">=</span> 10.10.100.0/24<span class="token comment" spellcheck="true"># specify UUID genarated above</span>fsid <span class="token operator">=</span> 38bc3fbb-1752-4cb1-b16c-2e9d5d402891<span class="token comment" spellcheck="true"># specify IP address of Monitor Daemon</span>mon host <span class="token operator">=</span> 10.10.100.191,10.10.100.192,10.10.100.193<span class="token comment" spellcheck="true"># specify Hostname of Monitor Daemon</span>mon initial members <span class="token operator">=</span> ceph-controller01,ceph-controller02,ceph-controller03osd pool default crush rule <span class="token operator">=</span> -1<span class="token comment" spellcheck="true"># mon.(Node name)</span><span class="token punctuation">[</span>mon.ceph-controller01<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># specify Hostname of Monitor Daemon</span>host <span class="token operator">=</span> ceph-controller01<span class="token comment" spellcheck="true"># specify IP address of Monitor Daemon</span>mon addr <span class="token operator">=</span> 10.10.100.191<span class="token comment" spellcheck="true"># allow to delete pools</span>mon allow pool delete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># mon.(Node name)</span><span class="token punctuation">[</span>mon.ceph-controller02<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># specify Hostname of Monitor Daemon</span>host <span class="token operator">=</span> ceph-controller02<span class="token comment" spellcheck="true"># specify IP address of Monitor Daemon</span>mon addr <span class="token operator">=</span> 10.10.100.192<span class="token comment" spellcheck="true"># allow to delete pools</span>mon allow pool delete <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># mon.(Node name)</span><span class="token punctuation">[</span>mon.ceph-controller03<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># specify Hostname of Monitor Daemon</span>host <span class="token operator">=</span> ceph-controller03<span class="token comment" spellcheck="true"># specify IP address of Monitor Daemon</span>mon addr <span class="token operator">=</span> 10.10.100.193<span class="token comment" spellcheck="true"># allow to delete pools</span>mon allow pool delete <span class="token operator">=</span> <span class="token boolean">true</span></code></pre><ul><li>创建密钥</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ceph-authtool --create-keyring /etc/ceph/ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'</span>creating /etc/ceph/ceph.mon.keyring</code></pre><ul><li>创建adminkey</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'</span>creating /etc/ceph/ceph.client.admin.keyring</code></pre><ul><li>创建bootstrap key</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'</span>creating /var/lib/ceph/bootstrap-osd/ceph.keyring</code></pre><ul><li>导入key</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 需要导入2个key</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring</span>importing contents of /etc/ceph/ceph.client.admin.keyring into /etc/ceph/ceph.mon.keyring<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ceph-authtool /etc/ceph/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring</span>importing contents of /var/lib/ceph/bootstrap-osd/ceph.keyring into /etc/ceph/ceph.mon.keyring</code></pre><ul><li>创建monitor map</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#  cobber覆盖已有的monmaptool</span><span class="token comment" spellcheck="true">#  fsid  ceph.conf 文件的uuidgen key</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># monmaptool --create --add  ceph-controller01  10.10.100.191    --add ceph-controller02 10.10.100.192  --add ceph-controller03 10.10.100.193 --fsid  38bc3fbb-1752-4cb1-b16c-2e9d5d402891   /etc/ceph/monmap --clobber</span>monmaptool: monmap <span class="token function">file</span> /etc/ceph/monmapmonmaptool: <span class="token keyword">set</span> fsid to 38bc3fbb-1752-4cb1-b16c-2e9d5d402891monmaptool: writing epoch 0 to /etc/ceph/monmap <span class="token punctuation">(</span>3 monitors<span class="token punctuation">)</span></code></pre><ul><li>add ceph monitor daemon </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  mkdir -p /var/lib/ceph/mon/ceph-controller01</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ceph-mon --cluster ceph --mkfs -i ceph-controller01 --monmap /etc/ceph/monmap --keyring /etc/ceph/ceph.mon.keyring</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chown ceph. /etc/ceph/ceph.*</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  chown -R ceph. /var/lib/ceph/mon/ceph-ceph-controller01  /var/lib/ceph/bootstrap-osd</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable --now ceph-mon@ceph-controller01 # --now 启动ceoh-mon</span>Created symlink /etc/systemd/system/ceph-mon.target.wants/ceph-mon@ceph-controller01.service → /usr/lib/systemd/system/ceph-mon@.service.</code></pre><h3 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h3><ul><li>启动直接报错</li></ul><pre><code>2020-08-06T11:17:34.411+0800 7f73b8337700  4 rocksdb: [db/db_impl.cc:390] Shutdown: canceling all background work2020-08-06T11:17:34.412+0800 7f73b8337700  4 rocksdb: [db/db_impl.cc:563] Shutdown complete2020-08-06T11:17:34.412+0800 7f73b8337700  0 ceph-mon: created monfs at /var/lib/ceph/mon/ceph-ceph-controller01 for mon.ceph-controller01[root@controller01 ceph]# </code></pre><ul><li>解决在配置文件增加参数</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/ceph/ceph.conf </span><span class="token punctuation">[</span>global<span class="token punctuation">]</span>osd max object name len <span class="token operator">=</span> 256osd max object namespace len <span class="token operator">=</span> 64<span class="token comment" spellcheck="true"># 重新生成mon文件</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># monmaptool --create --generate -c /etc/ceph/ceph.conf /etc/ceph/monmap --clobber</span>monmaptool: monmap <span class="token function">file</span> /etc/ceph/monmapmonmaptool: <span class="token keyword">set</span> fsid to 38bc3fbb-1752-4cb1-b16c-2e9d5d402891monmaptool: writing epoch 0 to /etc/ceph/monmap <span class="token punctuation">(</span>3 monitors<span class="token punctuation">)</span></code></pre><ul><li>启动报错monmap 不匹配</li></ul><pre class=" language-bash"><code class="language-bash">2020-08-06T14:36:14.915+0800 7f47ac57e700 -1 WARNING: <span class="token string">'mon addr'</span> config option <span class="token punctuation">[</span>v2:10.10.100.191:3300/0,v1:10.10.100.191:6789/0<span class="token punctuation">]</span> does not match monmap <span class="token function">file</span>         continuing with monmap configuration<span class="token comment" spellcheck="true"># 日志启用v2</span><span class="token punctuation">[</span>root@controller01 ceph<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># monmaptool --print /etc/ceph/monmap </span>monmaptool: monmap <span class="token function">file</span> /etc/ceph/monmapepoch 0fsid 38bc3fbb-1752-4cb1-b16c-2e9d5d402891last_changed 2020-08-06T16:44:53.931188+0800created 2020-08-06T16:44:53.931188+0800min_mon_release 0 <span class="token punctuation">(</span>unknown<span class="token punctuation">)</span>0: v1:10.10.100.191:6789/0 mon.ceph-controller01<span class="token comment" spellcheck="true"># 解决方式</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># monmaptool --clobber  --create   --addv  ceph-controller01  [v2:10.10.100.191:3000,v1:10.10.100.191:6789]  /etc/ceph/monmap </span>monmaptool: monmap <span class="token function">file</span> /etc/ceph/monmapmonmaptool: generated fsid 1699c718-c714-4140-9967-1604408601e6monmaptool: writing epoch 0 to /etc/ceph/monmap <span class="token punctuation">(</span>1 monitors<span class="token punctuation">)</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># monmaptool  --print /etc/ceph/monmap </span>monmaptool: monmap <span class="token function">file</span> /etc/ceph/monmapepoch 0fsid 1699c718-c714-4140-9967-1604408601e6last_changed 2020-08-07T14:04:09.285750+0800created 2020-08-07T14:04:09.285750+0800min_mon_release 0 <span class="token punctuation">(</span>unknown<span class="token punctuation">)</span>0: <span class="token punctuation">[</span>v2:10.10.100.191:3000/0,v1:10.10.100.191:6789/0<span class="token punctuation">]</span> mon.ceph-controller01</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 glance</title>
      <link href="/2020/07/20/openstack-18/"/>
      <url>/2020/07/20/openstack-18/</url>
      
        <content type="html"><![CDATA[<h2 id="controller01"><a href="#controller01" class="headerlink" title="controller01"></a>controller01</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><pre><code>[root@controller01 ~]# mysql -u rootWelcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 17Server version: 10.3.17-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt; CREATE DATABASE glance;Query OK, 1 row affected (0.082 sec)MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#39;glance&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;glance&#39;;Query OK, 0 rows affected (0.053 sec)MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON glance.* TO &#39;glance&#39;@&#39;%&#39; IDENTIFIED BY &#39;glance&#39;;Query OK, 0 rows affected (0.046 sec)MariaDB [(none)]&gt; </code></pre><h4 id="create-project"><a href="#create-project" class="headerlink" title="create project"></a>create project</h4><pre><code>[root@controller01 ~]# source openrc [root@controller01 ~]# openstack project create service+-------------+----------------------------------+| Field       | Value                            |+-------------+----------------------------------+| description |                                  || domain_id   | default                          || enabled     | True                             || id          | acd60c0b03784f07a3c3a9b36b4b0515 || is_domain   | False                            || name        | service                          || options     | {}                               || parent_id   | default                          || tags        | []                               |+-------------+----------------------------------+</code></pre><h4 id="create-user"><a href="#create-user" class="headerlink" title="create user"></a>create user</h4><pre><code>[root@controller01 ~]# openstack user create --domain default --password-prompt glanceUser Password:Repeat User Password:+---------------------+----------------------------------+| Field               | Value                            |+---------------------+----------------------------------+| domain_id           | default                          || enabled             | True                             || id                  | 9130a16d1c054d4398d92903c448b0a1 || name                | glance                           || options             | {}                               || password_expires_at | None                             |+---------------------+----------------------------------+[root@controller01 ~]# # set default user glance</code></pre><h4 id="Add-the-admin-role-to-the-glance-user-and-service-project"><a href="#Add-the-admin-role-to-the-glance-user-and-service-project" class="headerlink" title="Add the admin role to the glance user and service project"></a>Add the admin role to the glance user and service project</h4><pre><code>[root@controller01 ~]# openstack role add --project service --user glance admin[root@controller01 ~]# </code></pre><h4 id="Create-the-glance-service-entity"><a href="#Create-the-glance-service-entity" class="headerlink" title="Create the glance service entity:"></a>Create the glance service entity:</h4><pre><code>[root@controller01 ~]# openstack service create --name glance  --description &quot;OpenStack Image&quot; image+-------------+----------------------------------+| Field       | Value                            |+-------------+----------------------------------+| description | OpenStack Image                  || enabled     | True                             || id          | 15091ede7e0e48e7ba8af5f3c7d99c34 || name        | glance                           || type        | image                            |+-------------+----------------------------------+[root@controller01 ~]# </code></pre><h4 id="Create-the-Image-service-API-endpoints"><a href="#Create-the-Image-service-API-endpoints" class="headerlink" title="Create the Image service API endpoints"></a>Create the Image service API endpoints</h4><pre><code>[root@controller01 ~]# openstack endpoint create --region RegionOne image public http://controller:9292+--------------+----------------------------------+| Field        | Value                            |+--------------+----------------------------------+| enabled      | True                             || id           | 0c14e0bee5f54753a2ce7a72250ce628 || interface    | public                           || region       | RegionOne                        || region_id    | RegionOne                        || service_id   | 15091ede7e0e48e7ba8af5f3c7d99c34 || service_name | glance                           || service_type | image                            || url          | http://controller:9292           |+--------------+----------------------------------+[root@controller01 ~]# openstack endpoint create --region RegionOne image internal http://controller:9292+--------------+----------------------------------+| Field        | Value                            |+--------------+----------------------------------+| enabled      | True                             || id           | d520f35f49e34ca2add11059ca63687a || interface    | internal                         || region       | RegionOne                        || region_id    | RegionOne                        || service_id   | 15091ede7e0e48e7ba8af5f3c7d99c34 || service_name | glance                           || service_type | image                            || url          | http://controller:9292           |+--------------+----------------------------------+[root@controller01 ~]# openstack endpoint create --region RegionOne  image admin http://controller:9292+--------------+----------------------------------+| Field        | Value                            |+--------------+----------------------------------+| enabled      | True                             || id           | a9fe6e376f5746c09b4be06ca8cfa7d2 || interface    | admin                            || region       | RegionOne                        || region_id    | RegionOne                        || service_id   | 15091ede7e0e48e7ba8af5f3c7d99c34 || service_name | glance                           || service_type | image                            || url          | http://controller:9292           |+--------------+----------------------------------+#### admin internal  public </code></pre><blockquote><p>centos rdo 安装 cli 缺少创建项目</p></blockquote><h3 id="安装glance"><a href="#安装glance" class="headerlink" title="安装glance"></a>安装glance</h3><h4 id="Install-the-packages"><a href="#Install-the-packages" class="headerlink" title="Install the packages"></a>Install the packages</h4><pre><code>[root@controller02 ~]# yum install openstack-glance -y</code></pre><h4 id="Edit-the-etc-glance-glance-api-conf"><a href="#Edit-the-etc-glance-glance-api-conf" class="headerlink" title="Edit the /etc/glance/glance-api.conf"></a>Edit the /etc/glance/glance-api.conf</h4><pre><code>[database]connection = mysql+pymysql://glance:glance@controller/glance[keystone_authtoken]www_authenticate_uri  = http://controller:5000auth_url = http://controller:5000memcached_servers = controller01:11211,controller02:11211,controller03:11211auth_type = passwordproject_domain_name = Defaultuser_domain_name = Defaultproject_name = serviceusername = glancepassword = glance[paste_deploy]flavor = keystone[glance_store]stores = file,httpdefault_store = filefilesystem_store_datadir = /var/lib/glance/images/</code></pre><h4 id="Populate-the-Image-service-database"><a href="#Populate-the-Image-service-database" class="headerlink" title="Populate the Image service database:"></a>Populate the Image service database:</h4><pre><code>[root@controller01 ~]# su -s /bin/sh -c &quot;glance-manage db_sync&quot; glanceINFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.INFO  [alembic.runtime.migration] Running upgrade  -&gt; liberty, liberty initialINFO  [alembic.runtime.migration] Running upgrade liberty -&gt; mitaka01, add index on created_at and updated_at columns of &#39;images&#39; tableINFO  [alembic.runtime.migration] Running upgrade mitaka01 -&gt; mitaka02, update metadef os_nova_serverINFO  [alembic.runtime.migration] Running upgrade mitaka02 -&gt; ocata_expand01, add visibility to imagesINFO  [alembic.runtime.migration] Running upgrade ocata_expand01 -&gt; pike_expand01, empty expand for symmetry with pike_contract01INFO  [alembic.runtime.migration] Running upgrade pike_expand01 -&gt; queens_expand01INFO  [alembic.runtime.migration] Running upgrade queens_expand01 -&gt; rocky_expand01, add os_hidden column to images tableINFO  [alembic.runtime.migration] Running upgrade rocky_expand01 -&gt; rocky_expand02, add os_hash_algo and os_hash_value columns to images tableINFO  [alembic.runtime.migration] Running upgrade rocky_expand02 -&gt; train_expand01, empty expand for symmetry with train_contract01INFO  [alembic.runtime.migration] Running upgrade train_expand01 -&gt; ussuri_expand01, empty expand for symmetry with ussuri_expand01INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.Upgraded database to: ussuri_expand01, current revision(s): ussuri_expand01INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.Database migration is up to date. No migration needed.INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.INFO  [alembic.runtime.migration] Running upgrade mitaka02 -&gt; ocata_contract01, remove is_public from imagesINFO  [alembic.runtime.migration] Running upgrade ocata_contract01 -&gt; pike_contract01, drop glare artifacts tablesINFO  [alembic.runtime.migration] Running upgrade pike_contract01 -&gt; queens_contract01INFO  [alembic.runtime.migration] Running upgrade queens_contract01 -&gt; rocky_contract01INFO  [alembic.runtime.migration] Running upgrade rocky_contract01 -&gt; rocky_contract02INFO  [alembic.runtime.migration] Running upgrade rocky_contract02 -&gt; train_contract01INFO  [alembic.runtime.migration] Running upgrade train_contract01 -&gt; ussuri_contract01INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.Upgraded database to: ussuri_contract01, current revision(s): ussuri_contract01INFO  [alembic.runtime.migration] Context impl MySQLImpl.INFO  [alembic.runtime.migration] Will assume non-transactional DDL.Database is synced successfully.</code></pre><h4 id="start"><a href="#start" class="headerlink" title="start"></a>start</h4><pre><code>[root@controller01 ~]#  systemctl enable openstack-glance-api.serviceCreated symlink /etc/systemd/system/multi-user.target.wants/openstack-glance-api.service → /usr/lib/systemd/system/openstack-glance-api.service.[root@controller01 ~]# systemctl start openstack-glance-api.service[root@controller01 ~]# </code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 keystone</title>
      <link href="/2020/07/17/openstack-17/"/>
      <url>/2020/07/17/openstack-17/</url>
      
        <content type="html"><![CDATA[<h2 id="创建vip"><a href="#创建vip" class="headerlink" title="创建vip"></a>创建vip</h2><ul><li>用来安装, 手动创建vip  </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ip address add dev ens5 10.10.102.190/24</span></code></pre><h2 id="controller01-操作"><a href="#controller01-操作" class="headerlink" title="controller01 操作"></a>controller01 操作</h2><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><pre><code>[root@controller01 ~]#  mysql -u rootWelcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 11Server version: 10.3.17-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.MariaDB [(none)]&gt;  CREATE DATABASE keystone;Query OK, 1 row affected (0.008 sec)MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#39;keystone&#39;@&#39;localhost&#39;  IDENTIFIED BY &#39;keystone&#39;;Query OK, 0 rows affected (0.088 sec)MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON keystone.* TO &#39;keystone&#39;@&#39;%&#39;   IDENTIFIED BY &#39;keystone&#39;;Query OK, 0 rows affected (0.102 sec)MariaDB [(none)]&gt; exit</code></pre><h3 id="安装keystone"><a href="#安装keystone" class="headerlink" title="安装keystone"></a>安装keystone</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  yum -y install openstack-keystone httpd  python3-mod_wsgi </span><span class="token comment" spellcheck="true">#修改配置</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/keystone/keystone.conf</span><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://keystone:keystone@controller/keystone<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>provider <span class="token operator">=</span> fernet</code></pre><h3 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "keystone-manage db_sync" keystone</span></code></pre><h3 id="初始化key仓库"><a href="#初始化key仓库" class="headerlink" title="初始化key仓库"></a>初始化key仓库</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span></code></pre><h3 id="boot-认证"><a href="#boot-认证" class="headerlink" title="boot 认证"></a>boot 认证</h3><pre><code>[root@controller01 ~]# keystone-manage bootstrap --bootstrap-password admin  --bootstrap-admin-url http://controller:5000/v3/  --bootstrap-internal-url http://controller:5000/v3/   --bootstrap-public-url http://controller:5000/v3/ --bootstrap-region-id RegionOne</code></pre><h3 id="配置apache-服务器"><a href="#配置apache-服务器" class="headerlink" title="配置apache 服务器"></a>配置apache 服务器</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim  /etc/httpd/conf/httpd.conf</span><span class="token comment" spellcheck="true">#修改ServerName</span>ServerName controller <span class="token comment" spellcheck="true">#不存在需要增加 , controller 为虚拟ip</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span></code></pre><h3 id="启动-httpd"><a href="#启动-httpd" class="headerlink" title="启动 httpd"></a>启动 httpd</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable httpd.service</span>Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl start httpd.service</span></code></pre><h3 id="创建adminrc"><a href="#创建adminrc" class="headerlink" title="创建adminrc"></a>创建adminrc</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat adminrc</span><span class="token function">export</span> OS_USERNAME<span class="token operator">=</span>admin<span class="token function">export</span> OS_PASSWORD<span class="token operator">=</span>admin<span class="token function">export</span> OS_PROJECT_NAME<span class="token operator">=</span>admin<span class="token function">export</span> OS_USER_DOMAIN_NAME<span class="token operator">=</span>Default<span class="token function">export</span> OS_PROJECT_DOMAIN_NAME<span class="token operator">=</span>Default<span class="token function">export</span> OS_AUTH_URL<span class="token operator">=</span>http://controller:5000/v3<span class="token function">export</span> OS_IDENTITY_API_VERSION<span class="token operator">=</span>3</code></pre><h3 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h3><pre><code>[root@controller01 ~]# openstack endpoint list+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                        |+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+| 115e38b57d564564bdb489a8a4d2f6cb | RegionOne | keystone     | identity     | True    | public    | http://controller:5000/v3/ || 402941d7edb94479ae33557cbe3c3282 | RegionOne | keystone     | identity     | True    | admin     | http://controller:5000/v3/ || 6754c0bfd7274d43b615b8b242e09abf | RegionOne | keystone     | identity     | True    | internal  | http://controller:5000/v3/ |+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</code></pre><h2 id="controller02-controller03-安装配置"><a href="#controller02-controller03-安装配置" class="headerlink" title="controller02 , controller03 安装配置"></a>controller02 , controller03 安装配置</h2><ul><li>controller01一样, 不需要执行初始化数据库操作，其他的操作都要执行</li></ul><h2 id="高可用测试"><a href="#高可用测试" class="headerlink" title="高可用测试"></a>高可用测试</h2><pre><code>vip controller01 漂移到 controller02[root@controller02 ~]#  ip address add dev ens5 10.10.102.190/24[root@controller01 ~]#  ip address  delete dev  ens5 10.10.102.190/24[root@controller01 ~]# openstack endpoint list+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                        |+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+| 115e38b57d564564bdb489a8a4d2f6cb | RegionOne | keystone     | identity     | True    | public    | http://controller:5000/v3/ || 402941d7edb94479ae33557cbe3c3282 | RegionOne | keystone     | identity     | True    | admin     | http://controller:5000/v3/ || 6754c0bfd7274d43b615b8b242e09abf | RegionOne | keystone     | identity     | True    | internal  | http://controller:5000/v3/ |+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+# id 相同</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 memache , etcd , ntp</title>
      <link href="/2020/07/17/openstack-16/"/>
      <url>/2020/07/17/openstack-16/</url>
      
        <content type="html"><![CDATA[<h2 id="memache-安装"><a href="#memache-安装" class="headerlink" title="memache 安装"></a>memache 安装</h2><ul><li>安装</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## all nodes执行</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install memcached python3-memcached -y</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable memcached.service</span><span class="token comment" spellcheck="true">## 修改配置文件</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat   /etc/sysconfig/memcached</span>PORT<span class="token operator">=</span><span class="token string">"11211"</span>USER<span class="token operator">=</span><span class="token string">"memcached"</span>MAXCONN<span class="token operator">=</span><span class="token string">"1024"</span>CACHESIZE<span class="token operator">=</span><span class="token string">"64"</span>OPTIONS<span class="token operator">=</span><span class="token string">"-l 127.0.0.1,::1,controller02"</span><span class="token comment" spellcheck="true">## 不同机器监听不同的hostname</span><span class="token comment" spellcheck="true">## 启动</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start memcached.service</span></code></pre><ul><li>test</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># telnet controller01 11211</span>Trying 10.10.102.191<span class="token punctuation">..</span>.Connected to controller01.Escape character is <span class="token string">'^]'</span><span class="token keyword">.</span>^<span class="token punctuation">]</span>telnet<span class="token operator">></span> qConnection closed.<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h2 id="ntp-服务器"><a href="#ntp-服务器" class="headerlink" title="ntp 服务器"></a>ntp 服务器</h2><ul><li>安装</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># all nodes include compute nodes</span><span class="token comment" spellcheck="true"># centos 8 安装安装了?</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  yum install chrony -y</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable chronyd.service</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/chrony.conf </span><span class="token comment" spellcheck="true">#pool 2.centos.pool.ntp.org iburst</span>pool  ntp1.aliyun.com  iburstpool ntp2.aliyun.com  iburst<span class="token comment" spellcheck="true"># enable</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># timedatectl set-ntp yes</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart chronyd.service</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable chronyd</span></code></pre><ul><li>test</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  tcpdump port 123 -i ens3</span>tcpdump: verbose output suppressed, use -v or -vv <span class="token keyword">for</span> full protocol decodelistening on ens3, link-type EN10MB <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>, capture size 262144 bytes16:43:08.041038 IP controller02.50622 <span class="token operator">></span> 120.25.115.20.ntp: NTPv4, Client, length 4816:43:08.066173 IP 120.25.115.20.ntp <span class="token operator">></span> controller02.50622: NTPv4, Server, length 4816:43:08.656191 IP controller02.35652 <span class="token operator">></span> 203.107.6.88.ntp: NTPv4, Client, length 4816:43:08.679818 IP 203.107.6.88.ntp <span class="token operator">></span> controller02.35652: NTPv4, Server, length 48^C4 packets captured4 packets received by filter0 packets dropped by kernel<span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ping  ntp1.aliyun.com</span>PING ntp1.aliyun.com <span class="token punctuation">(</span>120.25.115.20<span class="token punctuation">)</span> 56<span class="token punctuation">(</span>84<span class="token punctuation">)</span> bytes of data.64 bytes from 120.25.115.20 <span class="token punctuation">(</span>120.25.115.20<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>1 ttl<span class="token operator">=</span>49 time<span class="token operator">=</span>25.6 ms^C--- ntp1.aliyun.com <span class="token function">ping</span> statistics ---1 packets transmitted, 1 received, 0% packet loss, <span class="token function">time</span> 0msrtt min/avg/max/mdev <span class="token operator">=</span> 25.591/25.591/25.591/0.000 ms<span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chronyc sources</span>210 Number of sources <span class="token operator">=</span> 2MS Name/IP address         Stratum Poll Reach LastRx Last sample               <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>^* 120.25.115.20                 2   6    17     5   +237us<span class="token punctuation">[</span> -224us<span class="token punctuation">]</span> +/-   16ms^- 203.107.6.88                  2   6    17     5  -2159us<span class="token punctuation">[</span>-2159us<span class="token punctuation">]</span> +/-   21ms</code></pre><h2 id="etcd"><a href="#etcd" class="headerlink" title="etcd"></a>etcd</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#没用到, 先不安装。等出错在&lt;处理</span></code></pre><blockquote><p>memcache 官方说明,不需要高可用安装,只是存cache</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 rabbitmq cluster</title>
      <link href="/2020/07/17/openstack-15/"/>
      <url>/2020/07/17/openstack-15/</url>
      
        <content type="html"><![CDATA[<h3 id="all-controller-nodes"><a href="#all-controller-nodes" class="headerlink" title="all  controller nodes"></a>all  controller nodes</h3><pre><code>[root@controller03 ~]#  yum install rabbitmq-server -y[root@controller03 ~]#  systemctl enable rabbitmq-server.service</code></pre><h3 id="controller01-执行"><a href="#controller01-执行" class="headerlink" title="controller01 执行"></a>controller01 执行</h3><pre><code>[root@controller01 ~]# service rabbitmq-server start   # 启动完成生成文件 /var/lib/rabbitmq/.erlang.cookie# copy文件到controller02 , controller03[root@controller01 ~]# scp /var/lib/rabbitmq/.erlang.cookie root@controller03:/var/lib/rabbitmq/.erlang.cookie</code></pre><h1 id="controller02-controller03-执行"><a href="#controller02-controller03-执行" class="headerlink" title="controller02 ,controller03 执行"></a>controller02 ,controller03 执行</h1><ul><li>修改文件权限 </li></ul><pre><code>[root@controller02 ~]# chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie[root@controller02 ~]# chmod 400 /var/lib/rabbitmq/.erlang.cookie# controller02 , controller03  执行## 启动rabbitmq-server[root@controller03 ~]# systemctl start rabbitmq-server.service[root@controller03 ~]# rabbitmqctl stop_app[root@controller03 ~]#  rabbitmqctl join_cluster --ram rabbit@controller01</code></pre><h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rabbitmqctl cluster_status</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rabbitmqctl cluster_status</span>Cluster status of node rabbit@controller01 <span class="token punctuation">..</span>.BasicsCluster name: rabbit@controller01Disk Nodesrabbit@controller01RAM Nodesrabbit@controller02rabbit@controller03Running Nodesrabbit@controller01rabbit@controller02rabbit@controller03Versionsrabbit@controller01: RabbitMQ 3.8.3 on Erlang 22.3.4.1rabbit@controller02: RabbitMQ 3.8.3 on Erlang 22.3.4.1rabbit@controller03: RabbitMQ 3.8.3 on Erlang 22.3.4.1Alarms<span class="token punctuation">(</span>none<span class="token punctuation">)</span>Network Partitions<span class="token punctuation">(</span>none<span class="token punctuation">)</span>ListenersNode: rabbit@controller01, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 25672, protocol: clustering, purpose: inter-node and CLI tool communicationNode: rabbit@controller01, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 5672, protocol: amqp, purpose: AMQP 0-9-1 and AMQP 1.0Node: rabbit@controller02, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 25672, protocol: clustering, purpose: inter-node and CLI tool communicationNode: rabbit@controller02, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 5672, protocol: amqp, purpose: AMQP 0-9-1 and AMQP 1.0Node: rabbit@controller03, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 25672, protocol: clustering, purpose: inter-node and CLI tool communicationNode: rabbit@controller03, interface: <span class="token punctuation">[</span>::<span class="token punctuation">]</span>, port: 5672, protocol: amqp, purpose: AMQP 0-9-1 and AMQP 1.0Feature flagsFlag: implicit_default_bindings, state: enabledFlag: quorum_queue, state: enabledFlag: virtual_host_metadata, state: enabled<span class="token comment" spellcheck="true">## 以后service  rabbitmq-server restart</span></code></pre><h3 id="创建用户-配置权限"><a href="#创建用户-配置权限" class="headerlink" title="创建用户,配置权限"></a>创建用户,配置权限</h3><pre><code>[root@controller01 ~]#  rabbitmqctl add_user openstack openstackCreating user &quot;openstack&quot;[root@controller01 ~]# rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;Setting permissions for user &quot;openstack&quot; in vhost &quot;/&quot;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 Mysql galera cluster</title>
      <link href="/2020/07/17/openstack-14/"/>
      <url>/2020/07/17/openstack-14/</url>
      
        <content type="html"><![CDATA[<h2 id="准备-管理网段"><a href="#准备-管理网段" class="headerlink" title="准备 管理网段"></a>准备 管理网段</h2><ul><li>10.10.102.191 controller1</li><li>10.10.102.192 controller2</li><li>10.10.102.193 controller3</li></ul><h3 id="在控制节点运行"><a href="#在控制节点运行" class="headerlink" title="在控制节点运行"></a>在控制节点运行</h3><ul><li>安装mariadb all node</li></ul><pre><code>[root@cotroller01 yum.repos.d]# yum install mariadb-server mariadb galera xinetd rsync lsof -y[root@cotroller01 yum.repos.d]# yum -y install  python3-PyMySQL</code></pre><ul><li>安装galera server<ul><li>only controller 01</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install mariadb-galera-server</span></code></pre><h3 id="修改配置文件-all-node"><a href="#修改配置文件-all-node" class="headerlink" title="修改配置文件(all node)"></a>修改配置文件(all node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/my.cnf.d/mariadb-server.cnf </span><span class="token punctuation">[</span>galera<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># Mandatory settings</span><span class="token comment" spellcheck="true">#wsrep_on=ON</span><span class="token comment" spellcheck="true">#wsrep_provider=</span><span class="token comment" spellcheck="true">#wsrep_cluster_address=</span><span class="token comment" spellcheck="true">#binlog_format=row</span><span class="token comment" spellcheck="true">#default_storage_engine=InnoDB</span><span class="token comment" spellcheck="true">#innodb_autoinc_lock_mode=2</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Allow server to accept connections on all interfaces.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#bind-address=0.0.0.0</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Optional setting</span><span class="token comment" spellcheck="true">#wsrep_slave_threads=1</span><span class="token comment" spellcheck="true">#innodb_flush_log_at_trx_commit=0</span>wsrep_on<span class="token operator">=</span>ONwsrep_provider<span class="token operator">=</span>/usr/lib64/galera/libgalera_smm.sowsrep_cluster_address<span class="token operator">=</span><span class="token string">"gcomm://10.10.102.191,10.10.102.192,10.10.102.193"</span>wsrep_node_name<span class="token operator">=</span> controller01wsrep_node_address<span class="token operator">=</span>10.10.102.191binlog_format<span class="token operator">=</span>rowdefault_storage_engine<span class="token operator">=</span>InnoDBinnodb_autoinc_lock_mode<span class="token operator">=</span>2wsrep_slave_threads<span class="token operator">=</span>1innodb_flush_log_at_trx_commit<span class="token operator">=</span>0innodb_buffer_pool_size<span class="token operator">=</span>120Mwsrep_sst_method<span class="token operator">=</span>rsyncwsrep_causal_reads<span class="token operator">=</span>ON<span class="token comment" spellcheck="true">#controller02 ,controller03  </span>copy 内容 修改 wsrep_node_name , wsrep_node_address</code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01  ,第一次启动</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># galera_new_cluster  #或者 /usr/libexec/mysqld  --wsrep-new-cluster --user=mysql</span><span class="token comment" spellcheck="true"># controller01 , 第二次启动</span><span class="token comment" spellcheck="true">###[root@controller01 ~]# service mariadb start</span><span class="token comment" spellcheck="true">#controller02 , controller03</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service mariadb start</span><span class="token comment" spellcheck="true"># all node</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable mariadb</span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sss                <span class="token operator">|</span><span class="token operator">|</span> vvv                <span class="token operator">|</span>+--------------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.002 sec<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#controller02 , controller03</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sss                <span class="token operator">|</span><span class="token operator">|</span> vvv                <span class="token operator">|</span>+--------------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.002 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token keyword">exit</span>Bye</code></pre><h2 id="安装错误"><a href="#安装错误" class="headerlink" title="安装错误"></a>安装错误</h2><blockquote><p>需要关闭防火墙</p></blockquote><pre><code>2020-07-17 15:42:27 0 [Warning] WSREP: Could not open state file for reading: &#39;/var/lib/mysql//grastate.dat&#39;2020-07-17 15:42:27 0 [Note] WSREP: Found saved state: 00000000-0000-0000-0000-000000000000:-1, safe_to_bootstrap: 12020-07-17 15:42:40 0 [Note] WSREP: (0fb5fb12, &#39;tcp://0.0.0.0:4567&#39;) connection to peer 00000000 with addr tcp://10.10.102.91:4567 timed out, no messages seen in PT3S2020-07-17 15:42:43 0 [Note] WSREP: (0fb5fb12, &#39;tcp://0.0.0.0:4567&#39;) connection to peer 00000000 with addr tcp://10.10.102.92:4567 timed out, no messages seen in PT3S2020-07-17 15:42:49 0 [Note] WSREP: (0fb5fb12, &#39;tcp://0.0.0.0:4567&#39;) connection to peer 00000000 with addr tcp://10.10.102.92:4567 timed out, no messages seen in PT3S2020-07-17 15:42:56 0 [Note] WSREP: (0fb5fb12, &#39;tcp://0.0.0.0:4567&#39;) connection to peer 00000000 with addr tcp://10.10.102.92:4567 timed out, no messages seen in PT3S2020-07-17 15:42:59 0 [Note] WSREP: (0fb5fb12, &#39;tcp://0.0.0.0:4567&#39;) connection to peer 00000000 with addr tcp://10.10.102.91:4567 timed out, no messages seen in PT3S2020-07-17 15:43:00 0 [Note] WSREP: view((empty))2020-07-17 15:43:00 0 [ERROR] WSREP: failed to open gcomm backend connection: 110: failed to reach primary view: 110 (Connection timed out)         at gcomm/src/pc.cpp:connect():158</code></pre><blockquote><p>安装lsof</p></blockquote><pre class=" language-bash"><code class="language-bash">2020-07-17 15:50:48 0 <span class="token punctuation">[</span>Note<span class="token punctuation">]</span> WSREP: Running: <span class="token string">'wsrep_sst_rsync --role '</span>joiner<span class="token string">' --address '</span>10.10.102.192<span class="token string">' --datadir '</span>/var/lib/mysql/<span class="token string">'   --parent '</span>8896<span class="token string">'  '</span><span class="token string">'  '</span><span class="token string">''</span>2020-07-17 15:50:48 0 <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> WSREP: Failed to <span class="token function">read</span> <span class="token string">'ready &lt;addr>'</span> from: wsrep_sst_rsync --role <span class="token string">'joiner'</span> --address <span class="token string">'10.10.102.192'</span> --datadir <span class="token string">'/var/lib/mysql/'</span>   --parent <span class="token string">'8896'</span>  <span class="token string">''</span>  <span class="token string">''</span>        Read: <span class="token string">''</span><span class="token function">lsof</span><span class="token string">' not found in PATH'</span>2020-07-17 15:50:48 0 <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> WSREP: Process completed with error: wsrep_sst_rsync --role <span class="token string">'joiner'</span> --address <span class="token string">'10.10.102.192'</span> --datadir <span class="token string">'/var/lib/mysql/'</span>   --parent <span class="token string">'8896'</span>  <span class="token string">''</span>  <span class="token string">''</span><span class="token keyword">:</span> 2 <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>2020-07-17 15:50:48 2 <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> WSREP: Failed to prepare <span class="token keyword">for</span> <span class="token string">'rsync'</span> SST. Unrecoverable.2020-07-17 15:50:48 2 <span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> Aborting</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 env 准备</title>
      <link href="/2020/07/17/openstack-13/"/>
      <url>/2020/07/17/openstack-13/</url>
      
        <content type="html"><![CDATA[<h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><table><thead><tr><th>vip</th><th>管理ip ens5</th><th>存储ip ens6</th><th>外网ip(br-ex ens3)</th><th>内部ip (br-int ens4)</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>10.10.102.190</td><td>10.10.102.191</td><td>10.10.100.191</td><td>192.168.151.191</td><td>-</td><td>controller01</td><td>centos 8</td></tr><tr><td>10.10.102.190</td><td>10.10.102.192</td><td>10.10.100.192</td><td>192.168.151.192</td><td>-</td><td>controller02</td><td>centos 8</td></tr><tr><td>10.10.102.190</td><td>10.10.102.193</td><td>10.10.100.193</td><td>192.168.151.193</td><td>-</td><td>controller03</td><td>centos 8</td></tr><tr><td></td><td>192.168.151.194</td><td></td><td></td><td></td><td>compute01</td><td>centos 7</td></tr></tbody></table><h3 id="All-节点"><a href="#All-节点" class="headerlink" title="All 节点"></a>All 节点</h3><ul><li>更新yum </li></ul><pre><code>[root@cotroller01 yum.repos.d]# yum upgrade -y</code></pre><ul><li>安装 python client</li></ul><pre><code>[root@cotroller01 yum.repos.d]#  yum install python3-openstackclient -y</code></pre><ul><li>安装openstack selinux</li></ul><pre><code>[root@cotroller01 yum.repos.d]# yum install openstack-selinux -y</code></pre><ul><li>disable firewall</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service firewalld stop</span><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl disable firewalld</span></code></pre><h3 id="控制节点"><a href="#控制节点" class="headerlink" title="控制节点"></a>控制节点</h3><ul><li>修改hostname </li></ul><pre class=" language-bash"><code class="language-bash">hostnamectl set-hostname controller02  controller03  controller01</code></pre><ul><li>修改hosts配置 </li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /etc/hosts</span>10.10.102.191 controller0110.10.102.192 controller0210.10.102.193 controller0310.10.102.190 controller</code></pre><ul><li>copy ssh-key</li></ul><pre class=" language-bash"><code class="language-bash">ssh-keygen <span class="token comment" spellcheck="true"># 一直回车</span>ssh-copy-id  root@controller01  root@controller02 root@controller03</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ussuri centos8 高可用安装 yum 替换</title>
      <link href="/2020/07/17/openstack-12/"/>
      <url>/2020/07/17/openstack-12/</url>
      
        <content type="html"><![CDATA[<h2 id="替换centos-8-源"><a href="#替换centos-8-源" class="headerlink" title="替换centos 8 源"></a>替换centos 8 源</h2><ul><li>删除 /etc/yum.repos.d/*.repo 文件</li><li>下载 centos-8 阿里云mirror<ul><li><a href="http://mirrors.aliyun.com/repo/Centos-8.repo" target="_blank" rel="noopener">http://mirrors.aliyun.com/repo/Centos-8.repo</a></li><li>rename to Centos-Base.repo</li></ul></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat CentOS-Base.repo </span><span class="token comment" spellcheck="true"># CentOS-Base.repo</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># The mirror system uses the connecting IP address of the client and the</span><span class="token comment" spellcheck="true"># update status of each mirror to pick mirrors that are updated to and</span><span class="token comment" spellcheck="true"># geographically close to the client.  You should use this for CentOS updates</span><span class="token comment" spellcheck="true"># unless you are manually picking other mirrors.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># If the mirrorlist= does not work for you, as a fall back you can try the </span><span class="token comment" spellcheck="true"># remarked out baseurl= line instead.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#</span><span class="token punctuation">[</span>base<span class="token punctuation">]</span>name<span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Base - mirrors.aliyun.comfailovermethod<span class="token operator">=</span>prioritybaseurl<span class="token operator">=</span>https://mirrors.aliyun.com/centos/<span class="token variable">$releasever</span>/BaseOS/<span class="token variable">$basearch</span>/os/gpgcheck<span class="token operator">=</span>1gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official<span class="token comment" spellcheck="true">#additional packages that may be useful</span><span class="token punctuation">[</span>extras<span class="token punctuation">]</span>name<span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Extras - mirrors.aliyun.comfailovermethod<span class="token operator">=</span>prioritybaseurl<span class="token operator">=</span>https://mirrors.aliyun.com/centos/<span class="token variable">$releasever</span>/extras/<span class="token variable">$basearch</span>/os/gpgcheck<span class="token operator">=</span>1gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official<span class="token comment" spellcheck="true">#additional packages that extend functionality of existing packages</span><span class="token punctuation">[</span>centosplus<span class="token punctuation">]</span>name<span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - Plus - mirrors.aliyun.comfailovermethod<span class="token operator">=</span>prioritybaseurl<span class="token operator">=</span>https://mirrors.aliyun.com/centos/<span class="token variable">$releasever</span>/centosplus/<span class="token variable">$basearch</span>/os/gpgcheck<span class="token operator">=</span>1enabled<span class="token operator">=</span>0gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official<span class="token punctuation">[</span>PowerTools<span class="token punctuation">]</span>name<span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - PowerTools - mirrors.aliyun.comfailovermethod<span class="token operator">=</span>prioritybaseurl<span class="token operator">=</span>https://mirrors.aliyun.com/centos/<span class="token variable">$releasever</span>/PowerTools/<span class="token variable">$basearch</span>/os/gpgcheck<span class="token operator">=</span>1enabled<span class="token operator">=</span>1gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official<span class="token punctuation">[</span>AppStream<span class="token punctuation">]</span>name<span class="token operator">=</span>CentOS-<span class="token variable">$releasever</span> - AppStream - mirrors.aliyun.comfailovermethod<span class="token operator">=</span>prioritybaseurl<span class="token operator">=</span>https://mirrors.aliyun.com/centos/<span class="token variable">$releasever</span>/AppStream/<span class="token variable">$basearch</span>/os/gpgcheck<span class="token operator">=</span>1gpgkey<span class="token operator">=</span>https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official<span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum clean all</span><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum makecache</span></code></pre><h2 id="安装openstack-源"><a href="#安装openstack-源" class="headerlink" title="安装openstack 源"></a>安装openstack 源</h2><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install  centos-release-openstack-ussuri </span><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum config-manager --set-enabled PowerTools</span></code></pre><blockquote><p>生成文件</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@cotroller01 yum.repos.d<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll</span>total 28-rw-r--r--. 1 root root  381 Jul  9 22:36 advanced-virtualization.repo-rw-r--r--. 1 root root 1781 Jul 13 11:46 CentOS-Base.repo-rw-r--r--. 1 root root  956 May 19 03:10 CentOS-Ceph-Nautilus.repo-rw-r--r--. 1 root root  957 Apr 14 22:32 CentOS-Messaging-rabbitmq.repo-rw-r--r--. 1 root root 4588 Jul  9 22:38 CentOS-OpenStack-ussuri.repo-rw-r--r--. 1 root root  353 Mar 19 22:25 CentOS-Storage-common.repo</code></pre><h2 id="替换源文件"><a href="#替换源文件" class="headerlink" title="替换源文件"></a>替换源文件</h2><ul><li>advanced-virtualuzation.repo</li></ul><pre><code>[advanced-virtualization]name=CentOS-8 - Advanced Virtualization#baseurl=http://mirror.centos.org/centos/$releasever/virt/$basearch/advanced-virtualization#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=virt-advanced-virtualizationbaseurl=https://mirrors.aliyun.com/centos/$releasever/virt/$basearch/advanced-virtualizationgpgcheck=1enabled=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Virtualization-RDOmodule_hotfixes=1</code></pre><ul><li>CentOS-Ceph-Nautilus.repo</li></ul><pre><code>[root@cotroller01 yum.repos.d]# cat CentOS-Ceph-Nautilus.repo # CentOS-Ceph-Nautilus.repo## Please see https://wiki.centos.org/SpecialInterestGroup/Storage for more# information[centos-ceph-nautilus]name=CentOS-$releasever - Ceph Nautilus#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=storage-ceph-nautilus#baseurl=http://mirror.centos.org/$contentdir/$releasever/storage/$basearch/ceph-nautilus/baseurl=https://mirrors.aliyun.com/$contentdir/$releasever/storage/$basearch/ceph-nautilus/gpgcheck=1enabled=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage[centos-ceph-nautilus-test]name=CentOS-$releasever - Ceph Nautilus Testingbaseurl=https://buildlogs.centos.org/centos/$releasever/storage/$basearch/ceph-nautilus/gpgcheck=0enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage[centos-ceph-nautilus-source]name=CentOS-$releasever - Ceph Nautilus Sourcebaseurl=http://vault.centos.org/$contentdir/$releasever/storage/Source/ceph-nautilus/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage</code></pre><ul><li>CentOS-Messaging-rabbitmq.repo</li></ul><pre><code>[root@cotroller01 yum.repos.d]# cat CentOS-Messaging-rabbitmq.repo [centos-rabbitmq-38]name=CentOS-8 - RabbitMQ 38#baseurl=http://mirror.centos.org/centos/$releasever/messaging/$basearch/rabbitmq-38#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=messaging-rabbitmq-38baseurl=https://mirrors.aliyun.com/centos/$releasever/messaging/$basearch/rabbitmq-38gpgcheck=1enabled=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Messaging[centos-rabbitmq-38-test]name=CentOS-8 - RabbitMQ 38 Testingbaseurl=https://buildlogs.centos.org/centos/$releasever/messaging/$basearch/rabbitmq-38/gpgcheck=0enabled=0[centos-rabbitmq-38-debuginfo]name=CentOS-8 - RabbitMQ 38 - Debugbaseurl=http://debuginfo.centos.org/centos/$releasever/messaging/$basearch/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Messaging[centos-rabbitmq-38-source]name=CentOS-8 - RabbitMQ 38 - Sourcebaseurl=http://vault.centos.org/centos/$releasever/messaging/Source/rabbitmq-38/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Messaging</code></pre><ul><li>CentOS-OpenStack-ussuri.repo</li></ul><pre><code>[root@cotroller01 yum.repos.d]# cat CentOS-OpenStack-ussuri.repo # CentOS-OpenStack-ussuri.repo## Please see http://wiki.centos.org/SpecialInterestGroup/Cloud for more# information[centos-openstack-ussuri]name=CentOS-$releasever - OpenStack ussuri#baseurl=http://mirror.centos.org/$contentdir/$releasever/cloud/$basearch/openstack-ussuri/#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=cloud-openstack-ussuribaseurl=https://mirrors.aliyun.com/$contentdir/$releasever/cloud/$basearch/openstack-ussuri/gpgcheck=1enabled=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloudexclude=sip,PyQt4module_hotfixes=1[centos-openstack-ussuri-test]name=CentOS-$releasever - OpenStack ussuri Testingbaseurl=https://buildlogs.centos.org/centos/$releasever/cloud/$basearch/openstack-ussuri/gpgcheck=0enabled=0exclude=sip,PyQt4module_hotfixes=1[centos-openstack-ussuri-debuginfo]name=CentOS-$releasever - OpenStack ussuri - Debugbaseurl=http://debuginfo.centos.org/centos/$releasever/cloud/$basearch/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloudexclude=sip,PyQt4module_hotfixes=1[centos-openstack-ussuri-source]name=CentOS-$releasever - OpenStack ussuri - Sourcebaseurl=http://vault.centos.org/centos/$releasever/cloud/Source/openstack-ussuri/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloudexclude=sip,PyQt4module_hotfixes=1[rdo-trunk-ussuri-tested-component-baremetal]name=rdo-trunk-ussuri-tested-component-baremetalbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/baremetal/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-cinder]name=rdo-trunk-ussuri-tested-component-cinderbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/cinder/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-clients]name=rdo-trunk-ussuri-tested-component-clientsbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/clients/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-cloudops]name=rdo-trunk-ussuri-tested-component-cloudopsbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/cloudops/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-common]name=rdo-trunk-ussuri-tested-component-commonbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/common/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-compute]name=rdo-trunk-ussuri-tested-component-computebaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/compute/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-glance]name=rdo-trunk-ussuri-tested-component-glancebaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/glance/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-manila]name=rdo-trunk-ussuri-tested-component-manilabaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/manila/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-network]name=rdo-trunk-ussuri-tested-component-networkbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/network/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-octavia]name=rdo-trunk-ussuri-tested-component-octaviabaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/octavia/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-security]name=rdo-trunk-ussuri-tested-component-securitybaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/security/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-swift]name=rdo-trunk-ussuri-tested-component-swiftbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/swift/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-tempest]name=rdo-trunk-ussuri-tested-component-tempestbaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/tempest/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-tripleo]name=rdo-trunk-ussuri-tested-component-tripleobaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/tripleo/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1[rdo-trunk-ussuri-tested-component-ui]name=rdo-trunk-ussuri-tested-component-uibaseurl=https://trunk.rdoproject.org/centos8-ussuri/component/ui/current-tripleo-rdoenabled=0gpgcheck=0module_hotfixes=1</code></pre><ul><li>CentOS-Storage-common.repo</li></ul><pre><code>[root@cotroller01 yum.repos.d]# cat CentOS-Storage-common.repo # CentOS-Storage.repo## Please see http://wiki.centos.org/SpecialInterestGroup/Storage for more# information[centos-storage-debuginfo]name=CentOS-$releasever - Storage SIG - debuginfo#baseurl=http://debuginfo.centos.org/$contentdir/$releasever/storage/$basearch/baseurl=https://mirrors.aliyun.com/$contentdir/$releasever/storage/$basearch/gpgcheck=1enabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage</code></pre><blockquote><p>在aliyun能找到这些包<br>手动安装centos8 dns 配置 /etc/resolv.conf ,不存在手动创建<br>enabled = 0 禁用,不需要修改配置</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> centos8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka 业务监控</title>
      <link href="/2020/07/16/karafka-6/"/>
      <url>/2020/07/16/karafka-6/</url>
      
        <content type="html"><![CDATA[<h3 id="karafka-使用ruby-kafka-monitor-监控业务状态"><a href="#karafka-使用ruby-kafka-monitor-监控业务状态" class="headerlink" title="karafka 使用ruby kafka monitor 监控业务状态"></a>karafka 使用ruby kafka monitor 监控业务状态</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#frozen_string_literal: true</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"RAILS_ENV"</span><span class="token punctuation">]</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token string">"development"</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"KARAFKA_ENV"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"RAILS_ENV"</span><span class="token punctuation">]</span><span class="token keyword">require</span> <span class="token punctuation">:</span><span class="token symbol">:File</span><span class="token punctuation">.</span><span class="token function">expand_path</span><span class="token punctuation">(</span><span class="token string">"../config/environment"</span><span class="token punctuation">,</span> __FILE__<span class="token punctuation">)</span><span class="token constant">Rails</span><span class="token punctuation">.</span>application<span class="token punctuation">.</span>eager_load<span class="token operator">!</span><span class="token comment" spellcheck="true"># This lines will make Karafka print to stdout like puma or unicorn</span><span class="token keyword">if</span> <span class="token constant">Rails</span><span class="token punctuation">.</span>env<span class="token punctuation">.</span>development<span class="token operator">?</span>  <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>    <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Logger</span><span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span>      <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Logger</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token variable">$stdout</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token keyword">end</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"KARAFKA_ROOT_DIR"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">expand_path</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>__FILE__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">require</span> <span class="token string">"active_support/notifications"</span><span class="token keyword">class</span> <span class="token class-name">KarafkaApp</span> <span class="token operator">&lt;</span> <span class="token constant">Karafka</span><span class="token punctuation">:</span><span class="token symbol">:App</span>  setup <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>    kflogger <span class="token operator">=</span> <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Logger</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"log/karafka.log"</span><span class="token punctuation">)</span>    config<span class="token punctuation">.</span>batch_fetching <span class="token operator">=</span> <span class="token keyword">true</span>    <span class="token comment" spellcheck="true">#config.backend = :sidekiq</span>    <span class="token comment" spellcheck="true">#config.monitor = ActiveSupport::Notifications</span>    config<span class="token punctuation">.</span>batch_consuming <span class="token operator">=</span> <span class="token keyword">true</span>    connect <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    kafk_conn <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token constant">Awifi</span><span class="token punctuation">:</span><span class="token symbol">:Consul</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"devops/devops-server"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"kafka_conn"</span><span class="token punctuation">]</span>    kafk_conn<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>conn<span class="token operator">|</span>      connect <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token string">"kafka://<span class="token interpolation"><span class="token delimiter tag">#{</span>conn<span class="token delimiter tag">}</span></span>"</span>    <span class="token keyword">end</span>    <span class="token comment" spellcheck="true">#config.kafka.seed_brokers =  ["kafka://192.168.212.58:9092",  "kafka://192.168.213.37:9092" , "kafka://192.168.213.35:9092"]</span>    config<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>seed_brokers <span class="token operator">=</span> connect    config<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>start_from_beginning <span class="token operator">=</span> <span class="token keyword">false</span>    config<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>automatically_mark_as_consumed <span class="token operator">=</span> <span class="token keyword">true</span>    <span class="token comment" spellcheck="true">#config.kafka.fetcher_max_queue_size = 100</span>    <span class="token comment" spellcheck="true">#config.kafka.offset_commit_interval = 10</span>    <span class="token comment" spellcheck="true">#config.kafka.offset_commit_threshold = 100</span>    <span class="token comment" spellcheck="true">#config.kafka.offset_retention_time = 7 * 60 * 60</span>    config<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>session_timeout <span class="token operator">=</span> <span class="token number">300</span>  <span class="token comment" spellcheck="true">#调整时间，保证数据处理完,数据过大?</span>    <span class="token comment" spellcheck="true">#config.kafka.socket_timeout =  300</span>    <span class="token comment" spellcheck="true">#config.kafka.max_wait_time =  300</span>    <span class="token comment" spellcheck="true">#config.kafka.max_bytes_per_partition = 10 * 1024 * 1024</span>    <span class="token comment" spellcheck="true">#config.client_id = "teamwork_manage_#{ENV["HOSTNAME"]}"</span>    config<span class="token punctuation">.</span>client_id <span class="token operator">=</span> <span class="token string">"devops_server"</span>    <span class="token keyword">if</span> <span class="token constant">Rails</span><span class="token punctuation">.</span>env<span class="token punctuation">.</span>development<span class="token operator">?</span>      config<span class="token punctuation">.</span>logger <span class="token operator">=</span> <span class="token constant">Rails</span><span class="token punctuation">.</span>logger    <span class="token keyword">else</span>      kflogger<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token constant">Logger</span><span class="token punctuation">:</span><span class="token symbol">:ERROR</span>      config<span class="token punctuation">.</span>logger <span class="token operator">=</span> kflogger    <span class="token keyword">end</span>    config<span class="token punctuation">.</span>monitor <span class="token operator">=</span> <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Notifications</span>  <span class="token keyword">end</span>  <span class="token comment" spellcheck="true"># Comment out this part if you are not using instrumentation and/or you are not</span>  <span class="token comment" spellcheck="true"># interested in logging events for certain environments. Since instrumentation</span>  <span class="token comment" spellcheck="true"># notifications add extra boilerplate, if you want to achieve max performance,</span>  <span class="token comment" spellcheck="true"># listen to only what you really need for given environment.</span>  <span class="token comment" spellcheck="true">#  Karafka.monitor.subscribe(WaterDrop::Instrumentation::StdoutListener.new)</span>  <span class="token comment" spellcheck="true">#  Karafka.monitor.subscribe(Karafka::Instrumentation::StdoutListener.new)</span>  <span class="token comment" spellcheck="true">#  Karafka.monitor.subscribe(Karafka::Instrumentation::ProctitleListener.new)</span>  <span class="token comment" spellcheck="true"># Uncomment that in order to achieve code reload in development mode</span>  <span class="token comment" spellcheck="true"># Be aware, that this might have some side-effects. Please refer to the wiki</span>  <span class="token comment" spellcheck="true"># for more details on benefits and downsides of the code reload in the</span>  <span class="token comment" spellcheck="true"># development mode</span>  <span class="token comment" spellcheck="true">#</span>  <span class="token comment" spellcheck="true"># Karafka.monitor.subscribe(</span>  <span class="token comment" spellcheck="true">#   Karafka::CodeReloader.new(</span>  <span class="token comment" spellcheck="true">#     *Rails.application.reloaders</span>  <span class="token comment" spellcheck="true">#   )</span>  <span class="token comment" spellcheck="true"># )</span>  <span class="token keyword">class</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token keyword">self</span>    <span class="token keyword">def</span> <span class="token function">sync_to_redis</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>      key <span class="token operator">=</span> <span class="token string">"devops___<span class="token interpolation"><span class="token delimiter tag">#{</span>payload<span class="token punctuation">[</span><span class="token punctuation">:</span>group_id<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>:<span class="token interpolation"><span class="token delimiter tag">#{</span>payload<span class="token punctuation">[</span><span class="token punctuation">:</span>topic<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>:<span class="token interpolation"><span class="token delimiter tag">#{</span>payload<span class="token punctuation">[</span><span class="token punctuation">:</span>partition<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>___devops"</span>      monitor_redis<span class="token punctuation">.</span>set key<span class="token punctuation">,</span> payload<span class="token punctuation">.</span>to_json    <span class="token keyword">end</span>    <span class="token keyword">def</span> monitor_redis      <span class="token variable">@@redis_url</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token constant">Awifi</span><span class="token punctuation">:</span><span class="token symbol">:Consul</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"devops/devops-server"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"redis"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"monitor_url"</span><span class="token punctuation">]</span>      <span class="token variable">@@redis</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token constant">Redis</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">url</span><span class="token punctuation">:</span> <span class="token variable">@@redis_url</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token comment" spellcheck="true"># 增加业务监控</span>  <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Notifications</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"process_message.consumer.kafka"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span><span class="token operator">*</span>args<span class="token operator">|</span>    event <span class="token operator">=</span> <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Notifications</span><span class="token punctuation">:</span><span class="token symbol">:Event</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>    <span class="token constant">KarafkaApp</span><span class="token punctuation">.</span>sync_to_redis event<span class="token punctuation">.</span>payload  <span class="token keyword">end</span>  <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Notifications</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"process_batch.consumer.kafka"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span><span class="token operator">*</span>args<span class="token operator">|</span>    <span class="token comment" spellcheck="true">#logger.info "event.name  #{event.name} --------  #{event.payload}"</span>    event <span class="token operator">=</span> <span class="token constant">ActiveSupport</span><span class="token punctuation">:</span><span class="token symbol">:Notifications</span><span class="token punctuation">:</span><span class="token symbol">:Event</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>    <span class="token constant">KarafkaApp</span><span class="token punctuation">.</span>sync_to_redis event<span class="token punctuation">.</span>payload  <span class="token keyword">end</span>  consumer_groups<span class="token punctuation">.</span>draw <span class="token keyword">do</span>    consumer_group <span class="token symbol">:resource</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.resource"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceHostConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:resourceusage</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.resourceusage"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceUsageHostConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:vtcp</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.vtcp"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceUsageVtcpConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:vtcpconf</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.vtcpconf"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceVtcpConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:service_monitor</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.service_monitor"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceServiceNewConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:bigscreen</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.bigscreenalarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceBigscreenAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:downstream</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.downstream"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceDownstreamConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:upstream</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.upstream"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceUpstreamConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:heartbeat</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.heartbeat"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceHeartbeatConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:gateway</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.collectgateway"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceCollectGatewayConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:route</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.routedata"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceRouteDataConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:api_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.apialarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceApiAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:port_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.portalarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourcePortAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:script_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.scriptalarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceScriptAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:script_check_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.scriptcheckalarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceScriptCheckAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:script_data</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.scriptdata"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceScriptDataConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:script_once</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.scripttask"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceScriptOnceConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:k8s_service</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.helm_info"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceK8sServiceConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:resource_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.resourcealarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:k8s_alarm</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.helm_alarm"</span> <span class="token keyword">do</span>        consumer <span class="token constant">TeamworkResourceK8sAlarmConsumer</span>        batch_consuming <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:nginx_upstream_group</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.nginxgroup"</span> <span class="token keyword">do</span>        consumer <span class="token constant">NginxUpstreamGroupConsumer</span>        start_from_beginning <span class="token keyword">false</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    consumer_group <span class="token symbol">:backup_task_status_group</span> <span class="token keyword">do</span>      topic <span class="token punctuation">:</span><span class="token string">"host.teamwork.cronscriptdata"</span> <span class="token keyword">do</span>        consumer <span class="token constant">BackupTaskStatusConsumer</span>        batch_consuming <span class="token keyword">true</span>        start_from_beginning <span class="token keyword">false</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">#Karafka.monitor.subscribe("app.initialized") do</span><span class="token comment" spellcheck="true">#  #  # Put here all the things you want to do after the Karafka framework</span><span class="token comment" spellcheck="true">#  #  # initialization</span><span class="token comment" spellcheck="true">#  WaterDrop.setup do |config|</span><span class="token comment" spellcheck="true">#    config.deliver = true</span><span class="token comment" spellcheck="true">#    config.kafka.seed_brokers = ["kafka://#{ENV["KAFKA_CONN"]}"]</span><span class="token comment" spellcheck="true">#  end</span><span class="token comment" spellcheck="true">#end</span><span class="token constant">KarafkaApp</span><span class="token punctuation">.</span>boot<span class="token operator">!</span></code></pre><blockquote><p>使用自定义log</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>monitor kafka</title>
      <link href="/2020/07/16/monitor-1/"/>
      <url>/2020/07/16/monitor-1/</url>
      
        <content type="html"><![CDATA[<h3 id="主要监控指标"><a href="#主要监控指标" class="headerlink" title="主要监控指标"></a>主要监控指标</h3><ul><li>consumer lag  </li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
          <category> kafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> monitor </tag>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 监控</title>
      <link href="/2020/07/16/monitor/"/>
      <url>/2020/07/16/monitor/</url>
      
        <content type="html"><![CDATA[<h2 id="常见的mysql监控指标"><a href="#常见的mysql监控指标" class="headerlink" title="常见的mysql监控指标"></a>常见的mysql监控指标</h2><ul><li>tps <pre class=" language-mysql"><code class="language-mysql">MariaDB [(none)]> show global status where variable_name in ('com_insert' , 'com_delete' , 'com_update', 'uptime');</code></pre><blockquote><p>事务数TC ≈’com_insert’ , ‘com_delete’ , ‘com_update’<br>TPS  ≈ (TC2 -TC1) / (uptime2 - uptime1)<br>uptime 数据库运行时间</p></blockquote></li><li><p>qps</p><pre><code>MariaDB [(none)]&gt; show global status where variable_name in (&#39;Queries&#39;, &#39;uptime&#39;);</code></pre><blockquote><p>QPS = (Queries2 -Queries1) / (uptime2 - uptime1)</p></blockquote></li><li><p>max_connection ,connection</p><pre class=" language-mysql"><code class="language-mysql"> MariaDB [(none)]> show global status like 'Threads_connected'; --当前连接数 MariaDB [(none)]> show global status like 'max_connections';  --最大连接数</code></pre><blockquote><p>可以做一个百分比告警</p></blockquote></li></ul><ul><li><p>并发数</p><pre class=" language-mysql"><code class="language-mysql">MariaDB [(none)]> show global status like 'Threads_running';</code></pre></li><li><p>缓存命中率</p><pre class=" language-mysql"><code class="language-mysql">MariaDB [(none)]> show global status like 'innodb_buffer_pool_read_requests';  -- innodb缓冲池查询总数：MariaDB [(none)]> show global status like 'innodb_buffer_pool_reads';  --  innodb从磁盘查询数：</code></pre><blockquote><p>生产中配置报警阈值：(innodb_buffer_pool_read_requests - innodb_buffer_pool_reads) / innodb_buffer_pool_read_requests &gt; 0.95 </p></blockquote></li><li><p>慢查询Slow_queries</p><pre class=" language-mysql"><code class="language-mysql">MariaDB [(none)]>  show status like 'Slow_queries';</code></pre><blockquote><p>超过该值（–long-query-time）的查询数量，或没有使用索引查询数量。对于全部查询会有小的冲突。如果该值增长，表明系统有性能问题</p></blockquote></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> monitor </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> monitor </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs hexo  deploy error</title>
      <link href="/2020/07/16/nodejs/"/>
      <url>/2020/07/16/nodejs/</url>
      
        <content type="html"><![CDATA[<h3 id="node-js-deploy-报错"><a href="#node-js-deploy-报错" class="headerlink" title="node js deploy 报错"></a>node js deploy 报错</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@autotest-ruby-agent myblog<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># hexo d</span>INFO  Deploying: <span class="token function">git</span>INFO  Clearing .deploy_git folder<span class="token punctuation">..</span>.INFO  Copying files from public folder<span class="token punctuation">..</span>.FATAL Something's wrong. Maybe you can <span class="token function">find</span> the solution here: https://hexo.io/docs/troubleshooting.htmlTypeError <span class="token punctuation">[</span>ERR_INVALID_ARG_TYPE<span class="token punctuation">]</span>: The <span class="token string">"mode"</span> argument must be integer. Received an instance of Object    at copyFile <span class="token punctuation">(</span>fs.js:1895:10<span class="token punctuation">)</span>    at tryCatcher <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/util.js:16:23<span class="token punctuation">)</span>    at ret <span class="token punctuation">(</span>eval at makeNodePromisifiedEval <span class="token punctuation">(</span>/usr/lib/node_modules/hexo-cli/node_modules/bluebird/js/release/promisify.js:184:12<span class="token punctuation">)</span>, <span class="token operator">&lt;</span>anonymous<span class="token operator">></span>:13:39<span class="token punctuation">)</span>    at /service/myblog/node_modules/hexo-deployer-git/node_modules/hexo-fs/lib/fs.js:144:39    at tryCatcher <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/util.js:16:23<span class="token punctuation">)</span>    at Promise._settlePromiseFromHandler <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:512:31<span class="token punctuation">)</span>    at Promise._settlePromise <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:569:18<span class="token punctuation">)</span>    at Promise._settlePromise0 <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:614:10<span class="token punctuation">)</span>    at Promise._settlePromises <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:694:18<span class="token punctuation">)</span>    at Promise._fulfill <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:638:18<span class="token punctuation">)</span>    at Promise._resolveCallback <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:432:57<span class="token punctuation">)</span>    at Promise._settlePromiseFromHandler <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:524:17<span class="token punctuation">)</span>    at Promise._settlePromise <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:569:18<span class="token punctuation">)</span>    at Promise._settlePromise0 <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:614:10<span class="token punctuation">)</span>    at Promise._settlePromises <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:694:18<span class="token punctuation">)</span>    at Promise._fulfill <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:638:18<span class="token punctuation">)</span>    at Promise._resolveCallback <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:432:57<span class="token punctuation">)</span>    at Promise._settlePromiseFromHandler <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:524:17<span class="token punctuation">)</span>    at Promise._settlePromise <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:569:18<span class="token punctuation">)</span>    at Promise._settlePromise0 <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:614:10<span class="token punctuation">)</span>    at Promise._settlePromises <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:694:18<span class="token punctuation">)</span>    at Promise._fulfill <span class="token punctuation">(</span>/service/myblog/node_modules/bluebird/js/release/promise.js:638:18<span class="token punctuation">)</span></code></pre><blockquote><p>原因是node 升级到14.x版本导致的, 将node 版本回滚的10.x可以</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails  controller heartbeat 实现</title>
      <link href="/2020/07/13/rails-7/"/>
      <url>/2020/07/13/rails-7/</url>
      
        <content type="html"><![CDATA[<h3 id="rails-心跳日志实现"><a href="#rails-心跳日志实现" class="headerlink" title="rails 心跳日志实现"></a>rails 心跳日志实现</h3><h4 id="rails-agent-每3秒钟-同步一次-hearheat"><a href="#rails-agent-每3秒钟-同步一次-hearheat" class="headerlink" title="rails agent  每3秒钟 同步一次 hearheat"></a>rails agent  每3秒钟 同步一次 hearheat</h4><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">def</span> agent_env  <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token constant">Diplomat</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"devops/automationtesting-backend-agent"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"env"</span><span class="token punctuation">]</span><span class="token keyword">end</span><span class="token keyword">def</span> agent_threads  threads <span class="token operator">=</span> <span class="token constant">TestWorker</span><span class="token punctuation">.</span>class_variable_get <span class="token punctuation">:</span><span class="token variable">@@awifi_test_threads</span>  threaddata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  threads<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>thread<span class="token operator">|</span>    threaddata <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> thread<span class="token punctuation">[</span><span class="token symbol">:name</span><span class="token punctuation">]</span><span class="token punctuation">,</span> idle<span class="token punctuation">:</span> thread<span class="token punctuation">[</span><span class="token symbol">:idle</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">RemoteSync</span>  <span class="token keyword">def</span> <span class="token keyword">self</span><span class="token punctuation">.</span>sync    t <span class="token operator">=</span> <span class="token builtin">Thread</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">do</span>      loop <span class="token keyword">do</span>        <span class="token keyword">begin</span>          data <span class="token operator">=</span> <span class="token constant">Api</span><span class="token punctuation">:</span><span class="token symbol">:NodeController</span><span class="token punctuation">.</span>info          node <span class="token operator">=</span> <span class="token constant">Node</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">data</span>          node<span class="token punctuation">.</span>sync          sleep <span class="token number">1</span>        <span class="token keyword">rescue</span> <span class="token operator">=</span><span class="token operator">></span> e          sleep <span class="token number">1</span>          <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">"sync node info failed  <span class="token interpolation"><span class="token delimiter tag">#{</span>e<span class="token punctuation">.</span>backtrace<span class="token delimiter tag">}</span></span>"</span>        <span class="token keyword">end</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    <span class="token comment" spellcheck="true">#at_exit do</span>    <span class="token comment" spellcheck="true">#  Rails.logger.info "stop sync thread "</span>    <span class="token comment" spellcheck="true">#  t.kill</span>    <span class="token comment" spellcheck="true">#end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">if</span> <span class="token keyword">defined</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token constant">Rails</span><span class="token punctuation">:</span><span class="token symbol">:Server</span><span class="token punctuation">)</span>  <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">"sync node to remote master  info only on server node"</span>  <span class="token constant">RemoteSync</span><span class="token punctuation">.</span>sync<span class="token keyword">end</span></code></pre><h4 id="rails-controller-记录同步信息到redis"><a href="#rails-controller-记录同步信息到redis" class="headerlink" title="rails controller 记录同步信息到redis"></a>rails controller 记录同步信息到redis</h4><h4 id="rails-controller-listen-redis-key-expire-event"><a href="#rails-controller-listen-redis-key-expire-event" class="headerlink" title="rails controller  listen redis  key expire event"></a>rails controller  listen redis  key expire event</h4><pre class=" language-ruby"><code class="language-ruby"><span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">"server mode needs a thread to watch agent node online or not"</span><span class="token keyword">def</span> monitor_redis_expirekey  redis <span class="token operator">=</span> <span class="token constant">V3</span><span class="token punctuation">:</span><span class="token symbol">:CaseNodesController</span><span class="token punctuation">.</span>node_redis  redis<span class="token punctuation">.</span>config <span class="token symbol">:set</span><span class="token punctuation">,</span> <span class="token string">"notify-keyspace-events"</span><span class="token punctuation">,</span> <span class="token string">"Ex"</span>  client <span class="token operator">=</span> redis<span class="token punctuation">.</span>instance_variable_get <span class="token string">"@client"</span>  <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">"db xxxxxxxx  <span class="token interpolation"><span class="token delimiter tag">#{</span>client<span class="token punctuation">.</span>db<span class="token delimiter tag">}</span></span>"</span>  redis<span class="token punctuation">.</span><span class="token function">psubscribe</span><span class="token punctuation">(</span><span class="token string">"__keyevent@<span class="token interpolation"><span class="token delimiter tag">#{</span>client<span class="token punctuation">.</span>db<span class="token delimiter tag">}</span></span>__:expired"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>on<span class="token operator">|</span>    on<span class="token punctuation">.</span>pmessage <span class="token keyword">do</span> <span class="token operator">|</span>pattern<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> key<span class="token operator">|</span>      <span class="token comment" spellcheck="true"># add to do stuff if needed</span>      <span class="token keyword">if</span> key<span class="token punctuation">.</span>match <span class="token regex">/xxx___(.*)___xxx/</span>        <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">" <span class="token interpolation"><span class="token delimiter tag">#{</span>$<span class="token number">1</span><span class="token delimiter tag">}</span></span> node expire "</span>        <span class="token constant">V3</span><span class="token punctuation">:</span><span class="token symbol">:CaseReport</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token symbol">:status</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"RUNNING"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token symbol">:agent_node_ip</span> <span class="token operator">=</span><span class="token operator">></span> $<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_each <span class="token keyword">do</span> <span class="token operator">|</span>report<span class="token operator">|</span>          report<span class="token punctuation">.</span>update status<span class="token punctuation">:</span> <span class="token string">"ERROR"</span><span class="token punctuation">,</span> exec_status<span class="token punctuation">:</span> <span class="token string">"ERROR"</span>          report<span class="token punctuation">.</span>report_consoles<span class="token punctuation">.</span>create<span class="token operator">!</span> message<span class="token punctuation">:</span> <span class="token string">"执行中断"</span><span class="token punctuation">,</span> status<span class="token punctuation">:</span> <span class="token string">"ERROR"</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token string">"master 检查 <span class="token interpolation"><span class="token delimiter tag">#{</span>$<span class="token number">1</span><span class="token delimiter tag">}</span></span> offline "</span><span class="token punctuation">,</span> finish<span class="token punctuation">:</span> <span class="token keyword">true</span>        <span class="token keyword">end</span>        <span class="token constant">V3</span><span class="token punctuation">:</span><span class="token symbol">:ProjectDeploy</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token symbol">:status</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"pending"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token symbol">:agent_node_ip</span> <span class="token operator">=</span><span class="token operator">></span> $<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_each <span class="token keyword">do</span> <span class="token operator">|</span>deploy<span class="token operator">|</span>          deploy<span class="token punctuation">.</span>update status<span class="token punctuation">:</span> <span class="token string">"failed"</span>          deploy<span class="token punctuation">.</span>consoles<span class="token punctuation">.</span>create<span class="token operator">!</span> message<span class="token punctuation">:</span> <span class="token string">"部署中断"</span><span class="token punctuation">,</span> status<span class="token punctuation">:</span> <span class="token string">"ERROR"</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token string">"master 检查 <span class="token interpolation"><span class="token delimiter tag">#{</span>$<span class="token number">1</span><span class="token delimiter tag">}</span></span> offline "</span><span class="token punctuation">,</span> finish<span class="token punctuation">:</span> <span class="token keyword">true</span>        <span class="token keyword">end</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">if</span> <span class="token keyword">defined</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token constant">Rails</span><span class="token punctuation">:</span><span class="token symbol">:Server</span><span class="token punctuation">)</span>  <span class="token builtin">Thread</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">do</span>    <span class="token constant">Rails</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info <span class="token string">"expire key"</span>    monitor_redis_expirekey  <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><h4 id="配置rails-log-不显示-sync-data"><a href="#配置rails-log-不显示-sync-data" class="headerlink" title="配置rails log ,不显示 sync data"></a>配置rails log ,不显示 sync data</h4><ul><li>gem ‘silencer’</li></ul><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'silencer/logger'</span><span class="token constant">Rails</span><span class="token punctuation">.</span>application<span class="token punctuation">.</span>configure <span class="token keyword">do</span>  config<span class="token punctuation">.</span>middleware<span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>    <span class="token constant">Rails</span><span class="token punctuation">:</span><span class="token symbol">:Rack</span><span class="token punctuation">:</span><span class="token symbol">:Logger</span><span class="token punctuation">,</span>     <span class="token constant">Silencer</span><span class="token punctuation">:</span><span class="token symbol">:Logger</span><span class="token punctuation">,</span>     config<span class="token punctuation">.</span>log_tags<span class="token punctuation">,</span>    get<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token regex">%r{^/api/health$}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    post<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token regex">%r{^/api/v3/case_nodes$}</span><span class="token punctuation">]</span>  <span class="token punctuation">)</span><span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装horizon</title>
      <link href="/2020/05/21/openstack-11/"/>
      <url>/2020/05/21/openstack-11/</url>
      
        <content type="html"><![CDATA[<h3 id="controller01"><a href="#controller01" class="headerlink" title="controller01"></a>controller01</h3><h4 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-dashboard -y</span></code></pre><h4 id="修改文件-etc-openstack-dashboard-local-settings"><a href="#修改文件-etc-openstack-dashboard-local-settings" class="headerlink" title="修改文件 /etc/openstack-dashboard/local_settings"></a>修改文件 <strong>/etc/openstack-dashboard/local_settings</strong></h4><pre class=" language-bash"><code class="language-bash">OPENSTACK_HOST <span class="token operator">=</span> <span class="token string">"controller"</span>ALLOWED_HOSTS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'one.example.com'</span>, <span class="token string">'two.example.com'</span> , <span class="token string">'*'</span><span class="token punctuation">]</span>SESSION_ENGINE <span class="token operator">=</span> <span class="token string">'django.contrib.sessions.backends.cache'</span>CACHES <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'default'</span><span class="token keyword">:</span> <span class="token punctuation">{</span>         <span class="token string">'BACKEND'</span><span class="token keyword">:</span> <span class="token string">'django.core.cache.backends.memcached.MemcachedCache'</span>,         <span class="token string">'LOCATION'</span><span class="token keyword">:</span> <span class="token string">'controller01:11211,controller02:11211,controller03:11211'</span>,    <span class="token punctuation">}</span><span class="token punctuation">}</span>OPENSTACK_KEYSTONE_URL <span class="token operator">=</span> <span class="token string">"http://%s:5000/v3"</span> % OPENSTACK_HOSTOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT <span class="token operator">=</span> TrueOPENSTACK_API_VERSIONS <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"identity"</span><span class="token keyword">:</span> 3,    <span class="token string">"image"</span><span class="token keyword">:</span> 2,    <span class="token string">"volume"</span><span class="token keyword">:</span> 3,<span class="token punctuation">}</span>OPENSTACK_KEYSTONE_DEFAULT_DOMAIN <span class="token operator">=</span> <span class="token string">"Default"</span>OPENSTACK_KEYSTONE_DEFAULT_ROLE <span class="token operator">=</span> <span class="token string">"user"</span>OPENSTACK_NEUTRON_NETWORK <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token punctuation">..</span>.    <span class="token string">'enable_router'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_quotas'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_distributed_router'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_ha_router'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_lb'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_firewall'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_vpn'</span><span class="token keyword">:</span> False,    <span class="token string">'enable_fip_topology_check'</span><span class="token keyword">:</span> False,<span class="token punctuation">}</span>TIME_ZONE <span class="token operator">=</span> <span class="token string">"Asia/Shanghai"</span></code></pre><h4 id="修改配置文件-etc-httpd-conf-d-openstack-dashboard-conf"><a href="#修改配置文件-etc-httpd-conf-d-openstack-dashboard-conf" class="headerlink" title="修改配置文件  /etc/httpd/conf.d/openstack-dashboard.conf"></a>修改配置文件  <strong>/etc/httpd/conf.d/openstack-dashboard.conf</strong></h4><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#不存在 在加 ,当前版本不存在</span>WSGIApplicationGroup %<span class="token punctuation">{</span>GLOBAL<span class="token punctuation">}</span></code></pre><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart httpd.service memcached.service</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack  stein 高可用安装neutron(ovn)</title>
      <link href="/2020/05/21/openstack-10/"/>
      <url>/2020/05/21/openstack-10/</url>
      
        <content type="html"><![CDATA[<h2 id="ovn-准备"><a href="#ovn-准备" class="headerlink" title="ovn 准备"></a>ovn 准备</h2><p>gateway node   ovn-central</p><p>database node</p><p>compute node ovn-host</p><h2 id="controler-01"><a href="#controler-01" class="headerlink" title="controler 01"></a>controler 01</h2><h3 id="安装neutron"><a href="#安装neutron" class="headerlink" title="安装neutron"></a>安装neutron</h3><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><pre class=" language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> CREATE DATABASE neutron<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON neutron.* TO <span class="token string">'neutron'</span>@<span class="token string">'localhost'</span>  IDENTIFIED BY  <span class="token string">'neutron'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.007 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  GRANT ALL PRIVILEGES ON neutron.* TO <span class="token string">'neutron'</span>@<span class="token string">'%'</span>  IDENTIFIED BY  <span class="token string">'neutron'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token keyword">exit</span></code></pre><h4 id="创建service-endpoint"><a href="#创建service-endpoint" class="headerlink" title="创建service endpoint"></a>创建service endpoint</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack user create --domain default --password-prompt neutron</span>User Password:Repeat User Password:+---------------------+----------------------------------+<span class="token operator">|</span> Field               <span class="token operator">|</span> Value                            <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token operator">|</span> domain_id           <span class="token operator">|</span> default                          <span class="token operator">|</span><span class="token operator">|</span> enabled             <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>                  <span class="token operator">|</span> e019ae46781445b9b0a99bed55dcebe7 <span class="token operator">|</span><span class="token operator">|</span> name                <span class="token operator">|</span> neutron                          <span class="token operator">|</span><span class="token operator">|</span> options             <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                               <span class="token operator">|</span><span class="token operator">|</span> password_expires_at <span class="token operator">|</span> None                             <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack role add --project service --user neutron admin</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack service create --name neutron \</span><span class="token operator">></span>   --description <span class="token string">"OpenStack Networking"</span> network+-------------+----------------------------------+<span class="token operator">|</span> Field       <span class="token operator">|</span> Value                            <span class="token operator">|</span>+-------------+----------------------------------+<span class="token operator">|</span> description <span class="token operator">|</span> OpenStack Networking             <span class="token operator">|</span><span class="token operator">|</span> enabled     <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>          <span class="token operator">|</span> 488c02fc43fb41a2a573cb1ea3beeed0 <span class="token operator">|</span><span class="token operator">|</span> name        <span class="token operator">|</span> neutron                          <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">type</span>        <span class="token operator">|</span> network                          <span class="token operator">|</span>+-------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   network public http://controller:9696+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 96c74ccbd7e74e468784ad38a7b5dcb8 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> public                           <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 488c02fc43fb41a2a573cb1ea3beeed0 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> neutron                          <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> network                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9696           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   network internal http://controller:9696+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> fe9f7fbdcd114224ac07f8c103d35ad8 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> internal                         <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 488c02fc43fb41a2a573cb1ea3beeed0 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> neutron                          <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> network                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9696           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   network admin http://controller:9696+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> d97eb77e74004613ad58bb59afae2ae1 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> admin                            <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 488c02fc43fb41a2a573cb1ea3beeed0 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> neutron                          <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> network                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9696           <span class="token operator">|</span>+--------------+----------------------------------+</code></pre><h4 id="neutron-ovn-安装"><a href="#neutron-ovn-安装" class="headerlink" title="neutron ovn 安装"></a>neutron ovn 安装</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-neutron openstack-neutron-ml2   openvswitch-ovn-central openvswitch-ovn-vtep python2-networking-ovn   libibverbs  -y</span></code></pre><h4 id="配置ovn-sb-nb-remote-访问port"><a href="#配置ovn-sb-nb-remote-访问port" class="headerlink" title="配置ovn sb nb remote 访问port"></a>配置ovn sb nb remote 访问port</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable openvswitch</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable ovn-northd</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  service ovn-northd start</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovn-nbctl set-connection ptcp:6641:0.0.0.0  -- set connection . inactivity_probe=60000</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovn-sbctl set-connection ptcp:6642:0.0.0.0  -- set connection . inactivity_probe=60000</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ovs-appctl -t ovsdb-server ovsdb-server/add-remote ptcp:6640:0.0.0.0</span></code></pre><h4 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h4><p>   <strong> /etc/neutron/neutron.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://neutron:neutron@controller/neutron<span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>allow_overlapping_ips <span class="token operator">=</span> <span class="token boolean">true</span>transport_url <span class="token operator">=</span> rabbit://openstack:openstack@controllerauth_strategy <span class="token operator">=</span> keystonenotify_nova_on_port_status_changes <span class="token operator">=</span> <span class="token boolean">true</span>notify_nova_on_port_data_changes <span class="token operator">=</span> <span class="token boolean">true</span>core_plugin <span class="token operator">=</span> neutron.plugins.ml2.plugin.Ml2Pluginservice_plugins <span class="token operator">=</span> networking_ovn.l3.l3_ovn.OVNL3RouterPlugin<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>www_authenticate_uri <span class="token operator">=</span> http://controller:5000auth_url <span class="token operator">=</span> http://controller:5000memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> neutronpassword <span class="token operator">=</span> neutron<span class="token punctuation">[</span>nova<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultregion_name <span class="token operator">=</span> RegionOneproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> novapassword <span class="token operator">=</span> nova<span class="token punctuation">[</span>oslo_concurrency<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>lock_path <span class="token operator">=</span> /var/lib/neutron/tmp</code></pre><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>  <strong>/etc/neutron/plugins/ml2/ml2_conf.ini</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>ml2<span class="token punctuation">]</span><span class="token punctuation">..</span>.mechanism_drivers <span class="token operator">=</span> ovntype_drivers <span class="token operator">=</span> local,flat,vlan,genevetenant_network_types <span class="token operator">=</span> geneveextension_drivers <span class="token operator">=</span> port_securityoverlay_ip_version <span class="token operator">=</span> 4<span class="token punctuation">[</span>ml2_type_geneve<span class="token punctuation">]</span><span class="token punctuation">..</span>.vni_ranges <span class="token operator">=</span> 1:65536max_header_size <span class="token operator">=</span> 38<span class="token punctuation">[</span>securitygroup<span class="token punctuation">]</span><span class="token punctuation">..</span>.enable_security_group <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">[</span>ovn<span class="token punctuation">]</span><span class="token punctuation">..</span>.ovn_nb_connection <span class="token operator">=</span> tcp:192.168.151.170:6641 <span class="token comment" spellcheck="true">#vip </span>ovn_sb_connection <span class="token operator">=</span> tcp:192.168.151.170:6642ovn_l3_scheduler <span class="token operator">=</span> leastloaded   </code></pre><h4 id="mark-gateway-nodes"><a href="#mark-gateway-nodes" class="headerlink" title="mark gateway nodes"></a>mark gateway nodes</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovs-vsctl set open . external-ids:ovn-cms-options=enable-chassis-as-gw</span></code></pre><h4 id="nova-修改配置"><a href="#nova-修改配置" class="headerlink" title="nova 修改配置"></a>nova 修改配置</h4><p>  <strong>/etc/nova/nova.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>neutron<span class="token punctuation">]</span>url <span class="token operator">=</span> http://controller:9696auth_url <span class="token operator">=</span> http://controller:5000auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultregion_name <span class="token operator">=</span> RegionOneproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> neutronpassword <span class="token operator">=</span> neutronservice_metadata_proxy <span class="token operator">=</span> <span class="token boolean">true</span>metadata_proxy_shared_secret <span class="token operator">=</span> METADATA_SECRET  <span class="token comment" spellcheck="true"># 暂时没用,看ovn的metadata server 怎么做</span></code></pre><h4 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron</span></code></pre><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart openstack-nova-api.service  openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable neutron-server.service</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start neutron-server.service</span></code></pre><h2 id="controller02-controller03"><a href="#controller02-controller03" class="headerlink" title="controller02 , controller03"></a>controller02 , controller03</h2><pre class=" language-bash"><code class="language-bash"></code></pre><h2 id="compute-node"><a href="#compute-node" class="headerlink" title="compute node"></a>compute node</h2><h4 id="安装-ovn"><a href="#安装-ovn" class="headerlink" title="安装 ovn"></a>安装 ovn</h4><pre class=" language-bin"><code class="language-bin">[root@compute01 ~]# yum install   openvswitch-ovn-host openvswitch-ovn-vtep python2-networking-ovn   python2-networking-ovn-metadata-agent  libibverbs -y</code></pre><h4 id="add-neutron-in-nova"><a href="#add-neutron-in-nova" class="headerlink" title="add neutron in nova"></a>add neutron in nova</h4><p>  <strong>/etc/nova/nova.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>neutron<span class="token punctuation">]</span>url <span class="token operator">=</span> http://controller:9696auth_url <span class="token operator">=</span> http://controller:5000auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultregion_name <span class="token operator">=</span> RegionOneproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> neutronpassword <span class="token operator">=</span> neutronservice_metadata_proxy <span class="token operator">=</span> <span class="token boolean">true</span>metadata_proxy_shared_secret <span class="token operator">=</span> METADATA_SECRET</code></pre><h4 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable openvswitch</span>Created symlink from /etc/systemd/system/multi-user.target.wants/openvswitch.service to /usr/lib/systemd/system/openvswitch.service.<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start openvswitch</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ovs-vsctl set open . external-ids:ovn-remote=tcp:192.168.151.170:6642</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovs-vsctl set open . external-ids:ovn-encap-type=geneve,vxlan</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovs-vsctl set open . external-ids:ovn-encap-ip=192.168.151.74</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable ovn-controller</span>Created symlink from /etc/systemd/system/multi-user.target.wants/ovn-controller.service to /usr/lib/systemd/system/ovn-controller.service.<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start ovn-controller</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service  systemctl enable networking-ovn-metadata-agent</span>The <span class="token function">service</span> <span class="token function">command</span> supports only basic LSB actions <span class="token punctuation">(</span>start, stop, restart, try-restart, reload, force-reload, status<span class="token punctuation">)</span>. For other actions, please try to use systemctl.<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start networking-ovn-metadata-agent</span></code></pre><h4 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h4><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovn-sbctl show</span>Chassis <span class="token string">"b2ed9734-2f21-4fac-b8de-8abf0a265186"</span>    hostname: <span class="token string">"compute01"</span>    Encap vxlan        ip: <span class="token string">"192.168.151.74"</span>        options: <span class="token punctuation">{</span>csum<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">}</span>    Encap geneve        ip: <span class="token string">"192.168.151.74"</span>        options: <span class="token punctuation">{</span>csum<span class="token operator">=</span><span class="token string">"true"</span><span class="token punctuation">}</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovn-nbctl show</span></code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>ovn远程配置的是vip </li><li>ovsdb vip 是master , controller ip slave ,配置ovsdb server 同步</li></ul><h2 id="ovn-cluster-配置"><a href="#ovn-cluster-配置" class="headerlink" title="ovn cluster 配置"></a>ovn cluster 配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl --db-nb-addr=192.168.151.71  --db-nb-create-insecure-remote=yes         --db-sb-addr=192.168.151.71 --db-sb-create-insecure-remote=yes --db-nb-cluster-local-addr=192.168.151.71         --db-sb-cluster-local-addr=192.168.151.71         --ovn-northd-nb-db=tcp:192.168.151.71:6641,tcp:192.168.151.72:6641,tcp:192.168.151.73:6641         --ovn-northd-sb-db=tcp:192.168.151.71:6642,tcp:192.168.151.72:6642,tcp:192.168.151.73:6642         start_northd</span><span class="token punctuation">[</span>root@controller02 ml2<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl --db-nb-addr=192.168.151.72           --db-nb-create-insecure-remote=yes           --db-nb-cluster-local-addr=192.168.151.72           --db-sb-addr=192.168.151.72           --db-sb-create-insecure-remote=yes           --db-sb-cluster-local-addr=192.168.151.72           --db-nb-cluster-remote-addr=192.168.151.71           --db-sb-cluster-remote-addr=192.168.151.71           --ovn-northd-nb-db=tcp:192.168.151.71:6641,tcp:192.168.151.72:6641,tcp:192.168.151.73:6641           --ovn-northd-sb-db=tcp:192.168.151.71:6642,tcp:192.168.151.72:6642,tcp:192.168.151.73:6642           start_northd</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl --db-nb-addr=192.168.151.73           --db-nb-create-insecure-remote=yes           --db-nb-cluster-local-addr=192.168.151.73           --db-sb-addr=192.168.151.73           --db-sb-create-insecure-remote=yes           --db-sb-cluster-local-addr=192.168.151.73           --db-nb-cluster-remote-addr=192.168.151.71           --db-sb-cluster-remote-addr=192.168.151.71           --ovn-northd-nb-db=tcp:192.168.151.71:6641,tcp:192.168.151.72:6641,tcp:192.168.151.73:6641           --ovn-northd-sb-db=tcp:192.168.151.71:6642,tcp:192.168.151.72:6642,tcp:192.168.151.73:6642           start_northd</span><span class="token comment" spellcheck="true">#neutron config</span><span class="token punctuation">[</span>ovn<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#ovn_nb_connection = tcp:192.168.151.170:6641</span><span class="token comment" spellcheck="true">#ovn_sb_connection = tcp:192.168.151.170:6642</span>ovn_nb_connection <span class="token operator">=</span> tcp:192.168.151.71:6641,tcp:192.168.151.72:6641,tcp:192.168.151.73:6641ovn_sb_connection <span class="token operator">=</span> tcp:192.168.151.71:6642,tcp:192.168.151.72:6642,tcp:192.168.151.73:6642ovn_l3_scheduler <span class="token operator">=</span> leastloaded<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovs-vsctl set open . external-ids:ovn-remote=tcp:192.168.151.71:6642,tcp:192.168.151.72:6642,tcp:192.168.151.73:6642</span><span class="token comment" spellcheck="true"># ss 监听71 6642 port 如果 71 6642 down 会开始监听 72 6642</span></code></pre><h2 id="ovn-master-slave-配置"><a href="#ovn-master-slave-配置" class="headerlink" title="ovn master slave 配置"></a>ovn master slave 配置</h2><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl  start_northd     --db-sb-sync-from-addr=192.168.151.170     --db-nb-sync-from-addr=192.168.151.170  --db-sb-create-insecure-remote=yes  --db-nb-create-insecure-remote=yes</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl  start_northd     --db-sb-sync-from-addr=192.168.151.170     --db-nb-sync-from-addr=192.168.151.170  --db-sb-create-insecure-remote=yes  --db-nb-create-insecure-remote=yes</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/share/openvswitch/scripts/ovn-ctl  start_northd     --db-sb-sync-from-addr=192.168.151.170     --db-nb-sync-from-addr=192.168.151.170  --db-sb-create-insecure-remote=yes  --db-nb-create-insecure-remote=yes</span><span class="token comment" spellcheck="true"># 配置换成 floating ip </span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装(nova)</title>
      <link href="/2020/05/21/openstack-9/"/>
      <url>/2020/05/21/openstack-9/</url>
      
        <content type="html"><![CDATA[<h2 id="controller01"><a href="#controller01" class="headerlink" title="controller01"></a>controller01</h2><h3 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h3><pre class=" language-bash"><code class="language-bash">MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> CREATE DATABASE nova_api<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> CREATE DATABASE nova<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  CREATE DATABASE nova_cell0<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON nova_api.* TO <span class="token string">'nova'</span>@<span class="token string">'localhost'</span>  IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON nova_api.* TO <span class="token string">'nova'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON nova.* TO <span class="token string">'nova'</span>@<span class="token string">'localhost'</span>  IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.007 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON nova.* TO <span class="token string">'nova'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON nova_cell0.* TO <span class="token string">'nova'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  GRANT ALL PRIVILEGES ON nova_cell0.* TO <span class="token string">'nova'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'nova'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> </code></pre><h3 id="创建service-endpoint-user"><a href="#创建service-endpoint-user" class="headerlink" title="创建service endpoint user"></a>创建service endpoint user</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack user create --domain default --password-prompt nova</span>User Password:Repeat User Password:+---------------------+----------------------------------+<span class="token operator">|</span> Field               <span class="token operator">|</span> Value                            <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token operator">|</span> domain_id           <span class="token operator">|</span> default                          <span class="token operator">|</span><span class="token operator">|</span> enabled             <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>                  <span class="token operator">|</span> 11344c9ddbee42b99c1c69ff0f919d80 <span class="token operator">|</span><span class="token operator">|</span> name                <span class="token operator">|</span> nova                             <span class="token operator">|</span><span class="token operator">|</span> options             <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                               <span class="token operator">|</span><span class="token operator">|</span> password_expires_at <span class="token operator">|</span> None                             <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack role add --project service --user nova admin</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack service create --name nova \</span><span class="token operator">></span>   --description <span class="token string">"OpenStack Compute"</span> compute+-------------+----------------------------------+<span class="token operator">|</span> Field       <span class="token operator">|</span> Value                            <span class="token operator">|</span>+-------------+----------------------------------+<span class="token operator">|</span> description <span class="token operator">|</span> OpenStack Compute                <span class="token operator">|</span><span class="token operator">|</span> enabled     <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>          <span class="token operator">|</span> 034397010f37488abbd7c79e2b1d6605 <span class="token operator">|</span><span class="token operator">|</span> name        <span class="token operator">|</span> nova                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">type</span>        <span class="token operator">|</span> compute                          <span class="token operator">|</span>+-------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   compute public http://controller:8774/v2.1+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 8a1c8cad05944282997dbc386d447a8d <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> public                           <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 034397010f37488abbd7c79e2b1d6605 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> nova                             <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> compute                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8774/v2.1      <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   compute internal http://controller:8774/v2.1+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 160277d666e24100acccadb7c5f73315 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> internal                         <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 034397010f37488abbd7c79e2b1d6605 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> nova                             <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> compute                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8774/v2.1      <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   compute admin http://controller:8774/v2.1+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 59fe7621bf874982b5936ab531ac4b5f <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> admin                            <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 034397010f37488abbd7c79e2b1d6605 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> nova                             <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> compute                          <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8774/v2.1      <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h3 id="安装nova"><a href="#安装nova" class="headerlink" title="安装nova"></a>安装nova</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-nova-api openstack-nova-conductor   openstack-nova-novncproxy openstack-nova-scheduler -y</span></code></pre><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>  <strong> /etc/nova/nova.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>enabled_apis <span class="token operator">=</span> osapi_compute,metadatatransport_url <span class="token operator">=</span> rabbit://openstack:openstack@controllermy_ip <span class="token operator">=</span> 192.168.151.71 <span class="token comment" spellcheck="true"># controller01</span>use_neutron <span class="token operator">=</span> <span class="token boolean">true</span>firewall_driver <span class="token operator">=</span> nova.virt.firewall.NoopFirewallDriver<span class="token punctuation">[</span>api_database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://nova:nova@controller/nova_api<span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://nova:nova@controller/nova<span class="token punctuation">[</span>api<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_strategy <span class="token operator">=</span> keystone<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000/v3memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> novapassword <span class="token operator">=</span> nova<span class="token punctuation">[</span>vnc<span class="token punctuation">]</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># ...</span>server_listen <span class="token operator">=</span> <span class="token variable">$my_ip</span>server_proxyclient_address <span class="token operator">=</span> <span class="token variable">$my_ip</span><span class="token punctuation">[</span>glance<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>api_servers <span class="token operator">=</span> http://controller:9292<span class="token punctuation">[</span>oslo_concurrency<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>lock_path <span class="token operator">=</span> /var/lib/nova/tmp<span class="token punctuation">[</span>placement<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>region_name <span class="token operator">=</span> RegionOneproject_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>auth_type <span class="token operator">=</span> passworduser_domain_name <span class="token operator">=</span> Defaultauth_url <span class="token operator">=</span> http://controller:5000/v3username <span class="token operator">=</span> placementpassword <span class="token operator">=</span> placement</code></pre><h3 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "nova-manage api_db sync" nova</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  su -s /bin/sh -c "nova-manage db sync" nova</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova</span>+-------+--------------------------------------+------------------------------------+-------------------------------------------------+----------+<span class="token operator">|</span>  Name <span class="token operator">|</span>                 UUID                 <span class="token operator">|</span>           Transport URL            <span class="token operator">|</span>               Database Connection               <span class="token operator">|</span> Disabled <span class="token operator">|</span>+-------+--------------------------------------+------------------------------------+-------------------------------------------------+----------+<span class="token operator">|</span> cell0 <span class="token operator">|</span> 00000000-0000-0000-0000-000000000000 <span class="token operator">|</span>               none:/               <span class="token operator">|</span> mysql+pymysql://nova:****@controller/nova_cell0 <span class="token operator">|</span>  False   <span class="token operator">|</span><span class="token operator">|</span> cell1 <span class="token operator">|</span> 63a4f248-1e14-48fb-98f6-52434dd926f5 <span class="token operator">|</span> rabbit://openstack:****@controller <span class="token operator">|</span>    mysql+pymysql://nova:****@controller/nova    <span class="token operator">|</span>  False   <span class="token operator">|</span>+-------+--------------------------------------+------------------------------------+-------------------------------------------------+----------+</code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>  <strong>nova-consoleauth</strong> stein版本已经删除了</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable openstack-nova-api.service  openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl start openstack-nova-api.service  openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</span></code></pre><h3 id="ERROR"><a href="#ERROR" class="headerlink" title="ERROR"></a>ERROR</h3><ul><li>OperationalError: (pymysql.err.OperationalError) (1040, u’Too many connections’)<ul><li>vim /etc/my.cnf.d/mariadb-server.cnf   [mysqld] max_connections=3000</li></ul></li></ul><h2 id="controller02-controller03"><a href="#controller02-controller03" class="headerlink" title="controller02 , controller03"></a>controller02 , controller03</h2><h3 id="安装nova-1"><a href="#安装nova-1" class="headerlink" title="安装nova"></a>安装nova</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-nova-api openstack-nova-conductor   openstack-nova-novncproxy openstack-nova-scheduler -y</span></code></pre><h3 id="修改配置文件-1"><a href="#修改配置文件-1" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>  <strong> /etc/nova/nova.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>enabled_apis <span class="token operator">=</span> osapi_compute,metadatatransport_url <span class="token operator">=</span> rabbit://openstack:openstack@controllermy_ip <span class="token operator">=</span>   192.168.151.72, 192.168.151.73   <span class="token comment" spellcheck="true">#controller02 , controller03</span>use_neutron <span class="token operator">=</span> <span class="token boolean">true</span>firewall_driver <span class="token operator">=</span> nova.virt.firewall.NoopFirewallDriver<span class="token punctuation">[</span>api_database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://nova:nova@controller/nova_api<span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://nova:nova@controller/nova<span class="token punctuation">[</span>api<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_strategy <span class="token operator">=</span> keystone<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000/v3memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> novapassword <span class="token operator">=</span> nova<span class="token punctuation">[</span>vnc<span class="token punctuation">]</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true"># ...</span>server_listen <span class="token operator">=</span> <span class="token variable">$my_ip</span>server_proxyclient_address <span class="token operator">=</span> <span class="token variable">$my_ip</span><span class="token punctuation">[</span>glance<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>api_servers <span class="token operator">=</span> http://controller:9292<span class="token punctuation">[</span>oslo_concurrency<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>lock_path <span class="token operator">=</span> /var/lib/nova/tmp<span class="token punctuation">[</span>placement<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>region_name <span class="token operator">=</span> RegionOneproject_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>auth_type <span class="token operator">=</span> passworduser_domain_name <span class="token operator">=</span> Defaultauth_url <span class="token operator">=</span> http://controller:5000/v3username <span class="token operator">=</span> placementpassword <span class="token operator">=</span> placement</code></pre><h3 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h3><p>  <strong>nova-consoleauth</strong> stein版本已经删除了</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable openstack-nova-api.service  openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl start openstack-nova-api.service  openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service</span></code></pre><h2 id="compute01"><a href="#compute01" class="headerlink" title="compute01"></a>compute01</h2><h3 id="安装-compute-api"><a href="#安装-compute-api" class="headerlink" title="安装 compute api"></a>安装 compute api</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-nova-compute -y</span></code></pre><h3 id="修改配置文件-2"><a href="#修改配置文件-2" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>  <strong>/etc/nova/nova.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>enabled_apis <span class="token operator">=</span> osapi_compute,metadatatransport_url <span class="token operator">=</span> rabbit://openstack:openstack@controllermy_ip <span class="token operator">=</span> 192.168.151.74 <span class="token comment" spellcheck="true"># MANAGEMENT_INTERFACE_IP_ADDRESS  , /etc/hosts 设置</span>use_neutron <span class="token operator">=</span> <span class="token boolean">true</span>firewall_driver <span class="token operator">=</span> nova.virt.firewall.NoopFirewallDriver<span class="token punctuation">[</span>api<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_strategy <span class="token operator">=</span> keystone<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000/v3memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> novapassword <span class="token operator">=</span> nova<span class="token punctuation">[</span>vnc<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span>server_listen <span class="token operator">=</span> 0.0.0.0server_proxyclient_address <span class="token operator">=</span> <span class="token variable">$my_ip</span>novncproxy_base_url <span class="token operator">=</span> http://controller:6080/vnc_auto.html<span class="token punctuation">[</span>glance<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>api_servers <span class="token operator">=</span> http://controller:9292<span class="token punctuation">[</span>oslo_concurrency<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>lock_path <span class="token operator">=</span> /var/lib/nova/tmp<span class="token punctuation">[</span>placement<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>region_name <span class="token operator">=</span> RegionOneproject_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>auth_type <span class="token operator">=</span> passworduser_domain_name <span class="token operator">=</span> Defaultauth_url <span class="token operator">=</span> http://controller:5000/v3username <span class="token operator">=</span> placementpassword <span class="token operator">=</span> placement<span class="token punctuation">[</span>libvirt<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>virt_type <span class="token operator">=</span> qemu  <span class="token comment" spellcheck="true">#  or kvm   ,不支持虚拟化qemu</span></code></pre><h3 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable libvirtd.service openstack-nova-compute.service</span>Created symlink from /etc/systemd/system/multi-user.target.wants/openstack-nova-compute.service to /usr/lib/systemd/system/openstack-nova-compute.service.<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl start libvirtd.service openstack-nova-compute.service</span></code></pre><h3 id="etc-hosts"><a href="#etc-hosts" class="headerlink" title="/etc/hosts"></a>/etc/hosts</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/hosts</span>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.151.71 controller01192.168.151.72 controller01192.168.151.73 controller01192.168.151.170 controller192.168.151.74 compute01</code></pre><h3 id="add-to-controller"><a href="#add-to-controller" class="headerlink" title="add to controller"></a>add to controller</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack compute service list --service nova-compute</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova</span>Found 2 cell mappings.Skipping cell0 since it does not contain hosts.Getting computes from cell <span class="token string">'cell1'</span><span class="token keyword">:</span> 63a4f248-1e14-48fb-98f6-52434dd926f5Found 0 unmapped computes <span class="token keyword">in</span> cell: 63a4f248-1e14-48fb-98f6-52434dd926f5<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack compute service list --service nova-compute</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># nova-manage cell_v2 discover_hosts </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack compute service list --service nova-compute</span></code></pre><h2 id="error"><a href="#error" class="headerlink" title="error"></a>error</h2><ul><li>unicode error</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/bin/nova-compute </span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>:  File <span class="token string">"/usr/lib64/python2.7/logging/__init__.py"</span>, line 851, <span class="token keyword">in</span> emit    msg <span class="token operator">=</span> self.format<span class="token punctuation">(</span>record<span class="token punctuation">)</span>  File <span class="token string">"/usr/lib64/python2.7/logging/__init__.py"</span>, line 724, <span class="token keyword">in</span> <span class="token function">format</span>    <span class="token keyword">return</span> fmt.format<span class="token punctuation">(</span>record<span class="token punctuation">)</span>  File <span class="token string">"/usr/lib/python2.7/site-packages/oslo_log/formatters.py"</span>, line 511, <span class="token keyword">in</span> <span class="token function">format</span>    <span class="token keyword">return</span> logging.Formatter.format<span class="token punctuation">(</span>self, record<span class="token punctuation">)</span>  File <span class="token string">"/usr/lib64/python2.7/logging/__init__.py"</span>, line 467, <span class="token keyword">in</span> <span class="token function">format</span>    s <span class="token operator">=</span> self._fmt % record.__dict__UnicodeDecodeError: <span class="token string">'ascii'</span> codec can't decode byte 0xe8 <span class="token keyword">in</span> position 229: ordinal not <span class="token keyword">in</span> range<span class="token punctuation">(</span>128<span class="token punctuation">)</span>Logged from <span class="token function">file</span> log.py, line 203<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># LANG</span>-bash: LANG: <span class="token function">command</span> not found<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># export LANG=zh_CN.UTF-8</span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># /usr/bin/nova-compute </span></code></pre><ul><li>boot  error</li></ul><pre class=" language-bash"><code class="language-bash">  2020-05-22 09:28:56.484 45716 ERROR vif_plug_ovs.ovsdb.impl_vsctl <span class="token punctuation">[</span>req-e74f469c-e7bc-4384-9837-817ac34341f5 3c83286e81b846cfb9634474afd33cfd f5d7d248c2d748cb82fc3f8ce871aa75 - default default<span class="token punctuation">]</span> Unable to execute <span class="token punctuation">[</span><span class="token string">'ovs-vsctl'</span>, <span class="token string">'--timeout=120'</span>, <span class="token string">'--oneline'</span>, <span class="token string">'--format=json'</span>, <span class="token string">'--db=tcp:127.0.0.1:6640'</span>, <span class="token string">'--'</span>, <span class="token string">'--may-exist'</span>, <span class="token string">'add-br'</span>, u<span class="token string">'br-int'</span>, <span class="token string">'--'</span>, <span class="token string">'set'</span>, <span class="token string">'Bridge'</span>, u<span class="token string">'br-int'</span>, <span class="token string">'datapath_type=system'</span><span class="token punctuation">]</span>. Exception: Unexpected error <span class="token keyword">while</span> running command.Command: ovs-vsctl --timeout<span class="token operator">=</span>120 --oneline --format<span class="token operator">=</span>json --db<span class="token operator">=</span>tcp:127.0.0.1:6640 -- --may-exist add-br br-int -- <span class="token keyword">set</span> Bridge br-int datapath_type<span class="token operator">=</span>systemExit code: 1Stdout: u<span class="token string">''</span>Stderr: u<span class="token string">'ovs-vsctl: tcp:127.0.0.1:6640: database connection failed (Connection refused)\n'</span><span class="token keyword">:</span> ProcessExecutionError: Unexpected error <span class="token keyword">while</span> running comma<span class="token punctuation">[</span>root@compute01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ovs-appctl -t ovsdb-server ovsdb-server/add-remote ptcp:6640:0.0.0.0</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装(placement)</title>
      <link href="/2020/05/21/openstack-8/"/>
      <url>/2020/05/21/openstack-8/</url>
      
        <content type="html"><![CDATA[<h2 id="controller01"><a href="#controller01" class="headerlink" title="controller01"></a>controller01</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql</span>Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MariaDB connection <span class="token function">id</span> is 51Server version: 10.3.10-MariaDB MariaDB ServerCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  CREATE DATABASE placement<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.005 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON placement.* TO <span class="token string">'placement'</span>@<span class="token string">'localhost'</span>   IDENTIFIED BY <span class="token string">'placement'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.007 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON placement.* TO <span class="token string">'placement'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'placement'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> </code></pre><h3 id="创建用户-endpoint-service"><a href="#创建用户-endpoint-service" class="headerlink" title="创建用户, endpoint ,service"></a>创建用户, endpoint ,service</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source openrc </span><span class="token comment" spellcheck="true"># password set placement</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack user create --domain default --password-prompt placement</span>User Password:Repeat User Password:+---------------------+----------------------------------+<span class="token operator">|</span> Field               <span class="token operator">|</span> Value                            <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token operator">|</span> domain_id           <span class="token operator">|</span> default                          <span class="token operator">|</span><span class="token operator">|</span> enabled             <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>                  <span class="token operator">|</span> 285a363d771349abad2aed6ea040f3c0 <span class="token operator">|</span><span class="token operator">|</span> name                <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> options             <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                               <span class="token operator">|</span><span class="token operator">|</span> password_expires_at <span class="token operator">|</span> None                             <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack role add --project service --user placement admin</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack service create --name placement \</span><span class="token operator">></span>   --description <span class="token string">"Placement API"</span> placement+-------------+----------------------------------+<span class="token operator">|</span> Field       <span class="token operator">|</span> Value                            <span class="token operator">|</span>+-------------+----------------------------------+<span class="token operator">|</span> description <span class="token operator">|</span> Placement API                    <span class="token operator">|</span><span class="token operator">|</span> enabled     <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>          <span class="token operator">|</span> 0e02955c810b49339a689a09f9eafd84 <span class="token operator">|</span><span class="token operator">|</span> name        <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">type</span>        <span class="token operator">|</span> placement                        <span class="token operator">|</span>+-------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   placement public http://controller:8778+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 7bff99341c014979913882f4180a1fef <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> public                           <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 0e02955c810b49339a689a09f9eafd84 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8778           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   placement internal http://controller:8778+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 832d68cbc2464e63a0a9b0e12d03cbc2 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> internal                         <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 0e02955c810b49339a689a09f9eafd84 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8778           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   placement admin http://controller:8778+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> fd3295547dc1420297786e92624f94fc <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> admin                            <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> 0e02955c810b49339a689a09f9eafd84 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> placement                        <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:8778           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h3 id="安装placement"><a href="#安装placement" class="headerlink" title="安装placement"></a>安装placement</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-placement-api -y</span></code></pre><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>  <strong>/etc/placement/placement.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>placement_database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://placement:placement@controller/placement<span class="token punctuation">[</span>api<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_strategy <span class="token operator">=</span> keystone<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000/v3memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> placementpassword <span class="token operator">=</span> placement</code></pre><h3 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "placement-manage db sync" placement</span></code></pre><h3 id="重启httpd"><a href="#重启httpd" class="headerlink" title="重启httpd"></a>重启httpd</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart httpd</span></code></pre><h2 id="controller02-controller03"><a href="#controller02-controller03" class="headerlink" title="controller02 , controller03"></a>controller02 , controller03</h2><h3 id="安装placement-1"><a href="#安装placement-1" class="headerlink" title="安装placement"></a>安装placement</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-placement-api -y</span></code></pre><h3 id="修改配置-1"><a href="#修改配置-1" class="headerlink" title="修改配置"></a>修改配置</h3><p>  <strong>/etc/placement/placement.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>placement_database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://placement:placement@controller/placement<span class="token punctuation">[</span>api<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_strategy <span class="token operator">=</span> keystone<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>auth_url <span class="token operator">=</span> http://controller:5000/v3memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> placementpassword <span class="token operator">=</span> placement</code></pre><h3 id="重启httpd-1"><a href="#重启httpd-1" class="headerlink" title="重启httpd"></a>重启httpd</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl restart httpd</span></code></pre><h2 id="vip"><a href="#vip" class="headerlink" title="vip"></a>vip</h2><blockquote><p>controller02, controller 03 不需要创建service , endpoint , db .其他的和controller01 一致</p></blockquote><h2 id="eror"><a href="#eror" class="headerlink" title="eror"></a>eror</h2><ul><li>AH01630: client denied by server configuration: /usr/bin/placement-api</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 增加directory </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/httpd/conf.d/00-placement-api.conf </span><span class="token operator">&lt;</span>VirtualHost *:8778<span class="token operator">></span>  WSGIProcessGroup placement-api  WSGIApplicationGroup %<span class="token punctuation">{</span>GLOBAL<span class="token punctuation">}</span>  WSGIPassAuthorization On  WSGIDaemonProcess placement-api processes<span class="token operator">=</span>3 threads<span class="token operator">=</span>1 user<span class="token operator">=</span>placement group<span class="token operator">=</span>placement  WSGIScriptAlias / /usr/bin/placement-api  <span class="token operator">&lt;</span>IfVersion <span class="token operator">>=</span> 2.4<span class="token operator">></span>    ErrorLogFormat <span class="token string">"%M"</span>  <span class="token operator">&lt;</span>/IfVersion<span class="token operator">></span>  ErrorLog /var/log/placement/placement-api.log  <span class="token comment" spellcheck="true">#SSLEngine On</span>  <span class="token comment" spellcheck="true">#SSLCertificateFile ...</span>  <span class="token comment" spellcheck="true">#SSLCertificateKeyFile ...</span>  <span class="token operator">&lt;</span>Directory /usr/bin<span class="token operator">></span>    <span class="token operator">&lt;</span>IfVersion <span class="token operator">>=</span> 2.4<span class="token operator">></span>        Require all granted    <span class="token operator">&lt;</span>/IfVersion<span class="token operator">></span>    <span class="token operator">&lt;</span>IfVersion <span class="token operator">&lt;</span> 2.4<span class="token operator">></span>        Order allow,deny        Allow from all    <span class="token operator">&lt;</span>/IfVersion<span class="token operator">></span>  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span><span class="token operator">&lt;</span>/VirtualHost<span class="token operator">></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装(glance)</title>
      <link href="/2020/05/20/openstack-7/"/>
      <url>/2020/05/20/openstack-7/</url>
      
        <content type="html"><![CDATA[<h2 id="controller01"><a href="#controller01" class="headerlink" title="controller01"></a>controller01</h2><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql -u root </span>Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MariaDB connection <span class="token function">id</span> is 20Server version: 10.3.10-MariaDB MariaDB ServerCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  CREATE DATABASE glance<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  GRANT ALL PRIVILEGES ON glance.* TO <span class="token string">'glance'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'glance'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON glance.* TO <span class="token string">'glance'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'glance'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> </code></pre><h3 id="创建-服务认证"><a href="#创建-服务认证" class="headerlink" title="创建 服务认证"></a>创建 服务认证</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># enter glance for password</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># source adminrc </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack user create --domain default --password-prompt glance</span>User Password:Repeat User Password:+---------------------+----------------------------------+<span class="token operator">|</span> Field               <span class="token operator">|</span> Value                            <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token operator">|</span> domain_id           <span class="token operator">|</span> default                          <span class="token operator">|</span><span class="token operator">|</span> enabled             <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>                  <span class="token operator">|</span> da19f706c9fa4393ae68f91d6f58edf4 <span class="token operator">|</span><span class="token operator">|</span> name                <span class="token operator">|</span> glance                           <span class="token operator">|</span><span class="token operator">|</span> options             <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>                               <span class="token operator">|</span><span class="token operator">|</span> password_expires_at <span class="token operator">|</span> None                             <span class="token operator">|</span>+---------------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack project create service</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack role add --project service --user glance admin </span>No project with a name or ID of <span class="token string">'service'</span> exists.<span class="token comment" spellcheck="true">#  如果不存在 project service 需要手动创建</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack service create --name glance \</span><span class="token operator">></span>   --description <span class="token string">"OpenStack Image"</span> image+-------------+----------------------------------+<span class="token operator">|</span> Field       <span class="token operator">|</span> Value                            <span class="token operator">|</span>+-------------+----------------------------------+<span class="token operator">|</span> description <span class="token operator">|</span> OpenStack Image                  <span class="token operator">|</span><span class="token operator">|</span> enabled     <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>          <span class="token operator">|</span> ebf8aaebb6b8477caceb2b904ea7a966 <span class="token operator">|</span><span class="token operator">|</span> name        <span class="token operator">|</span> glance                           <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">type</span>        <span class="token operator">|</span> image                            <span class="token operator">|</span>+-------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   image public http://controller:9292+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> e4e8bc80055e4b65bd27f35d026762af <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> public                           <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> ebf8aaebb6b8477caceb2b904ea7a966 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> glance                           <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> image                            <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9292           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   image internal http://controller:9292+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 0fcc8b28920c40ee94250f3f6db6df68 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> internal                         <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> ebf8aaebb6b8477caceb2b904ea7a966 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> glance                           <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> image                            <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9292           <span class="token operator">|</span>+--------------+----------------------------------+<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint create --region RegionOne \</span><span class="token operator">></span>   image admin http://controller:9292+--------------+----------------------------------+<span class="token operator">|</span> Field        <span class="token operator">|</span> Value                            <span class="token operator">|</span>+--------------+----------------------------------+<span class="token operator">|</span> enabled      <span class="token operator">|</span> True                             <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>           <span class="token operator">|</span> 69ed03fee23b48eab6c6b10dc8e31226 <span class="token operator">|</span><span class="token operator">|</span> interface    <span class="token operator">|</span> admin                            <span class="token operator">|</span><span class="token operator">|</span> region       <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> region_id    <span class="token operator">|</span> RegionOne                        <span class="token operator">|</span><span class="token operator">|</span> service_id   <span class="token operator">|</span> ebf8aaebb6b8477caceb2b904ea7a966 <span class="token operator">|</span><span class="token operator">|</span> service_name <span class="token operator">|</span> glance                           <span class="token operator">|</span><span class="token operator">|</span> service_type <span class="token operator">|</span> image                            <span class="token operator">|</span><span class="token operator">|</span> url          <span class="token operator">|</span> http://controller:9292           <span class="token operator">|</span>+--------------+----------------------------------+</code></pre><h3 id="glance-安装"><a href="#glance-安装" class="headerlink" title="glance 安装"></a>glance 安装</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-glance -y</span></code></pre><h3 id="修改配置文件-I"><a href="#修改配置文件-I" class="headerlink" title="修改配置文件 I"></a>修改配置文件 I</h3><p>  <strong>/etc/glance/glance-api.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://glance:glance@controller/glance<span class="token comment" spellcheck="true"># ...</span>www_authenticate_uri  <span class="token operator">=</span> http://controller:5000auth_url <span class="token operator">=</span> http://controller:5000memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> glancepassword <span class="token operator">=</span> glance<span class="token punctuation">[</span>paste_deploy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>flavor <span class="token operator">=</span> keystone<span class="token punctuation">[</span>glance_store<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>stores <span class="token operator">=</span> file,httpdefault_store <span class="token operator">=</span> <span class="token function">file</span>filesystem_store_datadir <span class="token operator">=</span> /var/lib/glance/images/</code></pre><h3 id="修改配置文件-II"><a href="#修改配置文件-II" class="headerlink" title="修改配置文件 II"></a>修改配置文件 II</h3><p>  <strong>/etc/glance/glance-registry.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://glance:glance@controller/glance<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>www_authenticate_uri <span class="token operator">=</span> http://controller:5000auth_url <span class="token operator">=</span> http://controller:5000memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> glancepassword <span class="token operator">=</span> glance<span class="token punctuation">[</span>paste_deploy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>flavor <span class="token operator">=</span> keystone</code></pre><h3 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># su -s /bin/sh -c "glance-manage db_sync" glance</span></code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable openstack-glance-api.service \</span><span class="token operator">></span>   openstack-glance-registry.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/openstack-glance-api.service to /usr/lib/systemd/system/openstack-glance-api.service.Created symlink from /etc/systemd/system/multi-user.target.wants/openstack-glance-registry.service to /usr/lib/systemd/system/openstack-glance-registry.service.<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start openstack-glance-api.service \</span><span class="token operator">></span>   openstack-glance-registry.service</code></pre><h2 id="controller02-controller03"><a href="#controller02-controller03" class="headerlink" title="controller02  controller03"></a>controller02  controller03</h2><h3 id="glance-安装-1"><a href="#glance-安装-1" class="headerlink" title="glance 安装"></a>glance 安装</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install openstack-glance -y</span></code></pre><h3 id="修改配置文件-I-1"><a href="#修改配置文件-I-1" class="headerlink" title="修改配置文件 I"></a>修改配置文件 I</h3><p>  <strong>/etc/glance/glance-api.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://glance:glance@controller/glance<span class="token comment" spellcheck="true"># ...</span>www_authenticate_uri  <span class="token operator">=</span> http://controller:5000auth_url <span class="token operator">=</span> http://controller:5000memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> glancepassword <span class="token operator">=</span> glance<span class="token punctuation">[</span>paste_deploy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>flavor <span class="token operator">=</span> keystone<span class="token punctuation">[</span>glance_store<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>stores <span class="token operator">=</span> file,httpdefault_store <span class="token operator">=</span> <span class="token function">file</span>filesystem_store_datadir <span class="token operator">=</span> /var/lib/glance/images/</code></pre><h3 id="修改配置文件-II-1"><a href="#修改配置文件-II-1" class="headerlink" title="修改配置文件 II"></a>修改配置文件 II</h3><p>  <strong>/etc/glance/glance-registry.conf</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://glance:glance@controller/glance<span class="token punctuation">[</span>keystone_authtoken<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>www_authenticate_uri <span class="token operator">=</span> http://controller:5000auth_url <span class="token operator">=</span> http://controller:5000memcached_servers <span class="token operator">=</span> controller01:11211,controller02:11211,controller03:11211auth_type <span class="token operator">=</span> passwordproject_domain_name <span class="token operator">=</span> Defaultuser_domain_name <span class="token operator">=</span> Defaultproject_name <span class="token operator">=</span> <span class="token function">service</span>username <span class="token operator">=</span> glancepassword <span class="token operator">=</span> glance<span class="token punctuation">[</span>paste_deploy<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>flavor <span class="token operator">=</span> keystone</code></pre><h3 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable openstack-glance-api.service \</span><span class="token operator">></span>   openstack-glance-registry.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/openstack-glance-api.service to /usr/lib/systemd/system/openstack-glance-api.service.Created symlink from /etc/systemd/system/multi-user.target.wants/openstack-glance-registry.service to /usr/lib/systemd/system/openstack-glance-registry.service.<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start openstack-glance-api.service \</span><span class="token operator">></span>   openstack-glance-registry.service</code></pre><h2 id="vip-测试"><a href="#vip-测试" class="headerlink" title="vip 测试"></a>vip 测试</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 准备upload image </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack image create "cirros"   --file cirros-0.5.1-x86_64-disk.img    --disk-format qcow2  --container-format bare  --public  </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack image list</span>+--------------------------------------+--------+--------+<span class="token operator">|</span> ID                                   <span class="token operator">|</span> Name   <span class="token operator">|</span> Status <span class="token operator">|</span>+--------------------------------------+--------+--------+<span class="token operator">|</span> aa06441f-024b-46ef-96c7-d7a9b6459363 <span class="token operator">|</span> cirros <span class="token operator">|</span> active <span class="token operator">|</span>+--------------------------------------+--------+--------+<span class="token comment" spellcheck="true"># 本地存储</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll /var/lib/glance/images/</span>total 15956-rw-r----- 1 glance glance 16338944 May 20 18:15 aa06441f-024b-46ef-96c7-d7a9b6459363<span class="token comment" spellcheck="true">#切换vip</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ip address add   192.168.151.170/24 dev  ens37</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  ip address delete   192.168.151.170/24 dev  ens37</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack image create "cirros-2"   --file cirros-0.5.1-x86_64-disk.img    --disk-format qcow2  --container-format bare  --public  </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack image list</span>+--------------------------------------+----------+--------+<span class="token operator">|</span> ID                                   <span class="token operator">|</span> Name     <span class="token operator">|</span> Status <span class="token operator">|</span>+--------------------------------------+----------+--------+<span class="token operator">|</span> aa06441f-024b-46ef-96c7-d7a9b6459363 <span class="token operator">|</span> cirros   <span class="token operator">|</span> active <span class="token operator">|</span><span class="token operator">|</span> 6c8e4250-ead4-42b9-ba92-e8210df2c65a <span class="token operator">|</span> cirros-2 <span class="token operator">|</span> active <span class="token operator">|</span>+--------------------------------------+----------+--------+<span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ll /var/lib/glance/images/</span>total 15956-rw-r----- 1 glance glance 16338944 May 20 18:18 6c8e4250-ead4-42b9-ba92-e8210df2c65a<span class="token comment" spellcheck="true"># image上传到了controller02</span></code></pre><h2 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h2><ul><li>存储<ul><li>ceph ,共享disk, rsync都可以实现</li></ul></li><li>数据<ul><li>数据库已经实现</li></ul></li></ul><blockquote><p>controller02 controller03 不需要创建服务,初始化数据 ,其他和controller01 一致</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装(keystone)</title>
      <link href="/2020/05/20/openstack-6/"/>
      <url>/2020/05/20/openstack-6/</url>
      
        <content type="html"><![CDATA[<h2 id="controller01-执行"><a href="#controller01-执行" class="headerlink" title="controller01 执行"></a>controller01 执行</h2><h3 id="创建vip-只是用来测试-haproxy-pcs-需要以后修改"><a href="#创建vip-只是用来测试-haproxy-pcs-需要以后修改" class="headerlink" title="创建vip 只是用来测试,haproxy pcs 需要以后修改"></a>创建vip 只是用来测试,haproxy pcs 需要以后修改</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ip address add 192.168.151.170/24 dev  ens37</span></code></pre><h3 id="数据库准备"><a href="#数据库准备" class="headerlink" title="数据库准备"></a>数据库准备</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># mysql </span>Welcome to the MariaDB monitor.  Commands end with <span class="token punctuation">;</span> or \g.Your MariaDB connection <span class="token function">id</span> is 11Server version: 10.3.10-MariaDB MariaDB ServerCopyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  CREATE DATABASE keystone<span class="token punctuation">;</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span>  GRANT ALL PRIVILEGES ON keystone.* TO <span class="token string">'keystone'</span>@<span class="token string">'localhost'</span> IDENTIFIED BY <span class="token string">'keystone'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> GRANT ALL PRIVILEGES ON keystone.* TO <span class="token string">'keystone'</span>@<span class="token string">'%'</span> IDENTIFIED BY <span class="token string">'keystone'</span><span class="token punctuation">;</span>Query OK, 0 rows affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> </code></pre><h3 id="安装keystone"><a href="#安装keystone" class="headerlink" title="安装keystone"></a>安装keystone</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  yum install openstack-keystone httpd mod_wsgi</span><span class="token comment" spellcheck="true">#修改配置</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/keystone/keystone.conf</span><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>connection <span class="token operator">=</span> mysql+pymysql://keystone:keystone@controller/keystone<span class="token punctuation">[</span>token<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ...</span>provider <span class="token operator">=</span> fernet</code></pre><h3 id="同步数据"><a href="#同步数据" class="headerlink" title="同步数据"></a>同步数据</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  su -s /bin/sh -c "keystone-manage db_sync" keystone</span></code></pre><h3 id="初始化key仓库"><a href="#初始化key仓库" class="headerlink" title="初始化key仓库"></a>初始化key仓库</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span></code></pre><h3 id="boot-认证"><a href="#boot-认证" class="headerlink" title="boot 认证"></a>boot 认证</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  keystone-manage bootstrap --bootstrap-password ADMIN_PASS \</span><span class="token operator">></span>   --bootstrap-admin-url http://controller:5000/v3/ \<span class="token operator">></span>   --bootstrap-internal-url http://controller:5000/v3/ \<span class="token operator">></span>   --bootstrap-public-url http://controller:5000/v3/ \<span class="token operator">></span>   --bootstrap-region-id RegionOne<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># </span></code></pre><h3 id="配置apache-服务器"><a href="#配置apache-服务器" class="headerlink" title="配置apache 服务器"></a>配置apache 服务器</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim  /etc/httpd/conf/httpd.conf</span><span class="token comment" spellcheck="true">#修改ServerName</span>ServerName controller <span class="token comment" spellcheck="true">#不存在需要增加 , controller 为虚拟ip</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span></code></pre><h3 id="启动-httpd"><a href="#启动-httpd" class="headerlink" title="启动 httpd"></a>启动 httpd</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable httpd.service</span>Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.<span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl start httpd.service</span></code></pre><h3 id="创建adminrc"><a href="#创建adminrc" class="headerlink" title="创建adminrc"></a>创建adminrc</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat adminrc </span><span class="token function">export</span> OS_PROJECT_DOMAIN_NAME<span class="token operator">=</span>Default<span class="token function">export</span> OS_USER_DOMAIN_NAME<span class="token operator">=</span>Default<span class="token function">export</span> OS_PROJECT_NAME<span class="token operator">=</span>admin<span class="token function">export</span> OS_USERNAME<span class="token operator">=</span>admin<span class="token function">export</span> OS_PASSWORD<span class="token operator">=</span>ADMIN_PASS<span class="token function">export</span> OS_AUTH_URL<span class="token operator">=</span>http://controller:5000/v3<span class="token function">export</span> OS_IDENTITY_API_VERSION<span class="token operator">=</span>3<span class="token function">export</span> OS_IMAGE_API_VERSION<span class="token operator">=</span>2</code></pre><h3 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint list</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> ID                               <span class="token operator">|</span> Region    <span class="token operator">|</span> Service Name <span class="token operator">|</span> Service Type <span class="token operator">|</span> Enabled <span class="token operator">|</span> Interface <span class="token operator">|</span> URL                        <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> b3e86457b4474ecbbe603b5e67c86e5c <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> admin     <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> b944df58864d4805b5a3a1c6aabd66fe <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> internal  <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> e2d58415719f4d2a9b3b1463aed3a76b <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> public    <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</code></pre><h2 id="controller02-controller03-安装"><a href="#controller02-controller03-安装" class="headerlink" title="controller02 ,controller03 安装"></a>controller02 ,controller03 安装</h2><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> openstack-keystone httpd mod_wsgi -y<span class="token comment" spellcheck="true">#修改配置 (参考controller01 ,)</span>vim  /etc/keystone/keystone.conf</code></pre><h3 id="Initialize-Fernet-key-repositories"><a href="#Initialize-Fernet-key-repositories" class="headerlink" title="Initialize Fernet key repositories"></a>Initialize Fernet key repositories</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><span class="token comment" spellcheck="true">### 配置apache 服务器</span> __ /etc/httpd/conf/httpd.conf__```bashServerName controller</code></pre><h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><p> <strong>/usr/share/keystone/wsgi-keystone.conf</strong></p><pre class=" language-bash"><code class="language-bash"> <span class="token function">ln</span> -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> httpd.servicesystemctl start httpd.service</code></pre><h2 id="vip测试"><a href="#vip测试" class="headerlink" title="vip测试"></a>vip测试</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#before </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint list</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> ID                               <span class="token operator">|</span> Region    <span class="token operator">|</span> Service Name <span class="token operator">|</span> Service Type <span class="token operator">|</span> Enabled <span class="token operator">|</span> Interface <span class="token operator">|</span> URL                        <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> b3e86457b4474ecbbe603b5e67c86e5c <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> admin     <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> b944df58864d4805b5a3a1c6aabd66fe <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> internal  <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> e2d58415719f4d2a9b3b1463aed3a76b <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> public    <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token comment" spellcheck="true"># after</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ip address delete   192.168.151.170/24 dev  ens37</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ip address add   192.168.151.170/24 dev  ens37</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># openstack endpoint list</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> ID                               <span class="token operator">|</span> Region    <span class="token operator">|</span> Service Name <span class="token operator">|</span> Service Type <span class="token operator">|</span> Enabled <span class="token operator">|</span> Interface <span class="token operator">|</span> URL                        <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+<span class="token operator">|</span> b3e86457b4474ecbbe603b5e67c86e5c <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> admin     <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> b944df58864d4805b5a3a1c6aabd66fe <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> internal  <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span><span class="token operator">|</span> e2d58415719f4d2a9b3b1463aed3a76b <span class="token operator">|</span> RegionOne <span class="token operator">|</span> keystone     <span class="token operator">|</span> identity     <span class="token operator">|</span> True    <span class="token operator">|</span> public    <span class="token operator">|</span> http://controller:5000/v3/ <span class="token operator">|</span>+----------------------------------+-----------+--------------+--------------+---------+-----------+----------------------------+</code></pre><blockquote><p>controller02 , controller03 配置和controller01一样, 不需要执行初始化数据库操作，其他的操作都要执行</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装(mariadb  rabbitmq , memcached  , chronyd , etcd)</title>
      <link href="/2020/05/20/openstack-5/"/>
      <url>/2020/05/20/openstack-5/</url>
      
        <content type="html"><![CDATA[<h2 id="mariadb-galera-安装"><a href="#mariadb-galera-安装" class="headerlink" title="mariadb galera 安装"></a>mariadb galera 安装</h2><h3 id="controller-node-执行"><a href="#controller-node-执行" class="headerlink" title="controller node 执行"></a>controller node 执行</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># controller01 </span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install mariadb mariadb-server python2-PyMySQL  galera mariadb-galera-server rsync   -y</span><span class="token comment" spellcheck="true"># controller02 , controller03</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install mariadb mariadb-server python2-PyMySQL  galera  rsync  -y</span></code></pre><h3 id="修改配置文件-all-node"><a href="#修改配置文件-all-node" class="headerlink" title="修改配置文件(all node)"></a>修改配置文件(all node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/my.cnf.d/mariadb-server.cnf </span><span class="token punctuation">[</span>galera<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># Mandatory settings</span><span class="token comment" spellcheck="true">#wsrep_on=ON</span><span class="token comment" spellcheck="true">#wsrep_provider=</span><span class="token comment" spellcheck="true">#wsrep_cluster_address=</span><span class="token comment" spellcheck="true">#binlog_format=row</span><span class="token comment" spellcheck="true">#default_storage_engine=InnoDB</span><span class="token comment" spellcheck="true">#innodb_autoinc_lock_mode=2</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Allow server to accept connections on all interfaces.</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true">#bind-address=0.0.0.0</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Optional setting</span><span class="token comment" spellcheck="true">#wsrep_slave_threads=1</span><span class="token comment" spellcheck="true">#innodb_flush_log_at_trx_commit=0</span>wsrep_on<span class="token operator">=</span>ONwsrep_provider<span class="token operator">=</span>/usr/lib64/galera/libgalera_smm.sowsrep_cluster_address<span class="token operator">=</span><span class="token string">"gcomm://192.168.151.71,192.168.151.72,192.168.151.73"</span>wsrep_node_name<span class="token operator">=</span> controller01wsrep_node_address<span class="token operator">=</span>192.168.151.71binlog_format<span class="token operator">=</span>rowdefault_storage_engine<span class="token operator">=</span>InnoDBinnodb_autoinc_lock_mode<span class="token operator">=</span>2wsrep_slave_threads<span class="token operator">=</span>1innodb_flush_log_at_trx_commit<span class="token operator">=</span>0innodb_buffer_pool_size<span class="token operator">=</span>120Mwsrep_sst_method<span class="token operator">=</span>rsyncwsrep_causal_reads<span class="token operator">=</span>ON<span class="token comment" spellcheck="true">#controller02 ,controller03  </span>copy 内容 修改 wsrep_node_name , wsrep_node_address</code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01  ,第一次启动</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># galera_new_cluster  #或者 /usr/libexec/mysqld  --wsrep-new-cluster --user=mysql</span><span class="token comment" spellcheck="true"># controller01 , 第二次启动</span><span class="token comment" spellcheck="true">###[root@controller01 ~]# service mariadb start</span><span class="token comment" spellcheck="true">#controller02 , controller03</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service mariadb start</span><span class="token comment" spellcheck="true"># all node</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable mariadb</span></code></pre><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#controller01</span>Query OK, 1 row affected <span class="token punctuation">(</span>0.006 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sss                <span class="token operator">|</span><span class="token operator">|</span> vvv                <span class="token operator">|</span>+--------------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.002 sec<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#controller02 , controller03</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sss                <span class="token operator">|</span><span class="token operator">|</span> vvv                <span class="token operator">|</span>+--------------------+5 rows <span class="token keyword">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span>0.002 sec<span class="token punctuation">)</span>MariaDB <span class="token punctuation">[</span><span class="token punctuation">(</span>none<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token keyword">exit</span>Bye</code></pre><h2 id="rabbitmq-安装"><a href="#rabbitmq-安装" class="headerlink" title="rabbitmq 安装"></a>rabbitmq 安装</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># all  controller nodes</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  yum install rabbitmq-server -y</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  systemctl enable rabbitmq-server.service</span><span class="token comment" spellcheck="true"># controller01 执行</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service rabbitmq-server start   # 启动完成生成文件 /var/lib/rabbitmq/.erlang.cookie</span><span class="token comment" spellcheck="true"># copy文件到controller02 , controller03</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># scp /var/lib/rabbitmq/.erlang.cookie root@controller03:/var/lib/rabbitmq/.erlang.cookie</span><span class="token comment" spellcheck="true"># 修改文件权限 controller02 ,controller03</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># chmod 400 /var/lib/rabbitmq/.erlang.cookie</span><span class="token comment" spellcheck="true"># controller02 , controller03  执行</span><span class="token comment" spellcheck="true">## 启动rabbitmq-server</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start rabbitmq-server.service</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rabbitmqctl stop_app</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  rabbitmqctl join_cluster --ram rabbit@controller01</span></code></pre><h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># rabbitmqctl cluster_status</span>Cluster status of node rabbit@controller01<span class="token punctuation">[</span><span class="token punctuation">{</span>nodes,<span class="token punctuation">[</span><span class="token punctuation">{</span>disc,<span class="token punctuation">[</span>rabbit@controller01<span class="token punctuation">]</span><span class="token punctuation">}</span>,         <span class="token punctuation">{</span>ram,<span class="token punctuation">[</span>rabbit@controller03,rabbit@controller02<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>running_nodes,<span class="token punctuation">[</span>rabbit@controller01<span class="token punctuation">]</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>cluster_name,<span class="token operator">&lt;&lt;</span><span class="token string">"rabbit@controller01"</span><span class="token operator">>></span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>partitions,<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>alarms,<span class="token punctuation">[</span><span class="token punctuation">{</span>rabbit@controller01,<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">## 以后service  rabbitmq-server restart</span></code></pre><h3 id="创建用户-配置权限"><a href="#创建用户-配置权限" class="headerlink" title="创建用户,配置权限"></a>创建用户,配置权限</h3><pre><code>[root@controller01 ~]#  rabbitmqctl add_user openstack openstackCreating user &quot;openstack&quot;[root@controller01 ~]# rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;Setting permissions for user &quot;openstack&quot; in vhost &quot;/&quot;</code></pre><h2 id="memach-安装"><a href="#memach-安装" class="headerlink" title="memach 安装"></a>memach 安装</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## all nodes执行</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install memcached python-memcached -y</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable memcached.service</span><span class="token comment" spellcheck="true">## 修改配置文件</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat   /etc/sysconfig/memcached</span>PORT<span class="token operator">=</span><span class="token string">"11211"</span>USER<span class="token operator">=</span><span class="token string">"memcached"</span>MAXCONN<span class="token operator">=</span><span class="token string">"1024"</span>CACHESIZE<span class="token operator">=</span><span class="token string">"64"</span>OPTIONS<span class="token operator">=</span><span class="token string">"-l 127.0.0.1,::1,controller02"</span><span class="token comment" spellcheck="true">## 不同机器监听不同的hostname</span><span class="token comment" spellcheck="true">## 启动</span><span class="token punctuation">[</span>root@controller02 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start memcached.service</span></code></pre><h2 id="ntp-服务器"><a href="#ntp-服务器" class="headerlink" title="ntp 服务器"></a>ntp 服务器</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># all nodes include compute nodes</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#  yum install chrony -y</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl enable chronyd.service</span><span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># vim /etc/chrony.conf </span><span class="token comment" spellcheck="true">#server 0.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 1.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 2.centos.pool.ntp.org iburst</span><span class="token comment" spellcheck="true">#server 3.centos.pool.ntp.org iburst</span>server ntp1.aliyun.com  iburstserver ntp2.aliyun.com  iburst<span class="token punctuation">[</span>root@controller03 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># systemctl start chronyd.service</span></code></pre><h2 id="etcd"><a href="#etcd" class="headerlink" title="etcd"></a>etcd</h2><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#没用到, 先不安装。等出错在&lt;处理</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack stein 高可用安装 -- 环境准备</title>
      <link href="/2020/05/20/openstack-4/"/>
      <url>/2020/05/20/openstack-4/</url>
      
        <content type="html"><![CDATA[<h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><table><thead><tr><th>vip</th><th>管理ip</th><th>存储ip</th><th>外网ip</th><th>host</th><th>OS</th></tr></thead><tbody><tr><td>192.168.151.200</td><td>192.168.151.71</td><td></td><td></td><td>controller01</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.151.72</td><td></td><td></td><td>controller02</td><td>centos 7</td></tr><tr><td>192.168.151.200</td><td>192.168.151.73</td><td></td><td></td><td>controller03</td><td>centos 7</td></tr><tr><td></td><td>192.168.151.74</td><td></td><td></td><td>compute01</td><td>centos 7</td></tr></tbody></table><h3 id="内核升级-all-node"><a href="#内核升级-all-node" class="headerlink" title="内核升级(all node)"></a>内核升级(all node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum --disablerepo="*" --enablerepo=elrepo-kernel install -y kernel-ml</span><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># grub2-set-default 0</span></code></pre><h3 id="修改hostname-only-controller-node"><a href="#修改hostname-only-controller-node" class="headerlink" title="修改hostname (only controller node)"></a>修改hostname (only controller node)</h3><pre class=" language-bash"><code class="language-bash">hostnamectl set-hostname controller02  controller03  controller01</code></pre><h3 id="copy公钥-only-controller-node"><a href="#copy公钥-only-controller-node" class="headerlink" title="copy公钥 (only controller node)"></a>copy公钥 (only controller node)</h3><pre class=" language-bash"><code class="language-bash">ssh-keygen <span class="token comment" spellcheck="true"># 一直回车</span>ssh-copy-id  root@controller01  root@controller02 root@controller03</code></pre><h3 id="修改hosts配置-all-node"><a href="#修改hosts配置-all-node" class="headerlink" title="修改hosts配置(all node)"></a>修改hosts配置(all node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># /etc/hosts</span>192.168.151.71 controller01192.168.151.72 controller02192.168.151.73 controller03192.168.151.170 controller</code></pre><h3 id="准备安装包-all-node"><a href="#准备安装包-all-node" class="headerlink" title="准备安装包(all node)"></a>准备安装包(all node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install centos-release-openstack-stein</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum upgrade  # 内核如果开始安装会被替换,需要重新替换回去</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install openstack-selinux # 或者关闭防火墙, selinux</span><span class="token comment" spellcheck="true"># 本人测试安装selinux 后关闭防火墙</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service firewalld stop</span><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /etc/selinux/config </span><span class="token comment" spellcheck="true"># This file controls the state of SELinux on the system.</span><span class="token comment" spellcheck="true"># SELINUX= can take one of these three values:</span><span class="token comment" spellcheck="true">#     enforcing - SELinux security policy is enforced.</span><span class="token comment" spellcheck="true">#     permissive - SELinux prints warnings instead of enforcing.</span><span class="token comment" spellcheck="true">#     disabled - No SELinux policy is loaded.</span>SELINUX<span class="token operator">=</span>disabled<span class="token comment" spellcheck="true"># SELINUXTYPE= can take one of three two values:</span><span class="token comment" spellcheck="true">#     targeted - Targeted processes are protected,</span><span class="token comment" spellcheck="true">#     minimum - Modification of targeted policy. Only selected processes are protected. </span><span class="token comment" spellcheck="true">#     mls - Multi Level Security protection.</span>SELINUXTYPE<span class="token operator">=</span>targeted </code></pre><h3 id="安装python-client-controller-node"><a href="#安装python-client-controller-node" class="headerlink" title="安装python client(controller node)"></a>安装python client(controller node)</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@controller01 ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># yum -y install python-openstackclient</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  agent 内存增长</title>
      <link href="/2020/04/16/ruby-29/"/>
      <url>/2020/04/16/ruby-29/</url>
      
        <content type="html"><![CDATA[<h4 id="ruby-collect-内存一直增加"><a href="#ruby-collect-内存一直增加" class="headerlink" title="ruby collect 内存一直增加"></a>ruby collect 内存一直增加</h4><p>reason ruby 申请的内存不会释放,需要自己去解决</p><ul><li>代码启动过高的线程</li><li>代码可能导致内存泄露</li></ul><p>解决方式</p><ol><li><p>god  killer </p></li><li><p>线程换成进程处理</p></li></ol><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'timeout'</span>servers<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>server<span class="token operator">|</span>    pid <span class="token operator">=</span> fork <span class="token keyword">do</span>        puts <span class="token string">"Forking <span class="token interpolation"><span class="token delimiter tag">#{</span>server<span class="token delimiter tag">}</span></span>."</span>        output <span class="token operator">=</span> <span class="token string">"doing stuff here"</span>        puts output    <span class="token keyword">end</span>    <span class="token keyword">begin</span>        <span class="token constant">Timeout</span><span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">do</span>            <span class="token constant">Process</span><span class="token punctuation">.</span>wait        <span class="token keyword">end</span>    <span class="token keyword">rescue</span> <span class="token constant">Timeout</span><span class="token punctuation">:</span><span class="token symbol">:Error</span>        <span class="token constant">Process</span><span class="token punctuation">.</span>kill <span class="token number">9</span><span class="token punctuation">,</span> pid        <span class="token comment" spellcheck="true"># collect status so it doesn't stick around as zombie process</span>        <span class="token constant">Process</span><span class="token punctuation">.</span>wait pid    <span class="token keyword">end</span>    puts <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>server<span class="token delimiter tag">}</span></span> child exited, pid = <span class="token interpolation"><span class="token delimiter tag">#{</span>pid<span class="token delimiter tag">}</span></span>"</span><span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  Memory debug</title>
      <link href="/2020/04/16/ruby-28/"/>
      <url>/2020/04/16/ruby-28/</url>
      
        <content type="html"><![CDATA[<pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'benchmark'</span><span class="token keyword">def</span> print_memory_usage  memory_before <span class="token operator">=</span> `ps <span class="token operator">-</span>o rss<span class="token operator">=</span> <span class="token operator">-</span>p #<span class="token punctuation">{</span><span class="token constant">Process</span><span class="token punctuation">.</span>pid<span class="token punctuation">}</span>`<span class="token punctuation">.</span>to_i  <span class="token keyword">yield</span>  memory_after <span class="token operator">=</span> `ps <span class="token operator">-</span>o rss<span class="token operator">=</span> <span class="token operator">-</span>p #<span class="token punctuation">{</span><span class="token constant">Process</span><span class="token punctuation">.</span>pid<span class="token punctuation">}</span>`<span class="token punctuation">.</span>to_i  puts <span class="token string">"Memory: <span class="token interpolation"><span class="token delimiter tag">#{</span><span class="token punctuation">(</span><span class="token punctuation">(</span>memory_after <span class="token operator">-</span> memory_before<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token delimiter tag">}</span></span> MB"</span><span class="token keyword">end</span><span class="token keyword">def</span> print_time_spent  time <span class="token operator">=</span> <span class="token constant">Benchmark</span><span class="token punctuation">.</span>realtime <span class="token keyword">do</span>    <span class="token keyword">yield</span>  <span class="token keyword">end</span>  puts <span class="token string">"Time: <span class="token interpolation"><span class="token delimiter tag">#{</span>time<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token delimiter tag">}</span></span>"</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># generate.rb</span><span class="token keyword">require</span> <span class="token string">'csv'</span>require_relative <span class="token string">'./helpers'</span>headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'email'</span><span class="token punctuation">,</span> <span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'street'</span><span class="token punctuation">,</span> <span class="token string">'country'</span><span class="token punctuation">]</span>name    <span class="token operator">=</span> <span class="token string">"Pink Panther"</span>email   <span class="token operator">=</span> <span class="token string">"pink.panther@example.com"</span>city    <span class="token operator">=</span> <span class="token string">"Pink City"</span>street  <span class="token operator">=</span> <span class="token string">"Pink Road"</span>country <span class="token operator">=</span> <span class="token string">"Pink Country"</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> write_headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">,</span> headers<span class="token punctuation">:</span> headers<span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>csv<span class="token operator">|</span>      1_000_000<span class="token punctuation">.</span>times <span class="token keyword">do</span> <span class="token operator">|</span>i<span class="token operator">|</span>        csv <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> name<span class="token punctuation">,</span> email<span class="token punctuation">,</span> city<span class="token punctuation">,</span> street<span class="token punctuation">,</span> country<span class="token punctuation">]</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># ruby generate.rb</span><span class="token comment" spellcheck="true"># Time: 5.17</span><span class="token comment" spellcheck="true"># Memory: 1.08 MB</span>require_relative <span class="token string">'./helpers'</span><span class="token keyword">require</span> <span class="token string">'csv'</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    csv <span class="token operator">=</span> <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">,</span> headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">)</span>    sum <span class="token operator">=</span> <span class="token number">0</span>    csv<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>row<span class="token operator">|</span>      sum <span class="token operator">+</span><span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i    <span class="token keyword">end</span>    puts <span class="token string">"Sum: <span class="token interpolation"><span class="token delimiter tag">#{</span>sum<span class="token delimiter tag">}</span></span>"</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token constant">Sum</span><span class="token punctuation">:</span> <span class="token number">499999500000</span><span class="token builtin">Time</span><span class="token punctuation">:</span> <span class="token number">19.84</span><span class="token constant">Memory</span><span class="token punctuation">:</span> <span class="token number">920.14</span> <span class="token constant">MB</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>require_relative <span class="token string">'./helpers'</span><span class="token keyword">require</span> <span class="token string">'csv'</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    content <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">)</span>    csv <span class="token operator">=</span> <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">)</span>    sum <span class="token operator">=</span> <span class="token number">0</span>    csv<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>row<span class="token operator">|</span>      sum <span class="token operator">+</span><span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i    <span class="token keyword">end</span>    puts <span class="token string">"Sum: <span class="token interpolation"><span class="token delimiter tag">#{</span>sum<span class="token delimiter tag">}</span></span>"</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">#Sum: 499999500000</span><span class="token comment" spellcheck="true">#Time: 21.71</span><span class="token comment" spellcheck="true">#Memory: 1003.69 MB</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>require_relative <span class="token string">'./helpers'</span><span class="token keyword">require</span> <span class="token string">'csv'</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    content <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">)</span>    csv <span class="token operator">=</span> <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">)</span>    sum <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> row <span class="token operator">=</span> csv<span class="token punctuation">.</span>shift      sum <span class="token operator">+</span><span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i    <span class="token keyword">end</span>    puts <span class="token string">"Sum: <span class="token interpolation"><span class="token delimiter tag">#{</span>sum<span class="token delimiter tag">}</span></span>"</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># Sum: 499999500000</span><span class="token comment" spellcheck="true"># Time: 9.73</span><span class="token comment" spellcheck="true"># Memory: 74.64 MB</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>require_relative <span class="token string">'./helpers'</span><span class="token keyword">require</span> <span class="token string">'csv'</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>file<span class="token operator">|</span>      csv <span class="token operator">=</span> <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">)</span>      sum <span class="token operator">=</span> <span class="token number">0</span>      <span class="token keyword">while</span> row <span class="token operator">=</span> csv<span class="token punctuation">.</span>shift        sum <span class="token operator">+</span><span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i      <span class="token keyword">end</span>      puts <span class="token string">"Sum: <span class="token interpolation"><span class="token delimiter tag">#{</span>sum<span class="token delimiter tag">}</span></span>"</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">#Sum: 499999500000</span><span class="token comment" spellcheck="true">#Time: 9.88</span><span class="token comment" spellcheck="true">#Memory: 0.58 MB</span>require_relative <span class="token string">'./helpers'</span><span class="token keyword">require</span> <span class="token string">'csv'</span>print_memory_usage <span class="token keyword">do</span>  print_time_spent <span class="token keyword">do</span>    sum <span class="token operator">=</span> <span class="token number">0</span>    <span class="token constant">CSV</span><span class="token punctuation">.</span><span class="token function">foreach</span><span class="token punctuation">(</span><span class="token string">'data.csv'</span><span class="token punctuation">,</span> headers<span class="token punctuation">:</span> <span class="token keyword">true</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>row<span class="token operator">|</span>      sum <span class="token operator">+</span><span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i    <span class="token keyword">end</span>    puts <span class="token string">"Sum: <span class="token interpolation"><span class="token delimiter tag">#{</span>sum<span class="token delimiter tag">}</span></span>"</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true">#Sum: 499999500000</span><span class="token comment" spellcheck="true">#Time: 9.84</span><span class="token comment" spellcheck="true">#Memory: 0.53 MB</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack  存储 iscsi</title>
      <link href="/2020/04/15/openstack-3/"/>
      <url>/2020/04/15/openstack-3/</url>
      
        <content type="html"><![CDATA[<pre><code> tgtadm --lld iscsi --op show --mode target iscsiadm -m node -T targetname -p ipaddress -l  iscsiadm -m node -o showiscsiadm   -m node   -T   iqn.2010-10.org.openstack:volume-feb085f0-5055-4dbf-afe8-6810077fd821   -p 192.168.50.3:3260   -o update  -n node.session.auth.username -v Qz9gqHQnqN92zzj22JsUiscsiadm   -m node   -T   iqn.2010-10.org.openstack:volume-feb085f0-5055-4dbf-afe8-6810077fd821   -p 192.168.50.3:3260   -o update  -n node.session.auth.password -v vfbNFdJYBFuA66hRserver yum -y install scsi-target-utilsdd if=/dev/zero of=storage.img bs=1M count=2000&lt;target iqn.2010-10.org.opennebula:storage&gt;    backing-store /root/storage.img    driver iscsi    incominguser root 123456    write-cache on&lt;/target&gt;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula win7 img制作</title>
      <link href="/2020/04/15/opennebula-20/"/>
      <url>/2020/04/15/opennebula-20/</url>
      
        <content type="html"><![CDATA[<h1 id="需要安装virtio-win-0-1-141-iso"><a href="#需要安装virtio-win-0-1-141-iso" class="headerlink" title="需要安装virtio-win-0.1.141.iso"></a>需要安装virtio-win-0.1.141.iso</h1><ol><li>win7.img 20G , qcow2 , virtio</li><li>virtio-win raw cdrom</li><li><p>win7.iso  raw cdrom</p></li><li><p>启动顺序 win7.iso , virtio-win.iso win7.img</p></li><li><p>执行onecontext 脚本</p></li></ol><blockquote><p>可以通过webvirtmgr安装 image</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack 存储问题</title>
      <link href="/2020/04/15/openstack-2/"/>
      <url>/2020/04/15/openstack-2/</url>
      
        <content type="html"><![CDATA[<p>mount 存储 一直pending</p><blockquote><p>br-aux 网络异常，cinder-volume 进程报错<br>vip 不能访问</p></blockquote><p>存储disk 找不不到</p><blockquote><p>detach<br>手动创建snapshot ，导出存储<br>lvscan 发现inactive ，enable it</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack IDC 问题 网络</title>
      <link href="/2020/04/15/openstack-1/"/>
      <url>/2020/04/15/openstack-1/</url>
      
        <content type="html"><![CDATA[<h4 id="br-aux-网络问题"><a href="#br-aux-网络问题" class="headerlink" title="br-aux 网络问题"></a>br-aux 网络问题</h4><p>不能访问外网 , 内部ip互通</p><blockquote><p>br-aux 网卡 off line<br>重启网卡,失败，去机房换网线</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>46<span class="token operator">></span>Apr 13 17:55:41 controller01 horizon_access - - - <span class="token punctuation">[</span>13/Apr/2020:17:55:34 +0800<span class="token punctuation">]</span> <span class="token string">"OPTIONS / HTTP/1.0"</span> 301 240 194 <span class="token string">"-"</span> <span class="token string">"-"</span><span class="token operator">&lt;</span>46<span class="token operator">></span>Apr 13 17:55:41 controller01 horizon_access - - - <span class="token punctuation">[</span>13/Apr/2020:17:55:36 +0800<span class="token punctuation">]</span> <span class="token string">"OPTIONS / HTTP/1.0"</span> 301 240 187 <span class="token string">"-"</span> <span class="token string">"-"</span><span class="token operator">&lt;</span>46<span class="token operator">></span>Apr 13 17:55:41 controller01 horizon_access - - - <span class="token punctuation">[</span>13/Apr/2020:17:55:38 +0800<span class="token punctuation">]</span> <span class="token string">"OPTIONS / HTTP/1.0"</span> 301 240 191 <span class="token string">"-"</span> <span class="token string">"-"</span><span class="token operator">&lt;</span>46<span class="token operator">></span>Apr 13 17:55:41 controller01 horizon_access - - - <span class="token punctuation">[</span>13/Apr/2020:17:55:40 +0800<span class="token punctuation">]</span> <span class="token string">"OPTIONS / HTTP/1.0"</span> 301 240 164 <span class="token string">"-"</span> <span class="token string">"-"</span><span class="token operator">&lt;</span>6<span class="token operator">></span>Apr 13 17:55:42 controller01 kernel: <span class="token punctuation">[</span>96277.132056<span class="token punctuation">]</span> tg3 0000:02:00.1 eno4: Link is down<span class="token operator">&lt;</span>6<span class="token operator">></span>Apr 13 17:55:42 controller01 kernel: <span class="token punctuation">[</span>96277.132179<span class="token punctuation">]</span> br-aux: port 1<span class="token punctuation">(</span>eno4<span class="token punctuation">)</span> entered disabled state</code></pre><h4 id="compute00-dhcp-异常"><a href="#compute00-dhcp-异常" class="headerlink" title="compute00 dhcp 异常"></a>compute00 dhcp 异常</h4><p>compute00 内网ip 不能分配到floating ip , 其他compute节点可以</p><blockquote><p>compute00 交换机上联口， 网卡插错</p></blockquote><h4 id="vip-访问失败"><a href="#vip-访问失败" class="headerlink" title="vip 访问失败"></a>vip 访问失败</h4><p>可以telnet物理 ip port   , vip telnet 报错</p><blockquote><p>packemaker 导致，停止pacemaker</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails api 文档</title>
      <link href="/2020/04/09/rails-6/"/>
      <url>/2020/04/09/rails-6/</url>
      
        <content type="html"><![CDATA[<h4 id="创建markdown文档"><a href="#创建markdown文档" class="headerlink" title="创建markdown文档"></a>创建markdown文档</h4><p>扩展rails apipie</p><ul><li>rails apipie</li></ul><pre class=" language-ruby"><code class="language-ruby">app<span class="token operator">/</span>doc<span class="token keyword">module</span> <span class="token constant">BaseDoc</span>  include <span class="token constant">Apipie</span><span class="token punctuation">:</span><span class="token symbol">:DSL</span><span class="token punctuation">:</span><span class="token symbol">:Concern</span>  extend <span class="token constant">Apipie</span><span class="token punctuation">:</span><span class="token symbol">:DSL</span><span class="token punctuation">:</span><span class="token symbol">:Concern</span>  <span class="token keyword">def</span> check_token    <span class="token function">send</span><span class="token punctuation">(</span><span class="token symbol">:include</span><span class="token punctuation">,</span> <span class="token constant">Header</span><span class="token punctuation">:</span><span class="token symbol">:TokenDoc</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> check_permission    <span class="token function">send</span><span class="token punctuation">(</span><span class="token symbol">:include</span><span class="token punctuation">,</span> <span class="token constant">Header</span><span class="token punctuation">:</span><span class="token symbol">:DomainDoc</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> check_paginate    <span class="token function">send</span><span class="token punctuation">(</span><span class="token symbol">:include</span><span class="token punctuation">,</span> <span class="token constant">Header</span><span class="token punctuation">:</span><span class="token symbol">:PaginateDoc</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">defaults</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    <span class="token variable">@defaults</span> <span class="token operator">=</span> block  <span class="token keyword">end</span>  <span class="token keyword">def</span> param_group_common_base    param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">doc_for</span><span class="token punctuation">(</span>action_name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    formats <span class="token punctuation">[</span><span class="token string">"json"</span><span class="token punctuation">]</span>    <span class="token function">instance_eval</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    <span class="token function">instance_eval</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">@defaults</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token variable">@defaults</span>    api_version <span class="token variable">@namespace_name</span> <span class="token keyword">if</span> <span class="token variable">@namespace_name</span>    internelerror    notfound    nopermission    <span class="token keyword">define_method</span><span class="token punctuation">(</span>action_name<span class="token punctuation">)</span> <span class="token keyword">do</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">jsonlistreturn</span><span class="token punctuation">(</span>desc <span class="token operator">=</span> <span class="token string">"返回列表"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> desc <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"返回全部数据"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token symbol">:array_of</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token builtin">Array</span> <span class="token keyword">do</span>        <span class="token function">instance_eval</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>block<span class="token punctuation">)</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">singlejsonreturn</span><span class="token punctuation">(</span>desc <span class="token operator">=</span> <span class="token string">"返回单个数据"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> desc <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"返回单个数据"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token symbol">:array_of</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token builtin">Hash</span> <span class="token keyword">do</span>        <span class="token function">instance_eval</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>block<span class="token punctuation">)</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">paginatejsonlistreturn</span><span class="token punctuation">(</span>desc <span class="token operator">=</span> <span class="token string">"返回分页数据"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>block<span class="token punctuation">)</span>    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> desc <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"200"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"分页返回数据"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token symbol">:array_of</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token builtin">Array</span> <span class="token keyword">do</span>        <span class="token function">instance_eval</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>block<span class="token punctuation">)</span>      <span class="token keyword">end</span>      property <span class="token symbol">:total_number</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"总条数"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:current_page</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"当前页"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:total_page</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"总页数"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:limit</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"返回个数"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> internelerror    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"服务器错误"</span> <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"500"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"服务器内部错误"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"详细"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> nopermission    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token symbol">:unprocessable_entity</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"422错误"</span> <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"422"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"html 422 错误"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"详细"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> notfound    returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"Fleas were discovered on the pet"</span> <span class="token keyword">do</span>      property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"404"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"找到到数据"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"详细"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># app/doc/header/token_doc.rb</span><span class="token keyword">module</span> <span class="token constant">Header</span><span class="token punctuation">:</span><span class="token symbol">:TokenDoc</span>  <span class="token keyword">def</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">included</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>    base<span class="token punctuation">.</span>instance_eval <span class="token keyword">do</span>      header <span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token string">"Bearer 123456"</span> <span class="token punctuation">,</span> <span class="token string">"Bearer 认证"</span>      error code<span class="token punctuation">:</span> <span class="token number">401</span><span class="token punctuation">,</span> desc<span class="token punctuation">:</span> <span class="token string">"认证失败"</span>      returns <span class="token symbol">:code</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"需要登陆"</span> <span class="token keyword">do</span>        property <span class="token symbol">:code</span><span class="token punctuation">,</span> <span class="token symbol">:number</span> <span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"401"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>        property <span class="token symbol">:message</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"需要登录"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>        property <span class="token symbol">:data</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"详细"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># app/doc</span><span class="token keyword">module</span> <span class="token constant">DomainsDoc</span>  extend <span class="token constant">BaseDoc</span>  <span class="token keyword">def</span> <span class="token keyword">self</span><span class="token punctuation">.</span>superclass    <span class="token constant">DomainsController</span>  <span class="token keyword">end</span>  resource_description <span class="token keyword">do</span>    resource_id <span class="token string">"Domains"</span>    formats <span class="token punctuation">[</span><span class="token symbol">:json</span><span class="token punctuation">]</span>    api_versions <span class="token string">"public"</span>  <span class="token keyword">end</span>  def_param_group <span class="token symbol">:domain</span> <span class="token keyword">do</span>    param <span class="token symbol">:name</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域名"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    param <span class="token symbol">:description</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"描述"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    param <span class="token symbol">:superuser</span><span class="token punctuation">,</span> <span class="token builtin">Array</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"超级用户"</span>  <span class="token keyword">end</span>  doc_for <span class="token symbol">:show</span> <span class="token keyword">do</span>    check_permission    check_token    api <span class="token symbol">:GET</span><span class="token punctuation">,</span> <span class="token string">"/domains/:id"</span><span class="token punctuation">,</span> <span class="token string">"查看单个域"</span>    param_group <span class="token symbol">:domain</span>    singlejsonreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  doc_for <span class="token symbol">:destroy</span> <span class="token keyword">do</span>    check_permission    check_token    api <span class="token symbol">:DELETE</span><span class="token punctuation">,</span> <span class="token string">"/domains/:id"</span><span class="token punctuation">,</span> <span class="token string">"删除域"</span>    singlejsonreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  doc_for <span class="token symbol">:update</span> <span class="token keyword">do</span>    check_permission    check_token    api <span class="token symbol">:PUT</span><span class="token punctuation">,</span> <span class="token string">"/domains/:id"</span><span class="token punctuation">,</span> <span class="token string">"修改域"</span>    param_group <span class="token symbol">:domain</span>    singlejsonreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  doc_for <span class="token symbol">:create</span> <span class="token keyword">do</span>    check_permission    check_token    api <span class="token symbol">:POST</span><span class="token punctuation">,</span> <span class="token string">"/domains"</span><span class="token punctuation">,</span> <span class="token string">"创建域"</span>    param_group <span class="token symbol">:domain</span>    singlejsonreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  doc_for <span class="token symbol">:index</span> <span class="token keyword">do</span>    check_permission    check_token    api <span class="token symbol">:GET</span><span class="token punctuation">,</span> <span class="token string">"/domains"</span><span class="token punctuation">,</span> <span class="token string">"查看域列表"</span>    paginatejsonlistreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>    jsonlistreturn <span class="token keyword">do</span>      param_group <span class="token symbol">:domain</span>      param <span class="token symbol">:id</span><span class="token punctuation">,</span> <span class="token builtin">Integer</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"域id"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:created_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"创建时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>      param <span class="token symbol">:updated_at</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token symbol">:desc</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"修改时间"</span><span class="token punctuation">,</span> <span class="token symbol">:required</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">true</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><ul><li>lib task 扩展<ul><li>lib/tasks/apipie.rake </li></ul></li></ul><pre class=" language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">require</span> <span class="token string">"fileutils"</span>namespace <span class="token symbol">:apipie</span> <span class="token keyword">do</span>  desc <span class="token string">"创建markdown文档 , 通过json api 翻译"</span>  task <span class="token symbol">:markdown</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token symbol">:version</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token symbol">:environment</span> <span class="token keyword">do</span> <span class="token operator">|</span>t<span class="token punctuation">,</span> args<span class="token operator">|</span>    with_loaded_documentation <span class="token keyword">do</span>      args<span class="token punctuation">.</span><span class="token function">with_defaults</span><span class="token punctuation">(</span><span class="token symbol">:version</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token constant">Apipie</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>default_version<span class="token punctuation">)</span>      doc <span class="token operator">=</span> <span class="token constant">Apipie</span><span class="token punctuation">.</span><span class="token function">to_json</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token symbol">:version</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">nil</span><span class="token punctuation">,</span> <span class="token keyword">nil</span><span class="token punctuation">,</span> <span class="token keyword">nil</span><span class="token punctuation">)</span>      generate_markdown_project_page doc    <span class="token keyword">end</span>  <span class="token keyword">end</span>  desc <span class="token string">"创建wiki文档"</span>  task <span class="token symbol">:wiki</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token symbol">:version</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token symbol">:environment</span> <span class="token keyword">do</span> <span class="token operator">|</span>t<span class="token punctuation">,</span> args<span class="token operator">|</span>    with_loaded_documentation <span class="token keyword">do</span>      <span class="token keyword">raise</span> <span class="token string">"暂时不支持"</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">generate_markdown_project_page</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>    <span class="token constant">FileUtils</span><span class="token punctuation">.</span><span class="token function">mkdir_p</span><span class="token punctuation">(</span>doc_absolute_dir<span class="token punctuation">)</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>exists<span class="token operator">?</span><span class="token punctuation">(</span>doc_absolute_dir<span class="token punctuation">)</span>    generate_project_index_markdown doc<span class="token punctuation">[</span><span class="token symbol">:docs</span><span class="token punctuation">]</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">generate_project_index_markdown</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>    file <span class="token operator">=</span> <span class="token string">"index.md"</span>    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>doc_absolute_dir<span class="token delimiter tag">}</span></span>/<span class="token interpolation"><span class="token delimiter tag">#{</span>file<span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>io<span class="token operator">|</span>      io<span class="token punctuation">.</span>puts <span class="token string">"### 项目:    **<span class="token interpolation"><span class="token delimiter tag">#{</span>info<span class="token punctuation">[</span><span class="token punctuation">:</span>name<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>**"</span>      io<span class="token punctuation">.</span>puts <span class="token string">"### Info: <span class="token interpolation"><span class="token delimiter tag">#{</span><span class="token function">strip_html</span><span class="token punctuation">(</span>info<span class="token punctuation">[</span><span class="token punctuation">:</span>info<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token delimiter tag">}</span></span> "</span>      info<span class="token punctuation">[</span><span class="token symbol">:resources</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>controllername<span class="token punctuation">,</span> json_value<span class="token operator">|</span>        <span class="token comment" spellcheck="true">#io.puts " - [#{controllername}](#{doc_relative_dir}/#{controllername}/index.md})  #{json_value[:short_description]}"</span>        io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>controllername<span class="token delimiter tag">}</span></span> <span class="token interpolation"><span class="token delimiter tag">#{</span>json_value<span class="token punctuation">[</span><span class="token punctuation">:</span>short_description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>        generate_controller_index_markdown json_value<span class="token punctuation">,</span> controllername      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">generate_controller_index_markdown</span><span class="token punctuation">(</span>json_value<span class="token punctuation">,</span> controllername<span class="token punctuation">)</span>    controller_index_dir <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>doc_absolute_dir<span class="token punctuation">,</span> controllername<span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">"index.md"</span>    <span class="token constant">FileUtils</span><span class="token punctuation">.</span><span class="token function">mkdir_p</span><span class="token punctuation">(</span>controller_index_dir<span class="token punctuation">)</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>exists<span class="token operator">?</span><span class="token punctuation">(</span>controller_index_dir<span class="token punctuation">)</span>    <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>controller_index_dir<span class="token delimiter tag">}</span></span>/<span class="token interpolation"><span class="token delimiter tag">#{</span>filename<span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>io<span class="token operator">|</span>      io<span class="token punctuation">.</span>puts <span class="token string">"#### <span class="token interpolation"><span class="token delimiter tag">#{</span>json_value<span class="token punctuation">[</span><span class="token punctuation">:</span>short_description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>      io<span class="token punctuation">.</span>puts <span class="token string">""</span>      json_value<span class="token punctuation">[</span><span class="token symbol">:methods</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>method<span class="token operator">|</span>        method<span class="token punctuation">[</span><span class="token symbol">:apis</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>api<span class="token operator">|</span>          <span class="token comment" spellcheck="true">#io.puts " - [#{method[:name]}](#{doc_relative_dir}/#{controllername}/#{method[:name]}/index.md})  #{api[:short_description]}"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"- <span class="token interpolation"><span class="token delimiter tag">#{</span>method<span class="token punctuation">[</span><span class="token punctuation">:</span>name<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> <span class="token interpolation"><span class="token delimiter tag">#{</span>api<span class="token punctuation">[</span><span class="token punctuation">:</span>short_description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>          <span class="token keyword">break</span>        <span class="token keyword">end</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>    generate_controller_action_markdown json_value<span class="token punctuation">,</span> controllername  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">generate_controller_action_markdown</span><span class="token punctuation">(</span>resource<span class="token punctuation">,</span> controllername<span class="token punctuation">)</span>    controller_index_dir <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>doc_absolute_dir<span class="token punctuation">,</span> controllername<span class="token punctuation">)</span>    <span class="token constant">FileUtils</span><span class="token punctuation">.</span><span class="token function">mkdir_p</span><span class="token punctuation">(</span>controller_index_dir<span class="token punctuation">)</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>exists<span class="token operator">?</span><span class="token punctuation">(</span>controller_index_dir<span class="token punctuation">)</span>    resource<span class="token punctuation">[</span><span class="token symbol">:methods</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>method<span class="token operator">|</span>      action_index_dir <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>controller_index_dir<span class="token punctuation">,</span> method<span class="token punctuation">[</span><span class="token symbol">:name</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token constant">FileUtils</span><span class="token punctuation">.</span><span class="token function">mkdir_p</span><span class="token punctuation">(</span>action_index_dir<span class="token punctuation">)</span> <span class="token keyword">unless</span> <span class="token builtin">File</span><span class="token punctuation">.</span>exists<span class="token operator">?</span><span class="token punctuation">(</span>action_index_dir<span class="token punctuation">)</span>      <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>action_index_dir<span class="token delimiter tag">}</span></span>/index.md"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>io<span class="token operator">|</span>        method<span class="token punctuation">[</span><span class="token symbol">:apis</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>api<span class="token operator">|</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### action"</span>          io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>method<span class="token punctuation">[</span><span class="token punctuation">:</span>name<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### URL"</span>          io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>api<span class="token punctuation">[</span><span class="token punctuation">:</span>api_url<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> "</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### 请求方法"</span>          io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>api<span class="token punctuation">[</span><span class="token punctuation">:</span>http_method<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### formats "</span>          io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>method<span class="token punctuation">[</span><span class="token punctuation">:</span>formats<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### 描述"</span>          io<span class="token punctuation">.</span>puts <span class="token string">" - <span class="token interpolation"><span class="token delimiter tag">#{</span>api<span class="token punctuation">[</span><span class="token punctuation">:</span>short_description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### 请求Header "</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| 参数名  | 是否必须   | 默认值  |  描述  |"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| :----- | :---- | :----- | :----- |"</span>          resource<span class="token punctuation">[</span><span class="token symbol">:headers</span><span class="token punctuation">]</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>          <span class="token punctuation">(</span>method<span class="token punctuation">[</span><span class="token symbol">:headers</span><span class="token punctuation">]</span> <span class="token operator">+</span> resource<span class="token punctuation">[</span><span class="token symbol">:headers</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>uniq<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>param<span class="token operator">|</span>            io<span class="token punctuation">.</span>puts <span class="token string">"| <span class="token interpolation"><span class="token delimiter tag">#{</span>param<span class="token punctuation">[</span><span class="token punctuation">:</span>name<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> |  true  | <span class="token interpolation"><span class="token delimiter tag">#{</span>param<span class="token punctuation">[</span><span class="token punctuation">:</span>description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> | <span class="token interpolation"><span class="token delimiter tag">#{</span>param<span class="token punctuation">[</span><span class="token punctuation">:</span>options<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> | "</span>          <span class="token keyword">end</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### 请求参数"</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| 参数名  | 是否必须   |  参数类型  |  描述  | 校验 |"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| :----- | :---- | :----- | :----- | :----- |"</span>          method<span class="token punctuation">[</span><span class="token symbol">:params</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>param<span class="token operator">|</span>            <span class="token function">recuirsvice_add</span><span class="token punctuation">(</span>io<span class="token punctuation">,</span> param<span class="token punctuation">)</span>          <span class="token keyword">end</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"#### 请求 example"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"```json"</span>          method<span class="token punctuation">[</span><span class="token symbol">:examples</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>example<span class="token operator">|</span>            <span class="token keyword">begin</span>              ex <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span>            <span class="token keyword">rescue</span>              ex <span class="token operator">=</span> example            <span class="token keyword">end</span>            io<span class="token punctuation">.</span>puts <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">pretty_generate</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span>            io<span class="token punctuation">.</span>puts <span class="token string">""</span>          <span class="token keyword">end</span>          io<span class="token punctuation">.</span>puts <span class="token string">"```"</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          method<span class="token punctuation">[</span><span class="token symbol">:returns</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>returnjson<span class="token operator">|</span>            io<span class="token punctuation">.</span>puts <span class="token string">"#### 返回参数"</span>            <span class="token comment" spellcheck="true">#io.puts " - http code  #{returnjson[:code]} "</span>            <span class="token comment" spellcheck="true">#io.puts " - 描述 #{returnjson[:description]}"</span>            io<span class="token punctuation">.</span>puts <span class="token string">" - is_array <span class="token interpolation"><span class="token delimiter tag">#{</span>returnjson<span class="token punctuation">[</span><span class="token punctuation">:</span>is_array<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span>            io<span class="token punctuation">.</span>puts <span class="token string">""</span>            io<span class="token punctuation">.</span>puts <span class="token string">"| 参数名  | 是否必须   |  参数类型  |  描述  | 校验 |"</span>            io<span class="token punctuation">.</span>puts <span class="token string">"| :----- | :---- | :----- | :----- | :----- |"</span>            returnjson<span class="token punctuation">[</span><span class="token symbol">:returns_object</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>obj<span class="token operator">|</span>              <span class="token function">recuirsvice_add</span><span class="token punctuation">(</span>io<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>            <span class="token keyword">end</span>            io<span class="token punctuation">.</span>puts <span class="token string">""</span>          <span class="token keyword">end</span>          io<span class="token punctuation">.</span>puts <span class="token string">""</span>          io<span class="token punctuation">.</span>puts <span class="token string">"### 错误返回"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| code  | description   | metadata  |"</span>          io<span class="token punctuation">.</span>puts <span class="token string">"| :----- | :---- | :----- |"</span>          method<span class="token punctuation">[</span><span class="token symbol">:errors</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>error<span class="token operator">|</span>            io<span class="token punctuation">.</span>puts <span class="token string">"| <span class="token interpolation"><span class="token delimiter tag">#{</span>error<span class="token punctuation">[</span><span class="token punctuation">:</span>code<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>  | <span class="token interpolation"><span class="token delimiter tag">#{</span>error<span class="token punctuation">[</span><span class="token punctuation">:</span>description<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>   | <span class="token interpolation"><span class="token delimiter tag">#{</span>error<span class="token punctuation">[</span><span class="token punctuation">:</span>metadata<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>  |"</span>          <span class="token keyword">end</span>        <span class="token keyword">end</span>        io<span class="token punctuation">.</span>puts <span class="token string">""</span>        io<span class="token punctuation">.</span>puts <span class="token string">"---"</span>        io<span class="token punctuation">.</span>puts <span class="token string">""</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">recuirsvice_add</span><span class="token punctuation">(</span>io<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    intent <span class="token operator">=</span> <span class="token string">"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"</span> <span class="token operator">*</span> i    io<span class="token punctuation">.</span>puts <span class="token string">"| <span class="token interpolation"><span class="token delimiter tag">#{</span>intent<span class="token delimiter tag">}</span></span><span class="token interpolation"><span class="token delimiter tag">#{</span>obj<span class="token punctuation">[</span><span class="token punctuation">:</span>name<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> | <span class="token interpolation"><span class="token delimiter tag">#{</span>obj<span class="token punctuation">[</span><span class="token punctuation">:</span>required<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> | <span class="token interpolation"><span class="token delimiter tag">#{</span>obj<span class="token punctuation">[</span><span class="token punctuation">:</span>expected_type<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> | <span class="token interpolation"><span class="token delimiter tag">#{</span><span class="token function">strip_html</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token punctuation">:</span>description<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token delimiter tag">}</span></span> | <span class="token interpolation"><span class="token delimiter tag">#{</span>obj<span class="token punctuation">[</span><span class="token punctuation">:</span>validator<span class="token punctuation">]</span><span class="token delimiter tag">}</span></span> |"</span>    params <span class="token operator">=</span> obj<span class="token punctuation">[</span><span class="token symbol">:params</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> params      <span class="token keyword">if</span> params<span class="token punctuation">.</span>kind_of<span class="token operator">?</span> <span class="token builtin">Hash</span>        i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>        <span class="token function">recuirsvice_add</span><span class="token punctuation">(</span>io<span class="token punctuation">,</span> params<span class="token punctuation">,</span> i<span class="token punctuation">)</span>      <span class="token keyword">elsif</span> params<span class="token punctuation">.</span>kind_of<span class="token operator">?</span> <span class="token builtin">Array</span>        i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>        params<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>param<span class="token operator">|</span>          <span class="token function">recuirsvice_add</span><span class="token punctuation">(</span>io<span class="token punctuation">,</span> param<span class="token punctuation">,</span> i<span class="token punctuation">)</span>        <span class="token keyword">end</span>      <span class="token keyword">else</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">strip_html</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>    regex <span class="token operator">=</span> <span class="token string">"&lt;p>(.*)&lt;/p>"</span>    result <span class="token operator">=</span> string<span class="token punctuation">.</span>match regex    <span class="token keyword">if</span> result      <span class="token keyword">return</span> result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">else</span>      <span class="token keyword">return</span> string    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> doc_relative_dir    doc_base <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">Apipie</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>doc_path<span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> doc_absolute_dir    <span class="token variable">@base_dir</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">:</span><span class="token symbol">:Rails</span><span class="token punctuation">.</span>root<span class="token punctuation">,</span> <span class="token constant">Apipie</span><span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>doc_path<span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><ul><li>调用</li></ul><pre class=" language-ruby"><code class="language-ruby"> <span class="token keyword">class</span> <span class="token class-name">AppliactionController</span>   include <span class="token constant">BaseDoc</span> <span class="token keyword">end</span></code></pre><ul><li>实现参考</li></ul><blockquote><p><a href="https://ilyabylich.svbtle.com/apipie-amazing-tool-for-documenting-your-rails-api" target="_blank" rel="noopener">https://ilyabylich.svbtle.com/apipie-amazing-tool-for-documenting-your-rails-api</a></p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>karafka  客户端假死</title>
      <link href="/2020/04/09/karafka-5/"/>
      <url>/2020/04/09/karafka-5/</url>
      
        <content type="html"><![CDATA[<h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><p>客户端处理,突然member 下线</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>代码问题batch处理queue过多, 单条处理时间长, 被踢下线</p><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><ul><li>优化代码</li></ul><pre class=" language-ruby"><code class="language-ruby"></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sidekiq karafka  微服务(consul)</title>
      <link href="/2020/04/09/rails-5/"/>
      <url>/2020/04/09/rails-5/</url>
      
        <content type="html"><![CDATA[<h4 id="sidekiq"><a href="#sidekiq" class="headerlink" title="sidekiq"></a>sidekiq</h4><ul><li>官方没有实现的方法<ul><li>k8s 直接重启容器</li><li>虚拟器 重启应用</li></ul></li></ul><h4 id="虚拟机重启的方式-GOD"><a href="#虚拟机重启的方式-GOD" class="headerlink" title="虚拟机重启的方式 GOD"></a>虚拟机重启的方式 GOD</h4><ul><li>god 监听consul ,发现字段变化重启<ul><li>consul挂机,连接失败,跳过</li></ul></li><li>扩展PollCondition test 方法</li></ul><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">"diplomat"</span><span class="token keyword">require</span> <span class="token string">"yaml"</span><span class="token constant">RAILS_ROOT</span> <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span>dirname <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">expand_path</span><span class="token punctuation">(</span>__FILE__<span class="token punctuation">)</span><span class="token constant">CONSUL</span> <span class="token operator">=</span> <span class="token constant">YAML</span><span class="token punctuation">.</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>RAILS_ROOT<span class="token delimiter tag">}</span></span>/config/consul.yaml"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"consul"</span><span class="token punctuation">]</span><span class="token keyword">module</span> <span class="token constant">God</span>  <span class="token keyword">module</span> <span class="token constant">Conditions</span>    <span class="token keyword">class</span> <span class="token class-name">AwifiConsul</span> <span class="token operator">&lt;</span> <span class="token constant">PollCondition</span>      attr_accessor <span class="token symbol">:file</span>      <span class="token keyword">def</span> initialize        <span class="token keyword">super</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>setupdiplomat      <span class="token keyword">end</span>      <span class="token keyword">def</span> setupdiplomat        <span class="token punctuation">:</span><span class="token symbol">:Diplomat</span><span class="token punctuation">.</span>configure <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>          config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span>          config<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"opts"</span><span class="token punctuation">]</span>        <span class="token keyword">end</span>      <span class="token keyword">end</span>      <span class="token keyword">def</span> prepare        <span class="token variable">@timeline</span> <span class="token operator">=</span> <span class="token constant">Timeline</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">2</span>      <span class="token keyword">end</span>      <span class="token keyword">def</span> reset        <span class="token variable">@timeline</span><span class="token punctuation">.</span>clear      <span class="token keyword">end</span>      <span class="token keyword">def</span> valid<span class="token operator">?</span>        valid <span class="token operator">=</span> <span class="token keyword">true</span>        valid <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token function">complain</span><span class="token punctuation">(</span><span class="token string">"Attribute 'file' must be specified"</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>file<span class="token punctuation">.</span><span class="token keyword">nil</span><span class="token operator">?</span>        valid      <span class="token keyword">end</span>      <span class="token comment" spellcheck="true">#如果 true 重启 , false skip</span>      <span class="token keyword">def</span> test        data <span class="token operator">=</span> <span class="token punctuation">:</span><span class="token symbol">:Diplomat</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>file<span class="token punctuation">)</span>        <span class="token variable">@timeline</span><span class="token punctuation">.</span>push data        p <span class="token variable">@timeline</span><span class="token punctuation">.</span>length        a <span class="token operator">=</span> <span class="token variable">@timeline</span><span class="token punctuation">.</span>all<span class="token operator">?</span> <span class="token keyword">do</span> <span class="token operator">|</span>x<span class="token operator">|</span>          x <span class="token operator">==</span> data        <span class="token keyword">end</span>        <span class="token operator">!</span>a      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token constant">God</span><span class="token punctuation">.</span>watch <span class="token keyword">do</span> <span class="token operator">|</span>w<span class="token operator">|</span>  w<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"sidekiq"</span>  w<span class="token punctuation">.</span>dir <span class="token operator">=</span> <span class="token constant">RAILS_ROOT</span>  w<span class="token punctuation">.</span>env <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">'RAILS_ROOT'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>RAILS_ROOT<span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span> <span class="token string">'RAILS_ENV'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">"production"</span> <span class="token punctuation">}</span>  w<span class="token punctuation">.</span>pid_file <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">RAILS_ROOT</span><span class="token punctuation">,</span> <span class="token string">"tmp/pids/sidekiq.pid"</span><span class="token punctuation">)</span>  w<span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token string">"bundle exec sidekiq  -P <span class="token interpolation"><span class="token delimiter tag">#{</span>RAILS_ROOT<span class="token delimiter tag">}</span></span>/tmp/pids/sidekiq.pid -d"</span>  <span class="token comment" spellcheck="true">#w.stop =  "kill -9 `cat #{RAILS_ROOT}/tmp/pids/sidekiq.pid`"</span>  <span class="token comment" spellcheck="true">#w.restart = "kill -9 `cat #{RAILS_ROOT}/tmp/pids/sidekiq.pid` ; bundle exec rails restart -P #{RAILS_ROOT}/tmp/pids/sidekiq.pid"</span>  w<span class="token punctuation">.</span>keepalive  w<span class="token punctuation">.</span>restart_if <span class="token keyword">do</span> <span class="token operator">|</span>restart<span class="token operator">|</span>    restart<span class="token punctuation">.</span><span class="token function">condition</span><span class="token punctuation">(</span><span class="token symbol">:awifi_consul</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>c<span class="token operator">|</span>      c<span class="token punctuation">.</span>interval <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">.</span>seconds      c<span class="token punctuation">.</span>file <span class="token operator">=</span> <span class="token string">"devops/automationtesting-backend"</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><h4 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h4><ul><li><p>bundle exec  god -c sidekiq.god</p><blockquote><p>god 默认后台启动</p></blockquote></li><li><p>bundle exec  god restart -c sidekiq.god </p><blockquote><p>配置pid文件,不需要重新写restart脚本</p></blockquote></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>openstack metada server</title>
      <link href="/2020/03/20/openstack/"/>
      <url>/2020/03/20/openstack/</url>
      
        <content type="html"><![CDATA[<h3 id="metadata-server"><a href="#metadata-server" class="headerlink" title="metadata server"></a>metadata server</h3><pre class=" language-shell"><code class="language-shell">curl http://169.254.169.254/latest/meta-data/local-ipv4</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka 集群配置</title>
      <link href="/2020/03/20/karafka-4/"/>
      <url>/2020/03/20/karafka-4/</url>
      
        <content type="html"><![CDATA[<h2 id="ruby-zookeeper-配置"><a href="#ruby-zookeeper-配置" class="headerlink" title="ruby  zookeeper 配置"></a>ruby  zookeeper 配置</h2><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'zk'</span>zk <span class="token operator">=</span> <span class="token constant">ZK</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:2181,127.0.0.1:2281,127.0.0.1:2381"</span><span class="token punctuation">)</span></code></pre><h2 id="karafka-配置"><a href="#karafka-配置" class="headerlink" title="karafka 配置"></a>karafka 配置</h2><pre class=" language-ruby"><code class="language-ruby">    kafk_conn <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token constant">Awifi</span><span class="token punctuation">:</span><span class="token symbol">:Consul</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"devops/devops-server"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"kafka_conn"</span><span class="token punctuation">]</span>    kafk_conn<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>conn<span class="token operator">|</span>      connect <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token string">"kafka://<span class="token interpolation"><span class="token delimiter tag">#{</span>conn<span class="token delimiter tag">}</span></span>"</span>    <span class="token keyword">end</span>    config<span class="token punctuation">.</span>kafka<span class="token punctuation">.</span>seed_brokers <span class="token operator">=</span> connect</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>markdown plugin plant uml</title>
      <link href="/2020/03/20/markdown-1/"/>
      <url>/2020/03/20/markdown-1/</url>
      
        <content type="html"><![CDATA[<pre><code>{% plantuml %}    Bob->Alice : hello{% endplantuml %}</code></pre><img src="http://www.plantuml.com/plantuml/svg/SyfFqhLppCbCJbMmKiX8pSd91m00"><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  zeitwerk</title>
      <link href="/2020/03/17/ruby-27/"/>
      <url>/2020/03/17/ruby-27/</url>
      
        <content type="html"><![CDATA[<h3 id="reload"><a href="#reload" class="headerlink" title="reload"></a>reload</h3><h4 id="gem-reload"><a href="#gem-reload" class="headerlink" title="gem reload"></a>gem reload</h4><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">"zeitwerk"</span><span class="token variable">@loader</span> <span class="token operator">=</span> <span class="token constant">Zeitwerk</span><span class="token punctuation">:</span><span class="token symbol">:Loader</span><span class="token punctuation">.</span>for_gem<span class="token variable">@loader</span><span class="token punctuation">.</span>enable_reloading<span class="token variable">@loader</span><span class="token punctuation">.</span>setup<span class="token keyword">def</span> reload<span class="token operator">!</span>  <span class="token variable">@loader</span><span class="token punctuation">.</span>reload<span class="token keyword">end</span><span class="token keyword">module</span> <span class="token constant">Teamwork</span>   include <span class="token constant">Logger</span><span class="token keyword">end</span>loader<span class="token punctuation">.</span>eager_load</code></pre><blockquote><p>teamwork/logger.rb<br>teamwork.rb</p></blockquote><pre><code>[root@autotest-ruby-agent zeitwerk_test]# ruby bin/console 2.4.5 :001 &gt; reload! =&gt; true 2.4.5 :002 &gt; exit# 修改代码直接reload</code></pre><h3 id="FILE-Structure"><a href="#FILE-Structure" class="headerlink" title="FILE Structure"></a>FILE Structure</h3><pre><code>lib/my_gem.rb         -&gt; MyGemlib/my_gem/foo.rb     -&gt; MyGem::Foolib/my_gem/bar_baz.rb -&gt; MyGem::BarBazlib/my_gem/woo/zoo.rb -&gt; MyGem::Woo::Zoo</code></pre><h3 id="manual-add-file-to-load"><a href="#manual-add-file-to-load" class="headerlink" title="manual add file to load"></a>manual add file to load</h3><pre><code>loader.push_dir(Rails.root.join(&quot;app/models&quot;))loader.push_dir(Rails.root.join(&quot;app/controllers&quot;))# 在 /app/models , app/controllers目录下查找app/models/user.rb                        -&gt; Userapp/controllers/admin/users_controller.rb -&gt; Admin::UsersController</code></pre><h3 id="Collapsing-directories"><a href="#Collapsing-directories" class="headerlink" title="Collapsing directories"></a>Collapsing directories</h3><pre><code>booking.rb                -&gt; Bookingbooking/actions/create.rb -&gt; Booking::Createloader.collapse(&quot;booking/actions&quot;)</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails  puma 内存过高</title>
      <link href="/2020/03/06/rails-4/"/>
      <url>/2020/03/06/rails-4/</url>
      
        <content type="html"><![CDATA[<h4 id="puma-内存高"><a href="#puma-内存高" class="headerlink" title="puma 内存高"></a>puma 内存高</h4><ul><li>puma 操作系统内存占用, 但会复用已经申请过的内存. 所以会随着每分钟请求量的增加导致内存不断上升. 如果超出某个极限, 则有可能导致内存爆掉</li></ul><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li>手动kill  worker</li></ul><blockquote><p>手动kill puma会自动重启</p></blockquote><ul><li>puma worker killer</li></ul><pre class=" language-ruby"><code class="language-ruby">before_fork <span class="token keyword">do</span>  <span class="token keyword">require</span> <span class="token string">'puma_worker_killer'</span>  <span class="token constant">PumaWorkerKiller</span><span class="token punctuation">.</span>start<span class="token keyword">end</span><span class="token comment" spellcheck="true"># 设置内存使用</span><span class="token constant">PumaWorkerKiller</span><span class="token punctuation">.</span>config <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>  config<span class="token punctuation">.</span>ram           <span class="token operator">=</span> <span class="token number">1024</span> <span class="token comment" spellcheck="true"># mb</span>  config<span class="token punctuation">.</span>frequency     <span class="token operator">=</span> <span class="token number">5</span>    <span class="token comment" spellcheck="true"># seconds</span>  config<span class="token punctuation">.</span>percent_usage <span class="token operator">=</span> <span class="token number">0.98</span>  config<span class="token punctuation">.</span>rolling_restart_frequency <span class="token operator">=</span> <span class="token number">12</span> <span class="token operator">*</span> <span class="token number">3600</span> <span class="token comment" spellcheck="true"># 12 hours in seconds, or 12.hours if using Rails</span>  config<span class="token punctuation">.</span>reaper_status_logs <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token comment" spellcheck="true"># setting this to false will not log lines like:</span>  <span class="token comment" spellcheck="true"># PumaWorkerKiller: Consuming 54.34765625 mb with master and 2 workers.</span>  config<span class="token punctuation">.</span>pre_term <span class="token operator">=</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span>worker<span class="token punctuation">)</span> <span class="token punctuation">{</span> puts <span class="token string">"Worker <span class="token interpolation"><span class="token delimiter tag">#{</span>worker<span class="token punctuation">.</span>inspect<span class="token delimiter tag">}</span></span> being killed"</span> <span class="token punctuation">}</span><span class="token keyword">end</span><span class="token constant">PumaWorkerKiller</span><span class="token punctuation">.</span>start</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 内存优化</title>
      <link href="/2020/03/05/centos-2/"/>
      <url>/2020/03/05/centos-2/</url>
      
        <content type="html"><![CDATA[<h3 id="ksm-内存压缩"><a href="#ksm-内存压缩" class="headerlink" title="ksm 内存压缩"></a>ksm 内存压缩</h3><h3 id="zRAM-means-Virtual-Swap-Compressed-in-RAM"><a href="#zRAM-means-Virtual-Swap-Compressed-in-RAM" class="headerlink" title="zRAM means Virtual Swap Compressed in RAM"></a>zRAM means Virtual Swap Compressed in RAM</h3><h3 id="swap-使用"><a href="#swap-使用" class="headerlink" title="swap 使用"></a>swap 使用</h3><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> kvm </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos IO 调优</title>
      <link href="/2020/03/05/centos-1/"/>
      <url>/2020/03/05/centos-1/</url>
      
        <content type="html"><![CDATA[<h3 id="I-O-调度算法调优"><a href="#I-O-调度算法调优" class="headerlink" title="I/O 调度算法调优"></a>I/O 调度算法调优</h3><ul><li>Linux I/O调度器（Linux I/O Scheduler）Linux内核中的一个组成部分，它介于通用块层和块设备驱动程序之间，用户可以通过调整这个调度器来优化系统性能。</li></ul><h4 id="I-O调度的4种算法"><a href="#I-O调度的4种算法" class="headerlink" title="I/O调度的4种算法"></a>I/O调度的4种算法</h4><ul><li><p>CFQ（完全公平调度器。进程平均使用IO带宽）</p><ul><li>CFQ均匀地分布对I/O带宽的访问,避免进程被饿死并实现较低的延迟,是deadline和as调度器的折中，CFQ对于多媒体应用(video,audio)和桌面系统是最好的选择.CFQ赋予I/O请求一个优先级，而I/O优先级请求独立于进程优先级，高优先级的进程的读写不能自动地继承高的I/O优先级。<br>原理：CFQ为每个进程/线程,单独创建一个队列来管理该进程所产生的请求，也就是说每个进程一个队列,各队列之间的调度使用时间片来调度，以此来保证每个进程都能被很好的分配到I/O带宽.I/O调度器每次执行一个进程的4次请求。</li></ul></li><li><p>NOOP（电梯式调度程序，通常用于内存存储的设备）</p><ul><li>在Linux2.4或更早的版本的调度程序,那时只有这一种I/O调度算法，NOOP实现了一个简单的FIFO队列，它像电梯的工作主法一样对I/O请求进行组织，当有一个新的请求到来时,它将请求合并到最近的请求之后,以此来保证请求同一介质。<br>NOOP倾向饿死读而利于写，NOOP对于闪存设备,RAM,嵌入式系统是最好的选择。<br>电梯算法饿死读请求的解释：<br>因为写请求比读请求更容易，写请求通过文件系统cache,不需要等一次写完成,就可以开始下一次写操作，写请求通过合并，堆积到I/O队列中，读请求需要等到它前面所有的读操作完成,才能进行下一次读操作，在读操作之间有几毫秒时间，而写请求在这之间就到来，饿死了后面的读请求。</li></ul></li><li><p>Deadline（针对延迟的调度器，每一个 I/O，都有一个最晚执行时间。）</p><ul><li>通过时间以及硬盘区域进行分类，这个分类和合并要求类似于noop的调度程序，Deadline确保了在一个截止时间内服务请求，这个截止时间是可调整的，而默认读期限短于写期限，这样就防止了写操作因为不能被读取而饿死的现象，Deadline对数据库环境(ORACLE RAC,MYSQL等)是最好的选择。</li></ul></li><li><p>Anticipatory（AS）（启发式调度，类似 Deadline 算法，但是引入预测机制提高性能。）</p><ul><li>本质上与Deadline一样，但在最后一次读操作后,要等待6ms，才能继续进行对其它I/O请求进行调度，可以从应用程序中预订一个新的读请求，改进读操作的执行,但以一些写操作为代价，它会在每个6ms中插入新的I/O操作，而会将一些小写入流合并成一个大写入流，用写入延时换取最大的写入吞吐量，AS适合于写入较多的环境，比如文件服务器，AS对数据库环境表现很差。</li></ul></li></ul><h3 id="demo修改centos-7-X的I-O调度算法"><a href="#demo修改centos-7-X的I-O调度算法" class="headerlink" title="demo修改centos 7.X的I/O调度算法"></a>demo修改centos 7.X的I/O调度算法</h3><pre><code>[root@controller ~]# cat /sys/block/sda/queue/scheduler          //查看当前系统的 I/O调度算法[noop] deadline cfq [root@controller ~]# dmesg | grep -i scheduler                //查看当前系统支持的IO调度算法[    1.007667] io scheduler noop registered[    1.007671] io scheduler deadline registered (default)[    1.007694] io scheduler cfq registered[root@controller ~]# echo cfq &gt; /sys/block/sda/queue/scheduler        //临时修改I/O调度方法:[root@controller ~]# cat /sys/block/sda/queue/scheduler        noop deadline [cfq] [root@controller ~]# grubby --update-kernel=ALL --args=&quot;elevator=deadline&quot;        //永久的更改I/O调度方法：[root@controller ~]# reboot[root@controller ~]# cat /sys/block/sda/queue/schedulernoop [deadline] cfq 修改配置文件配置I/O的方法：[root@controller ~]# vi /etc/default/grub在 “GRUB_CMDLINE_LINUX=” 后面添加elevator=cfq例如：GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rhgb quiet elevator=noop numa=off&quot;[root@controller ~]# grub2-mkconfig -o /boot/grub2/grub.cfg         //重新编译配置文件，BIOS-Based。[root@controller ~]# grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg               //UEFI-Based。[root@controller ~]# reboot    重启后生效</code></pre><h3 id="使用ramdisk"><a href="#使用ramdisk" class="headerlink" title="使用ramdisk"></a>使用ramdisk</h3><pre><code>mkdir /media/ramdiskmount -t tmpfs none /media/ramdiskmount -t ramfs ramfs /media/ramdisk# 设置大小，通常是物理内存10%到50%mount -t tmpfs -o size=20% none /media/ramdisk# 按照大小设置mount -t tmpfs -o size=200M none /media/ramdisk# /etc/fstab 开机启动ramfs   /tmp     ramfs   defaults 0  0</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> kvm </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos Affinity</title>
      <link href="/2020/03/05/centos/"/>
      <url>/2020/03/05/centos/</url>
      
        <content type="html"><![CDATA[<h3 id="centos-cpu-Affinity"><a href="#centos-cpu-Affinity" class="headerlink" title="centos cpu Affinity"></a>centos cpu Affinity</h3><ul><li>将程序绑定到cpu运行 , kvm libvirt 模板有设置的方法</li><li>softaffinity仅是一个建议,如果不可避免,调度器还是会把进程调度到其它的CPU上</li><li>hardaffinity是调度器必须遵守的规则</li><li>irqbalance</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@compute ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ps -e |grep kvm       //我这里列出了一下kvm的进程号</span>  953 ?        00:00:00 kvm-irqfd-clean 6852 ?        00:01:55 qemu-kvm 6859 ?        00:00:00 kvm-pit/6852 7820 ?        00:00:53 qemu-kvm 7827 ?        00:00:00 kvm-pit/782018943 ?        00:44:56 qemu-kvm18953 ?        00:00:00 kvm-pit/18943<span class="token punctuation">[</span>root@compute ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># taskset -h         //这里是关于taskset命令的用法</span>Usage: taskset <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>mask <span class="token operator">|</span> cpu-list<span class="token punctuation">]</span> <span class="token punctuation">[</span>pid<span class="token operator">|</span>cmd <span class="token punctuation">[</span>args<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">]</span>Options: -a, --all-tasks         operate on all the tasks <span class="token punctuation">(</span>threads<span class="token punctuation">)</span> <span class="token keyword">for</span> a given pid -p, --pid               operate on existing given pid -c, --cpu-list          display and specify cpus <span class="token keyword">in</span> list <span class="token function">format</span> -h, --help              display this <span class="token function">help</span> -V, --version           output version informationThe default behavior is to run a new command:    taskset 03 sshd -b 1024You can retrieve the mask of an existing task:    taskset -p 700Or <span class="token keyword">set</span> it:    taskset -p 03 700List <span class="token function">format</span> uses a comma-separated list instead of a mask:    taskset -pc 0,3,7-11 700Ranges <span class="token keyword">in</span> list <span class="token function">format</span> can take a stride argument:    e.g. 0-31:2 is equivalent to mask 0x55555555For <span class="token function">more</span> information see taskset<span class="token punctuation">(</span>1<span class="token punctuation">)</span>.<span class="token punctuation">[</span>root@compute ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/7827/status          //查看上面查询的PID进程信息</span>Name:   kvm-pit/7820State:  S <span class="token punctuation">(</span>sleeping<span class="token punctuation">)</span>Tgid:   7827Ngid:   0Pid:    7827PPid:   2TracerPid:      0Uid:    0       0       0       0Gid:    0       0       0       0FDSize: 64Groups:Threads:        1SigQ:   0/192346SigPnd: 0000000000000000ShdPnd: 0000000000000000SigBlk: 0000000000000000SigIgn: ffffffffffffffffSigCgt: 0000000000000000CapInh: 0000000000000000CapPrm: 0000001fffffffffCapEff: 0000001fffffffffCapBnd: 0000001fffffffffSeccomp:        0Cpus_allowed:   ffffCpus_allowed_list:      0-15          //这里表明该进程实在0-15号CPU上Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001Mems_allowed_list:      0voluntary_ctxt_switches:        158nonvoluntary_ctxt_switches:     0<span class="token punctuation">[</span>root@compute ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># taskset  -cp 6-8 7827               //将7827进程绑定到6-8号CPU上。</span>pid 7827<span class="token string">'s current affinity list: 0-15pid 7827'</span>s new affinity list: 6-8<span class="token punctuation">[</span>root@compute ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># cat /proc/7827/status </span>Name:   kvm-pit/7820State:  S <span class="token punctuation">(</span>sleeping<span class="token punctuation">)</span>Tgid:   7827Ngid:   0Pid:    7827PPid:   2TracerPid:      0Uid:    0       0       0       0Gid:    0       0       0       0FDSize: 64Groups:Threads:        1SigQ:   0/192346SigPnd: 0000000000000000ShdPnd: 0000000000000000SigBlk: 0000000000000000SigIgn: ffffffffffffffffSigCgt: 0000000000000000CapInh: 0000000000000000CapPrm: 0000001fffffffffCapEff: 0000001fffffffffCapBnd: 0000001fffffffffSeccomp:        0Cpus_allowed:   ffffCpus_allowed_list:      6-8              //已更改Mems_allowed:   00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001Mems_allowed_list:      0voluntary_ctxt_switches:        158nonvoluntary_ctxt_switches:     0<span class="token comment" spellcheck="true"># irqbalance</span><span class="token punctuation">[</span>root@autotest-ruby-agent automationtesting-backend<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># service irqbalance status</span>Redirecting to /bin/systemctl status  irqbalance.service● irqbalance.service - irqbalance daemon   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/irqbalance.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Thu 2020-01-16 08:36:45 CST<span class="token punctuation">;</span> 1 months 18 days ago Main PID: 522 <span class="token punctuation">(</span>irqbalance<span class="token punctuation">)</span>   CGroup: /system.slice/irqbalance.service           └─522 /usr/sbin/irqbalance --foreground</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> kvm </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery 增加新link</title>
      <link href="/2020/03/03/plugin-1/"/>
      <url>/2020/03/03/plugin-1/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-theme-matery-增加新link"><a href="#hexo-theme-matery-增加新link" class="headerlink" title="hexo-theme-matery 增加新link"></a>hexo-theme-matery 增加新link</h2><h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h4><p> hexo-theme-matery/layout/_partial/navigation.ejs<br> hexo-theme-matery/layout/_partial/mobile-nav.ejs</p><pre><code>&lt;%    var menuMap = new Map();    menuMap.set(&quot;Index&quot;, &quot;首页&quot;);    menuMap.set(&quot;Tags&quot;, &quot;标签&quot;);    menuMap.set(&quot;Categories&quot;, &quot;分类&quot;);    menuMap.set(&quot;Archives&quot;, &quot;归档&quot;);    menuMap.set(&quot;About&quot;, &quot;关于&quot;);    menuMap.set(&quot;Friends&quot;, &quot;朋友&quot;);    menuMap.set(&quot;Studies&quot;, &quot;学习资料&quot;);%&gt;</code></pre><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><ul><li>add new file<ul><li>themes/hexo-theme-matery/layout/studies.ejs</li></ul></li></ul><pre><code> 文件模板直接copy ,基于friends 修改&lt;main class=&quot;content&quot;&gt;    &lt;div class=&quot;container friends-container&quot;&gt;        &lt;article&gt;            &lt;% if (site.data &amp;&amp; site.data.studies) { %&gt;            &lt;% var friends = site.data.studies; %&gt;            &lt;div class=&quot;row tags-posts friend-all&quot;&gt;                &lt;% for (var i = 0, len = friends.length; i &lt; len; i++) { %&gt;                &lt;% var friend = friends[i]; %&gt;</code></pre><h4 id="steps-3"><a href="#steps-3" class="headerlink" title="steps 3"></a>steps 3</h4><ul><li>修改文件themes/hexo-theme-matery/languages/zh-CN.yml</li></ul><pre><code>friends: 朋友studies: 学习资料 # added</code></pre><h4 id="steps-4"><a href="#steps-4" class="headerlink" title="steps 4"></a>steps 4</h4><ul><li>add #{hexo_root}/source/_data/studies.json </li></ul><pre><code></code></pre><h4 id="steps-5"><a href="#steps-5" class="headerlink" title="steps 5"></a>steps 5</h4><ul><li>./themes/hexo-theme-matery/_config.yml</li></ul><pre><code>  Friends:    url: /friends    icon: fa-user-circle  Studies:    url: /studies    icon: fa-address-book</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> plugin </category>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo plugin 插件集成</title>
      <link href="/2020/03/03/plugin/"/>
      <url>/2020/03/03/plugin/</url>
      
        <content type="html"><![CDATA[<h3 id="hexo-theme-matery-新插件集成"><a href="#hexo-theme-matery-新插件集成" class="headerlink" title="hexo-theme-matery 新插件集成"></a>hexo-theme-matery 新插件集成</h3><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><pre><code>npm install --save hexo-tag-mermaid</code></pre><h4 id="hexo-配置"><a href="#hexo-配置" class="headerlink" title="hexo 配置"></a>hexo 配置</h4><ul><li>#{hexo_project_root}/_config.yml </li></ul><pre><code>hexo-tag-mermaid:  enable: true</code></pre><h4 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h4><ul><li>上传静态文件夹<ul><li>#{hexo-theme-matery}/source/libs</li></ul></li><li>修改文件<ul><li>#{hexo-theme-matery}/_config.yml</li></ul></li></ul><pre><code>libs:  css:    fontAwesome: /libs/awesome/css/font-awesome.min.css # V4.7.0    materialize: /libs/materialize/materialize.min.css # 1.0.0    aos: /libs/aos/aos.css    animate: /libs/animate/animate.min.css # V3.5.1    lightgallery: /libs/lightGallery/css/lightgallery.min.css # V1.6.11    aplayer: /libs/aplayer/APlayer.min.css    dplayer: /libs/dplayer/DPlayer.min.css    gitalk: /libs/gitalk/gitalk.css    jqcloud: /libs/jqcloud/jqcloud.css    tocbot: /libs/tocbot/tocbot.css    mermaid: /libs/mermaid/mermaid.min.css  js:    jquery: /libs/jquery/jquery-2.2.0.min.js    materialize: /libs/materialize/materialize.min.js # 1.0.0    masonry: /libs/masonry/masonry.pkgd.min.js # v4.0.0    aos: /libs/aos/aos.js    scrollProgress: /libs/scrollprogress/scrollProgress.min.js    lightgallery: /libs/lightGallery/js/lightgallery-all.min.js # V1.6.11    clicklove: /libs/others/clicklove.js    busuanzi: /libs/others/busuanzi.pure.mini.js    aplayer: /libs/aplayer/APlayer.min.js    dplayer: /libs/dplayer/DPlayer.min.js    crypto: /libs/cryptojs/crypto-js.min.js    echarts: /libs/echarts/echarts.min.js    gitalk: /libs/gitalk/gitalk.min.js    jqcloud: /libs/jqcloud/jqcloud-1.0.4.min.js    tocbot: /libs/tocbot/tocbot.min.js    mermaid: /libs/mermaid/mermaid.js</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> plugin </category>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown (mermaid)</title>
      <link href="/2020/03/02/markdown/"/>
      <url>/2020/03/02/markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="markdown-画图"><a href="#markdown-画图" class="headerlink" title="markdown 画图"></a>markdown 画图</h3><pre class=" language-mermaid"><code class="language-mermaid">{% mermaid %}graph TDA[Client] --> B[Load Balancer]B --> C[Server01]B --> D[Server02]{% endmermaid %}</code></pre><div class="mermaid">  graph TDA[Client] --> B[Load Balancer]B --> C[Server01]B --> D[Server02]</div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django 分页</title>
      <link href="/2020/02/25/django-1/"/>
      <url>/2020/02/25/django-1/</url>
      
        <content type="html"><![CDATA[<h1 id="post-查找分页"><a href="#post-查找分页" class="headerlink" title="post 查找分页"></a>post 查找分页</h1><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python </span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">'''Created on 2018年5月2日@author: xiangfei'''</span><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>pagination <span class="token keyword">import</span> PageNumberPagination<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>response <span class="token keyword">import</span> Response<span class="token keyword">from</span> django<span class="token punctuation">.</span>core<span class="token punctuation">.</span>paginator <span class="token keyword">import</span> InvalidPage<span class="token keyword">from</span> django<span class="token punctuation">.</span>utils <span class="token keyword">import</span> six<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> NotFound<span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>pagination <span class="token keyword">import</span> _positive_int<span class="token comment" spellcheck="true">#默认get查询方式，post不起作用</span><span class="token keyword">class</span> <span class="token class-name">CommonPagination</span><span class="token punctuation">(</span>PageNumberPagination<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#默认每页显示的个数</span>    page_size <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment" spellcheck="true">#可以动态改变每页显示的个数</span>    page_size_query_param <span class="token operator">=</span> <span class="token string">'page_size'</span>    <span class="token comment" spellcheck="true">#页码参数</span>    page_query_param <span class="token operator">=</span> <span class="token string">'page'</span>    <span class="token comment" spellcheck="true">#最多能显示多少页</span>    max_page_size <span class="token operator">=</span> <span class="token number">100</span>    <span class="token keyword">def</span> <span class="token function">get_paginated_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">#             'links': {</span><span class="token comment" spellcheck="true">#                 'next': self.get_next_link(),</span><span class="token comment" spellcheck="true">#                 'previous': self.get_previous_link()</span><span class="token comment" spellcheck="true">#             },</span>            <span class="token string">'page_size'</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>page_size<span class="token punctuation">,</span>            <span class="token string">'count'</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>paginator<span class="token punctuation">.</span>count<span class="token punctuation">,</span>            <span class="token string">'data'</span><span class="token punctuation">:</span> data        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#PageNu</span><span class="token keyword">class</span> <span class="token class-name">ServerPagination</span><span class="token punctuation">(</span>PageNumberPagination<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#默认每页显示的个数</span>    page_size <span class="token operator">=</span> <span class="token number">10</span>    <span class="token comment" spellcheck="true">#可以动态改变每页显示的个数</span>    page_size_query_param <span class="token operator">=</span> <span class="token string">'page_size'</span>    <span class="token comment" spellcheck="true">#页码参数</span>    page_query_param <span class="token operator">=</span> <span class="token string">'current_page'</span>    <span class="token keyword">def</span> <span class="token function">get_page_size</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>page_size_query_param<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> _positive_int<span class="token punctuation">(</span>                    request<span class="token punctuation">.</span>data<span class="token punctuation">[</span>self<span class="token punctuation">.</span>page_size_query_param<span class="token punctuation">]</span><span class="token punctuation">,</span>                    strict<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                    cutoff<span class="token operator">=</span>self<span class="token punctuation">.</span>max_page_size                <span class="token punctuation">)</span>            <span class="token keyword">except</span> <span class="token punctuation">(</span>KeyError<span class="token punctuation">,</span> ValueError<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">pass</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>page_size    <span class="token keyword">def</span> <span class="token function">paginate_queryset</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> queryset<span class="token punctuation">,</span> request<span class="token punctuation">,</span> view<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Paginate a queryset if required, either returning a        page object, or `None` if pagination is not configured for this view.        """</span>        page_size <span class="token operator">=</span> self<span class="token punctuation">.</span>get_page_size<span class="token punctuation">(</span>request<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> page_size<span class="token punctuation">:</span>            <span class="token keyword">return</span> None        paginator <span class="token operator">=</span> self<span class="token punctuation">.</span>django_paginator_class<span class="token punctuation">(</span>queryset<span class="token punctuation">,</span> page_size<span class="token punctuation">)</span>        page_number <span class="token operator">=</span> request<span class="token punctuation">.</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page_query_param<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> page_number <span class="token keyword">in</span> self<span class="token punctuation">.</span>last_page_strings<span class="token punctuation">:</span>            page_number <span class="token operator">=</span> paginator<span class="token punctuation">.</span>num_pages        <span class="token keyword">try</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>page <span class="token operator">=</span> paginator<span class="token punctuation">.</span>page<span class="token punctuation">(</span>page_number<span class="token punctuation">)</span>        <span class="token keyword">except</span> InvalidPage <span class="token keyword">as</span> exc<span class="token punctuation">:</span>            msg <span class="token operator">=</span> self<span class="token punctuation">.</span>invalid_page_message<span class="token punctuation">.</span>format<span class="token punctuation">(</span>                page_number<span class="token operator">=</span>page_number<span class="token punctuation">,</span> message<span class="token operator">=</span>six<span class="token punctuation">.</span>text_type<span class="token punctuation">(</span>exc<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token keyword">raise</span> NotFound<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        <span class="token keyword">if</span> paginator<span class="token punctuation">.</span>num_pages <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">and</span> self<span class="token punctuation">.</span>template <span class="token keyword">is</span> <span class="token operator">not</span> None<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># The browsable API should display pagination controls.</span>            self<span class="token punctuation">.</span>display_page_controls <span class="token operator">=</span> <span class="token boolean">True</span>        self<span class="token punctuation">.</span>request <span class="token operator">=</span> request        <span class="token keyword">return</span> list<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_paginated_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>        total <span class="token operator">=</span> self<span class="token punctuation">.</span>page<span class="token punctuation">.</span>paginator<span class="token punctuation">.</span>count        page_size <span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page_size_query_param<span class="token punctuation">,</span> self<span class="token punctuation">.</span>page_size<span class="token punctuation">)</span>        current_page <span class="token operator">=</span> self<span class="token punctuation">.</span>request<span class="token punctuation">.</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>page_query_param <span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        ret <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'code'</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">'msg'</span><span class="token punctuation">:</span>None<span class="token punctuation">,</span><span class="token string">'data'</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'msg'</span><span class="token punctuation">:</span>data<span class="token punctuation">,</span><span class="token string">'total'</span><span class="token punctuation">:</span>total<span class="token punctuation">,</span><span class="token string">'page_size'</span><span class="token punctuation">:</span>page_size<span class="token punctuation">,</span><span class="token string">'current_page'</span><span class="token punctuation">:</span> current_page <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>ret<span class="token punctuation">)</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>django rest 查找</title>
      <link href="/2020/02/25/django/"/>
      <url>/2020/02/25/django/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><ul><li>查找get 改成post</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python </span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token triple-quoted-string string">'''Created on 2018年5月2日@author: xiangfei'''</span><span class="token keyword">from</span> rest_framework<span class="token punctuation">.</span>filters <span class="token keyword">import</span> SearchFilter<span class="token keyword">from</span>  django_filters<span class="token punctuation">.</span>rest_framework <span class="token keyword">import</span>  DjangoFilterBackend<span class="token keyword">from</span> django<span class="token punctuation">.</span>template <span class="token keyword">import</span> loader<span class="token keyword">class</span> <span class="token class-name">PostSearchFilter</span><span class="token punctuation">(</span>SearchFilter<span class="token punctuation">)</span><span class="token punctuation">:</span>    search_param <span class="token operator">=</span> <span class="token string">'search_text'</span>    <span class="token keyword">def</span> <span class="token function">get_search_terms</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Search terms are set by a ?search=... query parameter,        and may be comma and/or whitespace delimited.        """</span>        params <span class="token operator">=</span> request<span class="token punctuation">.</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>search_param<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> params<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">POSTDjangoFilterBackend</span><span class="token punctuation">(</span>DjangoFilterBackend<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">filter_queryset</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> queryset<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>        filter_class <span class="token operator">=</span> self<span class="token punctuation">.</span>get_filter_class<span class="token punctuation">(</span>view<span class="token punctuation">,</span> queryset<span class="token punctuation">)</span>        <span class="token keyword">if</span> filter_class<span class="token punctuation">:</span>            <span class="token keyword">return</span> filter_class<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">,</span> queryset<span class="token operator">=</span>queryset<span class="token punctuation">,</span> request<span class="token operator">=</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span>qs        <span class="token keyword">return</span> queryset    <span class="token keyword">def</span> <span class="token function">to_html</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">,</span> queryset<span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">:</span>        filter_class <span class="token operator">=</span> self<span class="token punctuation">.</span>get_filter_class<span class="token punctuation">(</span>view<span class="token punctuation">,</span> queryset<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token operator">not</span> filter_class<span class="token punctuation">:</span>            <span class="token keyword">return</span> None        filter_instance <span class="token operator">=</span> filter_class<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">,</span> queryset<span class="token operator">=</span>queryset<span class="token punctuation">,</span> request<span class="token operator">=</span>request<span class="token punctuation">)</span>        template <span class="token operator">=</span> loader<span class="token punctuation">.</span>get_template<span class="token punctuation">(</span>self<span class="token punctuation">.</span>template<span class="token punctuation">)</span>        context <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'filter'</span><span class="token punctuation">:</span> filter_instance        <span class="token punctuation">}</span>        <span class="token keyword">return</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>context<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">ProjectFilter</span><span class="token punctuation">(</span>django_filters<span class="token punctuation">.</span>rest_framework<span class="token punctuation">.</span>FilterSet<span class="token punctuation">)</span><span class="token punctuation">:</span>    dateold <span class="token operator">=</span> django_filters<span class="token punctuation">.</span>NumberFilter<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"date_joined"</span><span class="token punctuation">,</span> lookup_expr<span class="token operator">=</span><span class="token string">'gte'</span><span class="token punctuation">)</span>    datenew <span class="token operator">=</span> django_filters<span class="token punctuation">.</span>NumberFilter<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"date_joined"</span><span class="token punctuation">,</span> lookup_expr<span class="token operator">=</span><span class="token string">'lte'</span><span class="token punctuation">)</span>    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span>        model <span class="token operator">=</span> ProjectRecord        fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'dateold'</span><span class="token punctuation">,</span> <span class="token string">'datenew'</span><span class="token punctuation">,</span> <span class="token string">'organizational_id'</span><span class="token punctuation">,</span> <span class="token string">'department_id'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用</span><span class="token keyword">class</span>  <span class="token class-name">ServerListView</span><span class="token punctuation">(</span>ListModelMixin<span class="token punctuation">,</span> GenericAPIView<span class="token punctuation">)</span><span class="token punctuation">:</span>    queryset <span class="token operator">=</span> Server<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>all<span class="token punctuation">(</span><span class="token punctuation">)</span>    serializer_class <span class="token operator">=</span> ServerListSerializer    <span class="token comment" spellcheck="true">#数据测试需要request.data 组装</span>    filter_backends <span class="token operator">=</span> <span class="token punctuation">(</span>PostSearchFilter<span class="token punctuation">,</span><span class="token punctuation">)</span>    search_fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'name'</span> <span class="token punctuation">,</span> <span class="token string">'outterip'</span> <span class="token punctuation">,</span><span class="token string">'innerip'</span> <span class="token punctuation">,</span> <span class="token string">'status'</span> <span class="token punctuation">,</span><span class="token string">'usage'</span><span class="token punctuation">,</span><span class="token string">'env'</span><span class="token punctuation">,</span><span class="token string">'config'</span><span class="token punctuation">,</span><span class="token string">'id'</span><span class="token punctuation">)</span>    pagination_class <span class="token operator">=</span> ServerPagination    authentication_classes <span class="token operator">=</span> <span class="token punctuation">(</span>TokenAuthentication<span class="token punctuation">,</span> <span class="token punctuation">)</span>    @check_permission<span class="token punctuation">(</span><span class="token string">'server.view_server'</span><span class="token punctuation">)</span>    @list_permission    <span class="token keyword">def</span> <span class="token function">post</span><span class="token punctuation">(</span>self <span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>list<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#@authentication()</span><span class="token keyword">class</span> <span class="token class-name">ProjectViewset</span><span class="token punctuation">(</span>mixins<span class="token punctuation">.</span>ListModelMixin<span class="token punctuation">,</span> mixins<span class="token punctuation">.</span>RetrieveModelMixin<span class="token punctuation">,</span> mixins<span class="token punctuation">.</span>CreateModelMixin<span class="token punctuation">,</span> mixins<span class="token punctuation">.</span>UpdateModelMixin<span class="token punctuation">,</span> viewsets<span class="token punctuation">.</span>GenericViewSet<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#permission_classes = (IsAuthenticated, IsOwnerOrReadOnly)</span>    <span class="token comment" spellcheck="true">#authentication_classes = (JSONWebTokenAuthentication, SessionAuthentication)</span>    queryset <span class="token operator">=</span> ProjectRecord<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>all<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span>    pagination_class <span class="token operator">=</span> AllPagination    serializer_class <span class="token operator">=</span> ProjectRecordSerializer    filter_backends <span class="token operator">=</span> <span class="token punctuation">(</span>DjangoFilterBackend<span class="token punctuation">,</span> filters<span class="token punctuation">.</span>SearchFilter<span class="token punctuation">,</span> filters<span class="token punctuation">.</span>OrderingFilter<span class="token punctuation">)</span>    filter_class <span class="token operator">=</span> ProjectFilter    search_fields <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'project_name'</span><span class="token punctuation">,</span><span class="token punctuation">)</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s 开发</title>
      <link href="/2020/02/25/k8s-8/"/>
      <url>/2020/02/25/k8s-8/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-开发参考文档"><a href="#Kubernetes-开发参考文档" class="headerlink" title="Kubernetes 开发参考文档"></a>Kubernetes 开发参考文档</h1><h2 id="Kubernetes-API-接口文档"><a href="#Kubernetes-API-接口文档" class="headerlink" title="Kubernetes  API 接口文档"></a>Kubernetes  API 接口文档</h2><p><a href="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/" target="_blank" rel="noopener">https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/</a>  </p><p>v1.10 为 Kubernetes 版本号，不同版本号的 API 接口可能有所不同，具体实现参照当前 Kubernetes 平台版本。  </p><h2 id="kubernetes-client-python-参考实现"><a href="#kubernetes-client-python-参考实现" class="headerlink" title="kubernetes-client  python 参考实现"></a>kubernetes-client  python 参考实现</h2><p><a href="https://github.com/kubernetes-client/python" target="_blank" rel="noopener">https://github.com/kubernetes-client/python</a>  </p><h1 id="Kubernetes-对接自动化运维平台一期功能愿望清单"><a href="#Kubernetes-对接自动化运维平台一期功能愿望清单" class="headerlink" title="Kubernetes 对接自动化运维平台一期功能愿望清单"></a>Kubernetes 对接自动化运维平台一期功能愿望清单</h1><h2 id="自动化运维平台（Kubernetes-功能点）——初稿-XMIND地址"><a href="#自动化运维平台（Kubernetes-功能点）——初稿-XMIND地址" class="headerlink" title="自动化运维平台（Kubernetes 功能点）——初稿  XMIND地址"></a>自动化运维平台（Kubernetes 功能点）——初稿  <a href="/medias/img/platform-feature.xmind">XMIND地址</a></h2><p><img src="/medias/img/platform-feature.png" alt>  </p><h4 id="python-demo"><a href="#python-demo" class="headerlink" title="python demo"></a>python demo</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> kubernetes <span class="token keyword">import</span> client<span class="token punctuation">,</span> config<span class="token comment" spellcheck="true">#这边载入包含授权信息的 config 文件</span>config<span class="token punctuation">.</span>load_kube_config<span class="token punctuation">(</span>config_file<span class="token operator">=</span><span class="token string">"/Users/shenlx/.kube/config"</span><span class="token punctuation">)</span>v1 <span class="token operator">=</span> client<span class="token punctuation">.</span>CoreV1Api<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token operator">=</span>v1<span class="token punctuation">.</span>list_namespaced_pod<span class="token punctuation">(</span>namespace<span class="token operator">=</span><span class="token string">"default"</span><span class="token punctuation">)</span>pods_all_namespaces <span class="token operator">=</span> v1<span class="token punctuation">.</span>list_pod_for_all_namespaces<span class="token punctuation">(</span>watch<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>deployments_all_namespaces <span class="token operator">=</span> client<span class="token punctuation">.</span>ExtensionsV1beta1DeploymentCondition<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------kubectl get pods --all-namespaces------------"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> t<span class="token punctuation">.</span>items<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#for i in pods_all_namespaces.items:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>status<span class="token punctuation">.</span>host_ip <span class="token punctuation">,</span> i<span class="token punctuation">.</span>status<span class="token punctuation">.</span>pod_ip<span class="token punctuation">,</span> i<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>namespace<span class="token punctuation">,</span> i<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span>i<span class="token punctuation">.</span>status<span class="token punctuation">.</span>phase<span class="token punctuation">)</span><span class="token triple-quoted-string string">'''namespace_all=v1.list_namespace()print("------------kubectl get namespaces------------")for i in namespace_all.items:    print(i.metadata.name)'''</span></code></pre><h4 id="yaml-examples"><a href="#yaml-examples" class="headerlink" title="yaml examples"></a>yaml examples</h4><pre><code>apiVersion: v1kind: ConfigMapmetadata:  name: demo-config  namespace: demo-namespacesdata:  LOG_LEVEL: debug  AUTH_MODE: db_authapiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: demo  namespace: demo-namespaces  labels:    name: demospec:  replicas: 1  template:    metadata:      labels:        name: demo    spec:      imagePullSecrets:      - name: registry-docker.jcgroup.key      nodeSelector:        nodetype: node-demo      containers:      - name: demo        resources:          limits:            cpu: 200m            memory: 512Mi          requests:            cpu: 100m            memory: 256Mi        image: registry-docker.jcgroup.com.cn/jcgroup/demo.1.0.0        imagePullPolicy: IfNotPresent        env:          - name: LOG_LEVEL            valueFrom:              configMapKeyRef:                name: demo-config                key: LOG_LEVEL        ports:        - containerPort: 80          name: local-port          protocol: TCP        volumeMounts:        - name: config          mountPath: /etc/demo/        - name: logs          mountPath: /var/log/demo      volumes:      - name: config        configMap:          name: demo-config          items:          - key: file.name            path: file.path      - name: logs        persistentVolumeClaim:          claimName: log-pvc apiVersion: extensions/v1beta1kind: Ingressmetadata:  name: demo.examples.com  namespace: demo-namespaces  annotations:    kubernetes.io/ingress.class: &quot;nginx&quot;    ingress.kubernetes.io/ssl-passthrough: &quot;false&quot;    ingress.kubernetes.io/ssl-redirect: &quot;false&quot;    ingress.kubernetes.io/secure-backends: &quot;false&quot;  #&quot;if true, use https backends else use http backends&quot;  labels:    app: demo.examples.comspec:  tls:  - hosts:    - demo.examples.com    secretName: examples.com.key  rules:  - host: demo.examples.com    http:      paths:      - path: /        backend:          serviceName: demo          servicePort: 80apiVersion: v1data:  .dockercfg: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxkind: Secretmetadata:  name: registry-docker.jcgroup.key  namespace: demo-namespacestype: kubernetes.io/dockercfg#kubectl create secret docker-registry registry-docker.jcgroup.key --docker-server=registry-docker.jcgroup.com.cn --docker-username=yourusername --docker-password=yourpassword --docker-email=youremail@jcgroup.com.cn --namespace=demo-namespaces---apiVersion: v1data:  tls.crt: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  tls.key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXkind: Secretmetadata:  name: examples.com.key  namespace: demo-namespacestype: kubernetes.io/tls#kubectl create secret tls  examples.com.key --key demo.key --cert demo.crt --namespace=demo-namespacesapiVersion: v1kind: Servicemetadata:  name: demo  namespace: demo-namespaces  labels:    app: demo    kubernetes.io/cluster-service: &quot;true&quot;    kubernetes.io/name: &quot;demo&quot;spec:  selector:    app: demo  ports:  - name: local-port    port: 80    protocol: TCP    targetPort: 80    nodePort: 32000  clusterIP: 172.17.200.200  type: NodePortapiVersion: v1kind: PersistentVolumemetadata:  name: demo-pv  labels:    type: logspec:  capacity:    storage: 5Gi  accessModes:    - ReadWriteOnce  persistentVolumeReclaimPolicy: Retain  nfs:    server: 10.0.34.23    path: /data/nfs/Harbor/logsapiVersion: v1kind: PersistentVolumeClaimmetadata:  name: demo-pvc  namespace: demo-namespacesspec:  accessModes:    - ReadWriteOnce  resources:    requests:      storage: 5Gi  selector:    matchLabels:      type: log</code></pre><h4 id="docker-file"><a href="#docker-file" class="headerlink" title="docker file"></a>docker file</h4><pre><code>FROM registry-docker.jcgroup.com.cn/public/centos:jdk1.8.0_171MAINTAINER jcgroupENV TZ Asia/ShanghaiADD start.sh /home/jcy/start.shRUN chmod +x /home/jcy/start.sh &amp;&amp; \    chown -R jcy.jcy /home/jcy/start.shADD app/web/service/target/*.jar /home/jcy/ENTRYPOINT [&quot;su&quot;,&quot;-&quot;,&quot;jcy&quot;,&quot;-c&quot;,&quot;/home/jcy/start.sh&quot;]FROM registry-docker.jcgroup.com.cn/public/centos:jdk1.8.0_171MAINTAINER jcgroupENV TZ Asia/ShanghaiADD start.sh /home/jcy/start.shRUN chmod +x /home/jcy/start.sh &amp;&amp; \    chown -R jcy.jcy /home/jcy/start.shADD app/web/service/target/*.jar /home/jcy/ENTRYPOINT [&quot;su&quot;,&quot;-&quot;,&quot;jcy&quot;,&quot;-c&quot;,&quot;/home/jcy/start.sh&quot;]#!/bin/bash/usr/local/java/bin/java -jar -Xms512m -Xmx1024m  /home/jcy/*.jar</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s 额外配置</title>
      <link href="/2020/02/25/k8s-7/"/>
      <url>/2020/02/25/k8s-7/</url>
      
        <content type="html"><![CDATA[<h1 id="firewalld-配置"><a href="#firewalld-配置" class="headerlink" title="firewalld 配置"></a>firewalld 配置</h1><pre><code>firewall-cmd --set-default-zone=publicfirewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=443/tcp --permanentfirewall-cmd --zone=public --add-port=22/tcp --permanentfirewall-cmd --permanent --zone=public --add-rich-rule &#39;rule family=ipv4 source address=10.0.34.0/24 port port=0-50000 protocol=tcp accept&#39;firewall-cmd --permanent --zone=public --add-rich-rule &#39;rule family=ipv4 source address=172.17.0.0/16 port port=0-50000 protocol=tcp accept&#39;firewall-cmd --permanent --zone=public --add-rich-rule &#39;rule family=ipv4 source address=10.0.34.0/24 port port=0-50000 protocol=udp accept&#39;firewall-cmd --permanent --zone=public --add-rich-rule &#39;rule family=ipv4 source address=172.17.0.0/16 port port=0-50000 protocol=udp accept&#39;firewall-cmd --permanent --zone=public --add-rich-rule &#39;rule family=ipv4 source address=10.0.0.0/8 port port=8080 protocol=tcp accept&#39; //仅限 masterfirewall-cmd --reloadiptables -D FORWARD -j REJECT --reject-with icmp-host-prohibitediptables -A FORWARD -i ens160 -j ACCEPTiptables -A FORWARD -i flannel.1 -j ACCEPTiptables -A FORWARD -j REJECT --reject-with icmp-host-prohibited</code></pre><h1 id="lib-systemd-system-docker-service-增加参数"><a href="#lib-systemd-system-docker-service-增加参数" class="headerlink" title="/lib/systemd/system/docker.service 增加参数"></a>/lib/systemd/system/docker.service 增加参数</h1><pre><code>EnvironmentFile=-/run/flannel/dockerDOCKER_OPT_BIPDOCKER_OPT_IPMASQDOCKER_OPT_MTUDOCKER_NETWORK_OPTIONS</code></pre><h1 id="etc-sysconfig-docker-增加参数"><a href="#etc-sysconfig-docker-增加参数" class="headerlink" title="/etc/sysconfig/docker 增加参数"></a>/etc/sysconfig/docker 增加参数</h1><pre><code>OPTIONS=&#39;--selinux-enabled --log-driver json-file --log-opt max-size=100m --log-opt max-file=3 --graph=&quot;/data/docker&quot; --signature-verification=false&#39;INSECURE_REGISTRY=&#39; --insecure-registry registry.docker.easybao.com&#39;</code></pre><h1 id="批量管理"><a href="#批量管理" class="headerlink" title="批量管理"></a>批量管理</h1><pre><code>echo &quot;nameserver 10.100.246.10&quot; &gt;&gt; /etc/resolv.confecho &quot;10.0.34.23 registry.docker.easybao.com &quot; &gt;&gt; /etc/hostsyum install -y docker flannel socat conntrack-toolsrpm -ivh  kubernetes-client-1.7.3-1.el7.x86_64.rpm kubernetes-node-1.7.3-1.el7.x86_64.rpmscp /etc/kubernetes/* 10.0.34.28:/etc/kubernetes/scp /data/kubernetes*.rpm  10.0.34.28:/datascp /etc/sysconfig/flannel 10.0.34.28:/etc/sysconfig/flannelscp /lib/systemd/system/docker.service 10.0.34.28:/lib/systemd/system/docker.servicescp /etc/sysconfig/docker   10.0.34.28:/etc/sysconfig/dockersystemctl enable flanneld.servicesystemctl start flanneld.servicesystemctl enable dokcer.servicesystemctl start dokcer.servicedocker pull registry.docker.easybao.com/pause-amd64:3.0docker tag registry.docker.easybao.com/pause-amd64:3.0 gcr.io/google_containers/pause-amd64:3.0systemctl enable kubeletsystemctl start kube-proxysystemctl enable kubeletsystemctl start kube-proxy</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s  简单使用</title>
      <link href="/2020/02/25/k8s-6/"/>
      <url>/2020/02/25/k8s-6/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p><strong>Docker</strong>: 根据[Docker基础介绍] (Docker基础介绍.md) 内部分说明，可以理解为把一个个应用程序以及它运行所需要的基础环境进行打包并运行的工具。  </p><p><strong>images(镜像)</strong>: 应用程序以及它运行所需要的基础环境构成的package。</p><p><strong>containers(容器)</strong>: image的一个运行状态，一个image可以运行多个containers。  </p><p><strong>pods(胖次)</strong>: 是K8S最基本的部署调度单元，可以包含一个或者多个containers，逻辑上表示某种应用的一个实例。(如果一个POD包含多个containers,则需要处理好多个containers的端口冲突)  </p><p><strong>service</strong>: 是pod的路由代理抽象，用于解决pod之间的服务发现问题。因为pod 和container都作为一种使用即消除的存在，而且pod及container分配到的IP有随机性这一特点，在进行应用访问时可能发现原有的pod的IP及端口失效了，service用来解决这些问题的，可以看做是service反向代理了后面的pods。  </p><p><strong>namespace</strong>: k8s及docker的命名空间，同一命名空间下资源的共享使用会比较便利，也用于区分各命名空间内应用的用途。  </p><p><strong>pause-amd64</strong>: 全称gcr.io/google_containers/pause-amd64:3.0 是k8s平台启动POD所<strong>必须</strong>的一个image，但是google的images仓库又因为GWF不能访问,所以刚开始调试k8s平台的时候一般都会遇到image下载超时这个错误。常用的几种做法是，在国内的一些第三方registry平台（比如时速云、阿里云）上面搜索名为pause-amd64的镜像，看是否满足。如果介意安全问题可以直接翻墙下载，然后传到私有registry或者国内的一些第三方registry平台。还有一点需要注意的是，在不论master或者其它node节点上面，该image一定要被正确命名为gcr.io/google_containers/pause-amd64:3.0 ，否则k8s平台仍会继续去下载。</p><h1 id="CLI工具使用（Kubectl）"><a href="#CLI工具使用（Kubectl）" class="headerlink" title="CLI工具使用（Kubectl）"></a>CLI工具使用（Kubectl）</h1><p>在k8s平台安装部署过程中不论master节点还是其他node节点都没有使用到kubectl这个工具，该工具为直接在master节点上面使用通过命令行来管理整个k8s平台。  </p><p>在正式使用kubectl工具时先来解决一个疑问：为什么要用kubectl这个CLI工具，我们不是可以使用K8S的dashboard来进行管理么？ 这个问题的答案是：1、按照<a href="K8S平台安装部署手册.md">K8S平台安装部署手册</a>部署完毕后，整个平台其实只是通过kube-api在8080端口提供了一个api接口，你可以通过<a href="http://IP:8080/api/" target="_blank" rel="noopener">http://IP:8080/api/</a> 接口地址按照K8S的标准API接口文档进行相应的操作，K8S的dashboard平台是google官方出具的基于该API的B/S架构的管理平台，同样kubectl则是官方出具的基于CLI的管理平台。dashboard需要在K8S平台部署完成后进行PODS和service部署，所以在没有了解整个K8S平台的机制前，我们需要先熟悉kubectl的使用。2、dashboard提供的功能要比kubectl少。  </p><h3 id="kubectl常用命令"><a href="#kubectl常用命令" class="headerlink" title="kubectl常用命令"></a>kubectl常用命令</h3><p><code>kubectl -h</code> 查看完整的kubectl命令帮助  </p><p><code>kubectl get</code> 查看命令  </p><p><code>kubectl get namespace</code>  查看所有namespace  </p><p><code>kubectl get pod</code>  查看namespace为默认(default)内的所有pods信息。  </p><p><code>kubectl get pod --namespace=test</code> 查看namespace为test内的所有pods信息。  </p><p><code>kubectl get pod --all-namespaces</code>   查看所有pods信息。  </p><p><code>kubectl get svc(service) --namespace=test</code> 查看namespace为test内的所有service信息。  </p><p><code>kubectl get svc mysql --namespace=test -o yaml</code>  以yaml文档形式查看namespace为test内的service名称为mysql的信息。  </p><p><code>kubectl create</code> 创建命令  </p><p><code>kubectl create -f test.yaml</code>  通过test-pod.yaml文件创建一个pod/service/rc/configmap等，具体需要看yaml文件内容而定。  </p><p><code>kubectl create configmap nginx-template --from-file=nginx.tmpl --namespace=test</code> 在namesapce test中创建一个configmap，名字为nginx-template,配置文件为nginx.tmpl   </p><p><code>kubectl describe</code>  描述命令  </p><p><code>kubectl describe svc mysql --namespace=test</code> 描述查看namespace为test内的service名称为mysql的运行状态。  </p><p><code>kubectl replace</code> 替换  </p><p><code>kubectl replace -f test.yaml</code> 替换test.yaml配置文件  </p><p><code>kubectl edit</code> 编辑  </p><p><code>kubectl edit svc mysql --namespace=test -o yaml</code> 以yaml文档形式编辑namespace为test内的service名称为mysql的信息。  </p><p><code>kubectl logs</code> 查看pod的日志  </p><p>其它请参照<code>kubectl -h</code>  </p><h1 id="使用kubectl创建kubernetes-dashboard服务"><a href="#使用kubectl创建kubernetes-dashboard服务" class="headerlink" title="使用kubectl创建kubernetes-dashboard服务"></a>使用kubectl创建kubernetes-dashboard服务</h1><h3 id="yaml文件"><a href="#yaml文件" class="headerlink" title="yaml文件"></a>yaml文件</h3><p>yaml文件请参考<a href="../yaml/kube-system/kubernetes-dashboard.yaml">kubernetes-dashboard yaml文件</a>  </p><p>该yaml文件包括了kubernetes-dashboard 的Deployment创建及service的创建。  </p><p>其中kubernetes-dashboard 默认使用的image为gcr.io/google_containers/kubernetes-dashboard-amd64:v1.4.2, 因为GWF原因所以引用了第三方（阿里云）的镜像，可以根据实际情况镜像调整。具体YAML文件编写方法，请查考yaml相关章节。  </p><h3 id="使用kubectl命令创建服务"><a href="#使用kubectl命令创建服务" class="headerlink" title="使用kubectl命令创建服务"></a>使用kubectl命令创建服务</h3><pre><code>kubectl -f kubernetes-dashboard.yaml</code></pre><p>平台即自动创建了Deployment及service的创建,同时根据Deployment策略将会启动相应的pod。  </p><h3 id="访问kubernetes-dashboard"><a href="#访问kubernetes-dashboard" class="headerlink" title="访问kubernetes-dashboard"></a>访问kubernetes-dashboard</h3><blockquote><p><a href="http://masterip:8080/ui" target="_blank" rel="noopener">http://masterip:8080/ui</a>  </p></blockquote><h1 id="dashboard的使用"><a href="#dashboard的使用" class="headerlink" title="dashboard的使用"></a>dashboard的使用</h1><h3 id="平台界面如下图所示："><a href="#平台界面如下图所示：" class="headerlink" title="平台界面如下图所示："></a>平台界面如下图所示：</h3><p><img src="/medias/img/dashboard.png" alt="dashboard">  </p><h3 id="通过test-yaml创建pod-service-rc-configmap等实现等同于kubectl-f-test-yaml的功能"><a href="#通过test-yaml创建pod-service-rc-configmap等实现等同于kubectl-f-test-yaml的功能" class="headerlink" title="通过test.yaml创建pod/service/rc/configmap等实现等同于kubectl -f test.yaml的功能"></a>通过test.yaml创建pod/service/rc/configmap等实现等同于kubectl -f test.yaml的功能</h3><p>通过点击右上角<code>CREATE</code>按钮 <code>upload a yaml or json</code>来上传你的yaml或者json配置文件。  </p><p><img src="/medias/img/upload.png" alt="dashboard">  </p><p>备注:<code>CREATE</code>里可以通过<code>specify app details below</code>进行在线定义配置，但是该配置可实现的参数过少，所以不用该功能。  </p><h3 id="查看、删除、修改pod-service-rc-configmap等"><a href="#查看、删除、修改pod-service-rc-configmap等" class="headerlink" title="查看、删除、修改pod/service/rc/configmap等"></a>查看、删除、修改pod/service/rc/configmap等</h3><p>选中左侧边栏目你想查看或者删除的配置文件类型，在右侧点击delte\view,可以对该配置文件进行删除及查看或者修改  </p><p><img src="/medias/img/delview.png" alt="dashboard">   </p><p>查看：可以查看所有类型的配置文件。</p><p>删除: 可以删除所有类型的配置文件，需要注意的是rc/Deployments/Replica Sets被删除后，使用其配置产生的pod不会同时被删除，如需同时删除pod需要在删除前在配置里面把启动pod的数量缩减到0。Replica Sets一般是由Deployments创建的，也能单独创建。Deployments被删除后，使用其配置产生的Replica Sets不会同时被删除。</p><p>修改：可以修改所有类型的配置文件。不建议修改由rc/Deployments/Replica Sets生成的pod配置以及由Deployments生成的Replica Sets配置，因为下次启动会恢复为默认。对于Deployments/service/Replica Sets的修改会即时生效，pod会自动重新部署，对于rc的修改pod不会自动重新部署。configmap/secret配置修改过后按照你的配置使用规则，一般需要重启pod。  </p><h1 id="kube-dns"><a href="#kube-dns" class="headerlink" title="kube-dns"></a>kube-dns</h1><p>待填坑  </p><h1 id="kube-registry"><a href="#kube-registry" class="headerlink" title="kube-registry"></a>kube-registry</h1><p>待填坑  </p><h1 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h1><p>ingress 是除了 hostport  nodeport  clusterIP以及云环境专有的负载均衡器外的访问方式,官方提供了Nginx ingress controller。  </p><h2 id="nginx-ingress-controller"><a href="#nginx-ingress-controller" class="headerlink" title="nginx-ingress-controller"></a><strong>nginx-ingress-controller</strong></h2><h3 id="Documents"><a href="#Documents" class="headerlink" title="Documents"></a>Documents</h3><blockquote><p><a href="https://github.com/kubernetes/ingress/tree/master/controllers/nginx" target="_blank" rel="noopener">https://github.com/kubernetes/ingress/tree/master/controllers/nginx</a>  </p></blockquote><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><blockquote><p><a href="https://github.com/kubernetes/ingress/tree/master/examples" target="_blank" rel="noopener">https://github.com/kubernetes/ingress/tree/master/examples</a>  </p></blockquote><h3 id="Yaml"><a href="#Yaml" class="headerlink" title="Yaml"></a>Yaml</h3><p>nginx-ingress-controller 部署所用yaml文件参见：<a href="../yaml/nginx-ingress-controller">nginx-ingress</a><br>ingress配置文件参见：<a href="../yaml/your-namespace/loadbalancer">your-namespace</a></p><h3 id="一般使用"><a href="#一般使用" class="headerlink" title="一般使用"></a>一般使用</h3><ol><li><p>创建Default backend server<br>在部署ingress之前需要先部署Default backend server，实现了简单的ingress作为默认返回值，做了两件事：1).提供默认404页面 2).在/healthz返回200。注意：yaml文件内的image由google提供，由于GWF会造成image无法下载，所以需要自己提前准备该image上传到自己/第三方registry。<br><code>kubectl create -f default-http-backend-rc.yaml</code><br><code>kubectl create -f default-http-backend-svc.yaml</code>  </p></li><li><p>创建ingress controller server<br>通过nginx-ingress-controller的yaml创建ingress controller server 。注意：yaml文件内的image由google提供，由于GWF会造成image无法下载，所以需要自己提前准备该image上传到自己/第三方registry。<br><code>kubectl create -f nginx-dep.yaml</code><br><code>kubectl create -f nginx-load-balancer-conf.yaml</code><br><code>kubectl create configmap nginx-template --from-file=nginx.tmpl --namespace=lb</code>  </p></li><li><p>创建Ingress<br>使用yaml创建自己需要域名则ingress，若需要使用https协议，则需预先定义证书至secret。<br><code>kubectl create secret tls youdomain-secret --key /tmp/tls.key --cert /tmp/tls.crt --namespace=lb</code>(证书自备)<br><code>kubectl create -f wwww-tls-ingress.yaml</code>  </p></li></ol><h3 id="Ingress相关配置说明"><a href="#Ingress相关配置说明" class="headerlink" title="Ingress相关配置说明"></a>Ingress相关配置说明</h3><ol><li><p>nginx-dep.yaml 文件内包含了两个configmap的使用：1). nginx-template (该文件为nginx的模板文件，通过文件映射至/etc/nginx/template/nginx.tmpl，这样container启动时会使用nginx-temlpate内的模板启动，当然也可以不定义该模板)。2).  nginx-load-balancer-conf (该文件为container启动参数内一项arg，container启动时会读取configmap里面配置写入nginx.conf文件内) 详细可配置参数参见：<a href="https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md#allowed-parameters-in-configuration-configmap" target="_blank" rel="noopener">可配置参数</a>   </p></li><li><p>使用https服务所需要的证书文件可以跟证书提供商申请正式证书，可以通过openssl工具生成临时证书（未认证证书），生成方式参考：<a href="https://github.com/kubernetes/ingress/blob/master/examples/PREREQUISITES.md#tls-certificates" target="_blank" rel="noopener">TLS证书</a>  </p></li><li><p>ingress配置文件(wwww-tls-ingress.yaml)内有一个参数<code>annotations</code>该参数下的配置，可以在nginx-ingress-controller内热生效，包含的配置有<code>kubernetes.io/ingress.class: &quot;nginx&quot;</code>使用nginx作为控制器（有多个控制器的情况下） <code>ingress.kubernetes.io/ssl-passthrough: &quot;false&quot;</code> 是否将http会话跳转到https <code>ingress.kubernetes.io/proxy-body-size: &quot;20m&quot;</code> 设置nginx中proxy-body-size的参数。更多可定义参数参见：<a href="https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md#annotations" target="_blank" rel="noopener">annotations</a>  </p></li><li><p>To be continue …</p></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s 安装部署</title>
      <link href="/2020/02/25/k8s-5/"/>
      <url>/2020/02/25/k8s-5/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Docker-安装部署"><a href="#一、Docker-安装部署" class="headerlink" title="一、Docker 安装部署"></a>一、Docker 安装部署</h1><h3 id="查看Liunx内核版本"><a href="#查看Liunx内核版本" class="headerlink" title="查看Liunx内核版本"></a>查看Liunx内核版本</h3><p><code>uname -a</code>  </p><blockquote><p>Docker requires a 64-bit OS and version 3.10 or higher of the Linux kernel.  </p></blockquote><h3 id="安装扩展源"><a href="#安装扩展源" class="headerlink" title="安装扩展源"></a>安装扩展源</h3><p><code>sudo rpm -ihv http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p><code>sudo yum install -y docker</code>  </p><h3 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h3><p><code>sudo systemctl enable docker.service</code><br><code>sudo systemctl start docker.service</code></p><h3 id="daemon-reload"><a href="#daemon-reload" class="headerlink" title="daemon-reload"></a>daemon-reload</h3><p><code>sudo systemctl daemon-reload</code>  </p><h3 id="配置文件及启动脚本路径"><a href="#配置文件及启动脚本路径" class="headerlink" title="配置文件及启动脚本路径"></a>配置文件及启动脚本路径</h3><p><code>/etc/sysconfig/docker</code><br><code>/lib/system.d/system/docker.service</code>  </p><p>更多请参考 ：[Docker基础介绍] (Docker基础介绍.md)  </p><h1 id="二、ETCD-安装部署"><a href="#二、ETCD-安装部署" class="headerlink" title="二、ETCD 安装部署"></a>二、ETCD 安装部署</h1><h3 id="下载地址-Latest-release"><a href="#下载地址-Latest-release" class="headerlink" title="下载地址(Latest release)"></a>下载地址(Latest release)</h3><blockquote><p><a href="https://github.com/coreos/etcd/releases" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases</a>  </p></blockquote><h3 id="etcd安装配置（两节点）"><a href="#etcd安装配置（两节点）" class="headerlink" title="etcd安装配置（两节点）"></a>etcd安装配置（两节点）</h3><h5 id="在NODE1（172-16-249-130）执行："><a href="#在NODE1（172-16-249-130）执行：" class="headerlink" title="在NODE1（172.16.249.130）执行："></a>在NODE1（172.16.249.130）执行：</h5><pre><code>etcd --name &#39;etcd1&#39; --initial-advertise-peer-urls=http://172.16.249.130:7001 --data-dir=/data/etcd/ --listen-peer-urls=http://0.0.0.0:7001 --listen-client-urls=http://0.0.0.0:4001 --advertise-client-urls=http://172.16.249.130:4001 --initial-cluster=&quot;etcd1=http://172.16.249.130:7001,etcd2=http://172.16.249.129:7001&quot; --initial-cluster-state=new</code></pre><p>备注：其中IP地址、端口、文件路径可以根据具体情况自行配置。  </p><h5 id="在NODE2（172-16-249-129）执行："><a href="#在NODE2（172-16-249-129）执行：" class="headerlink" title="在NODE2（172.16.249.129）执行："></a>在NODE2（172.16.249.129）执行：</h5><pre><code>etcd --name &#39;etcd2&#39; --initial-advertise-peer-urls=http://172.16.249.129:7001 --data-dir=/data/etcd/ --listen-peer-urls=http://0.0.0.0:7001 --listen-client-urls=http://0.0.0.0:4001 --advertise-client-urls=http://172.16.249.129:4001 --initial-cluster=&quot;etcd1=http://172.16.249.130:7001,etcd2=http://172.16.249.129:7001&quot; --initial-cluster-state=new</code></pre><p>备注：其中IP地址、端口、文件路径可以根据具体情况自行配置。  </p><p>更多请参考 ：[Etcd基础介绍] (Etcd基础介绍.md)  </p><h1 id="三、Flannel安装部署"><a href="#三、Flannel安装部署" class="headerlink" title="三、Flannel安装部署"></a>三、Flannel安装部署</h1><h3 id="flannel下载-Latest-release）"><a href="#flannel下载-Latest-release）" class="headerlink" title="flannel下载(Latest release）"></a>flannel下载(Latest release）</h3><blockquote><p><a href="https://github.com/coreos/flannel/releases" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases</a>  </p></blockquote><h3 id="flannel安装并应用到docker"><a href="#flannel安装并应用到docker" class="headerlink" title="flannel安装并应用到docker"></a>flannel安装并应用到docker</h3><ol><li>使用etcd创建虚拟网络<br><code>etcdctl mkdir /coreos.com/network</code><br><code>etcdctl set /coreos.com/network/config &#39;{&quot;Network&quot;:&quot;172.17.0.0/16&quot;}</code>  </li><li>运行flannel  <h5 id="NODE1"><a href="#NODE1" class="headerlink" title="NODE1"></a>NODE1</h5><code>flanneld --logtostderr=false --log_dir=/var/log/k8s/flannel/ --etcd-endpoints=http://172.16.249.130:4001</code>  <h5 id="NODE2"><a href="#NODE2" class="headerlink" title="NODE2"></a>NODE2</h5><code>flanneld --logtostderr=false --log_dir=/var/log/k8s/flannel/ --etcd-endpoints=http://172.16.249.129:4001</code>  </li><li>运行mk-docker-opts.sh脚本<br><code>sh mk-docker-opts.sh</code>  </li><li>查看/run/docker_opts.env<br><code>cat /run/docker_opts.env</code>  </li><li>修改/etc/sysconfig/docker文件，将上面文件的DOCKER_OPTS内容添加到docker的启动配置<br><code>OPTIONS=--selinux-enabled  --graph=&quot;/data/docker&quot; --bip=172.17.77.1/24 --mtu=1472</code>  </li><li>重启docker.service<br><code>systemctl restart docker.service</code></li></ol><p>更多请参考 ：[Flannel基础介绍] (Flannel基础介绍.md)  </p><h1 id="四、K8S安装部署"><a href="#四、K8S安装部署" class="headerlink" title="四、K8S安装部署"></a>四、K8S安装部署</h1><h3 id="K8S下载（latest-release）"><a href="#K8S下载（latest-release）" class="headerlink" title="K8S下载（latest release）"></a>K8S下载（latest release）</h3><blockquote><p><a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/releases</a><br> 备注：github会把一些比较大的数据文件放在AWS公有云，因GWF部分AWS的访问将不可用。  </p></blockquote><h3 id="下载最新release后-所需要的核心二进制应用包括："><a href="#下载最新release后-所需要的核心二进制应用包括：" class="headerlink" title="下载最新release后,所需要的核心二进制应用包括："></a>下载最新release后,所需要的核心二进制应用包括：</h3><ol><li><p>K8S平台管理接口</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-apiserver</code></pre></li><li><p>K8S平台CLI交互工具，用以进行部署、删除、回滚等操作</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kubectl</code></pre></li><li><p>负责node的管理，基本所有操作都靠它</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kubelet</code></pre></li><li><p>每个node里的container都在一个私有网络中，kube-proxy的作用就是做一个反向代理，让访问者访问这个node的时候，可以转发到内部对应的container。</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-proxy</code></pre></li><li><p>k8s调度器，容器的启动、迁移、扩容缩减时候，选择哪个node，就看它了  </p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-scheduler</code></pre></li><li><p>k8s对node的控制行为，比如怎么去调用node启动一个容器</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-controller-manager</code></pre></li></ol><h3 id="Master-节点需要启动的应用："><a href="#Master-节点需要启动的应用：" class="headerlink" title="Master 节点需要启动的应用："></a>Master 节点需要启动的应用：</h3><h5 id="kube-apiserver"><a href="#kube-apiserver" class="headerlink" title="kube-apiserver"></a>kube-apiserver</h5><pre><code>nohup kube-apiserver --insecure-bind-address=0.0.0.0 --insecure-port=8080 --cors_allowed_origins=.* --etcd_servers=http://172.16.249.130:4001 --v=1 --logtostderr=false --log_dir=/var/log/k8s/apiserver --service-cluster-ip-range=172.17.200.0/24 &gt; kube-apiserver.log &amp;</code></pre><p>备注:端口和etcd接口地址请根据实际情况填写，service-cluster-ip-range 为定义后期部署service所规定的网段，当然也可以不设置，那样会默认从falnnel设置的子网里面随机取值。  </p><h5 id="kube-scheduler"><a href="#kube-scheduler" class="headerlink" title="kube-scheduler"></a>kube-scheduler</h5><pre><code>nohup kube-scheduler --master=172.16.249.130:8080 --v=1 --logtostderr=false --log_dir=/var/log/k8s/scheduler &gt; kube-scheduler.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><h5 id="kube-controller-manager"><a href="#kube-controller-manager" class="headerlink" title="kube-controller-manager"></a>kube-controller-manager</h5><pre><code>nohup kube-controller-manager --master=172.16.249.130:8080 --enable-hostpath-provisioner=false --v=1 --logtostderr=false --log_dir=/var/log/k8s/controller-manager &gt; kube-controller-manager.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><h3 id="node-节点需要启动的应用："><a href="#node-节点需要启动的应用：" class="headerlink" title="node 节点需要启动的应用："></a>node 节点需要启动的应用：</h3><h5 id="kubelet"><a href="#kubelet" class="headerlink" title="kubelet"></a>kubelet</h5><pre><code>nohup kubelet --address=0.0.0.0 --port=10250 --cluster_dns=172.17.100.100 --cluster_domain=cluster.local --v=1 --log_dir=/var/log/k8s/kubelet --hostname_override=172.16.249.129 --api_servers=http://172.16.249.130:8080 --logtostderr=false &gt; kubelet.log &amp;</code></pre><p>备注：其中hostname_override为改node节点地址，api_servers需要填写部署 kube-apiserver 应用的master节点的地址和端口，cluster_dns在部署kube-dns服务时会用到（参见<a href="../yaml/kube-system">kube-system</a>）。  </p><h5 id="kube-proxy"><a href="#kube-proxy" class="headerlink" title="kube-proxy"></a>kube-proxy</h5><pre><code>nohup kube-proxy --master=172.16.249.130:8080 --log_dir=/var/log/k8s/proxy --v=1 --logtostderr=false &gt; kube-proxy.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s 基础介绍</title>
      <link href="/2020/02/25/k8s-4/"/>
      <url>/2020/02/25/k8s-4/</url>
      
        <content type="html"><![CDATA[<h1 id="K8S简介"><a href="#K8S简介" class="headerlink" title="K8S简介"></a>K8S简介</h1><h3 id="K8S官网"><a href="#K8S官网" class="headerlink" title="K8S官网"></a>K8S官网</h3><blockquote><p><a href="http://kubernetes.io/" target="_blank" rel="noopener">http://kubernetes.io/</a>  </p></blockquote><h3 id="K8S官方指导文档"><a href="#K8S官方指导文档" class="headerlink" title="K8S官方指导文档"></a>K8S官方指导文档</h3><blockquote><p><a href="http://kubernetes.io/docs/user-guide/" target="_blank" rel="noopener">http://kubernetes.io/docs/user-guide/</a>  </p></blockquote><h3 id="Google-docker-registry"><a href="#Google-docker-registry" class="headerlink" title="Google docker registry"></a>Google docker registry</h3><blockquote><p>gcr.io/google_containers/<br> 备注：GWF的缘故国内不能直接访问，下载相关镜像需要翻墙或者其它方式下载后转存。  </p></blockquote><h3 id="K8S下载（latest-release）"><a href="#K8S下载（latest-release）" class="headerlink" title="K8S下载（latest release）"></a>K8S下载（latest release）</h3><blockquote><p><a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/releases</a><br> 备注：github会把一些比较大的数据文件放在AWS公有云，因GWF部分AWS的访问将不可用。  </p></blockquote><h1 id="K8S安装"><a href="#K8S安装" class="headerlink" title="K8S安装"></a>K8S安装</h1><p> 备注：所有安装基于CENTOS7 AMD64  </p><h3 id="下载最新release后-所需要的核心二进制应用包括："><a href="#下载最新release后-所需要的核心二进制应用包括：" class="headerlink" title="下载最新release后,所需要的核心二进制应用包括："></a>下载最新release后,所需要的核心二进制应用包括：</h3><ol><li><p>K8S平台管理接口</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-apiserver</code></pre></li><li><p>K8S平台CLI交互工具，用以进行部署、删除、回滚等操作</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kubectl</code></pre></li><li><p>负责node的管理，基本所有操作都靠它</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kubelet</code></pre></li><li><p>每个node里的container都在一个私有网络中，kube-proxy的作用就是做一个反向代理，让访问者访问这个node的时候，可以转发到内部对应的container。</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-proxy</code></pre></li><li><p>k8s调度器，容器的启动、迁移、扩容缩减时候，选择哪个node，就看它了  </p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-scheduler</code></pre></li><li><p>k8s对node的控制行为，比如怎么去调用node启动一个容器</p><pre><code>kubernetes/server/kubernetes-server-linux-amd64.tar.gz/server/bin/kube-controller-manager</code></pre></li></ol><h3 id="Master-节点需要启动的应用："><a href="#Master-节点需要启动的应用：" class="headerlink" title="Master 节点需要启动的应用："></a>Master 节点需要启动的应用：</h3><h5 id="kube-apiserver"><a href="#kube-apiserver" class="headerlink" title="kube-apiserver"></a>kube-apiserver</h5><pre><code>nohup kube-apiserver --insecure-bind-address=0.0.0.0 --insecure-port=8080 --cors_allowed_origins=.* --etcd_servers=http://172.16.249.130:4001 --v=1 --logtostderr=false --log_dir=/var/log/k8s/apiserver --service-cluster-ip-range=172.17.200.0/24 &gt; kube-apiserver.log &amp;</code></pre><p>备注:端口和etcd接口地址请根据实际情况填写，service-cluster-ip-range 为定义后期部署service所规定的网段，当然也可以不设置，那样会默认从falnnel设置的子网里面随机取值。  </p><h5 id="kube-scheduler"><a href="#kube-scheduler" class="headerlink" title="kube-scheduler"></a>kube-scheduler</h5><pre><code>nohup kube-scheduler --master=172.16.249.130:8080 --v=1 --logtostderr=false --log_dir=/var/log/k8s/scheduler &gt; kube-scheduler.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><h5 id="kube-controller-manager"><a href="#kube-controller-manager" class="headerlink" title="kube-controller-manager"></a>kube-controller-manager</h5><pre><code>nohup kube-controller-manager --master=172.16.249.130:8080 --enable-hostpath-provisioner=false --v=1 --logtostderr=false --log_dir=/var/log/k8s/controller-manager &gt; kube-controller-manager.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><h3 id="node-节点需要启动的应用："><a href="#node-节点需要启动的应用：" class="headerlink" title="node 节点需要启动的应用："></a>node 节点需要启动的应用：</h3><h5 id="kubelet"><a href="#kubelet" class="headerlink" title="kubelet"></a>kubelet</h5><pre><code>nohup kubelet --address=0.0.0.0 --port=10250 --cluster_dns=172.17.100.100 --cluster_domain=cluster.local --v=1 --log_dir=/var/log/k8s/kubelet --hostname_override=172.16.249.129 --api_servers=http://172.16.249.130:8080 --logtostderr=false &gt; kubelet.log &amp;</code></pre><p>备注：其中hostname_override为改node节点地址，api_servers需要填写部署 kube-apiserver 应用的master节点的地址和端口，cluster_dns在部署kube-dns服务时会用到（参见<a href="yaml/kube-system">kube-system</a>）。  </p><h5 id="kube-proxy"><a href="#kube-proxy" class="headerlink" title="kube-proxy"></a>kube-proxy</h5><pre><code>nohup kube-proxy --master=172.16.249.130:8080 --log_dir=/var/log/k8s/proxy --v=1 --logtostderr=false &gt; kube-proxy.log &amp;</code></pre><p>备注：master需要填写部署 kube-apiserver 应用的master节点的地址和端口。</p><h1 id="K8S各模块功能图"><a href="#K8S各模块功能图" class="headerlink" title="K8S各模块功能图"></a>K8S各模块功能图</h1><p><img src="/medias/img/k8s3.png" alt="k8s3"></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s flannal 介绍</title>
      <link href="/2020/02/25/k8s-3/"/>
      <url>/2020/02/25/k8s-3/</url>
      
        <content type="html"><![CDATA[<h1 id="一、flannel简介"><a href="#一、flannel简介" class="headerlink" title="一、flannel简介"></a>一、flannel简介</h1><h3 id="flannel官网"><a href="#flannel官网" class="headerlink" title="flannel官网"></a>flannel官网</h3><blockquote><p><a href="https://coreos.com/flannel/" target="_blank" rel="noopener">https://coreos.com/flannel/</a>  </p></blockquote><h3 id="flannel官方文档"><a href="#flannel官方文档" class="headerlink" title="flannel官方文档"></a>flannel官方文档</h3><blockquote><p><a href="https://coreos.com/flannel/docs/latest/" target="_blank" rel="noopener">https://coreos.com/flannel/docs/latest/</a>  </p></blockquote><h3 id="flannel-github"><a href="#flannel-github" class="headerlink" title="flannel github"></a>flannel github</h3><blockquote><p><a href="https://github.com/coreos/flannel" target="_blank" rel="noopener">https://github.com/coreos/flannel</a>    </p></blockquote><h3 id="flannel下载-Latest-release）"><a href="#flannel下载-Latest-release）" class="headerlink" title="flannel下载(Latest release）"></a>flannel下载(Latest release）</h3><blockquote><p><a href="https://github.com/coreos/flannel/releases" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases</a>  </p></blockquote><h1 id="二、flannel安装并应用到docker"><a href="#二、flannel安装并应用到docker" class="headerlink" title="二、flannel安装并应用到docker"></a>二、flannel安装并应用到docker</h1><ol><li>使用etcd创建虚拟网络<br><code>etcdctl mkdir /coreos.com/network</code><br><code>etcdctl set /coreos.com/network/config &#39;{&quot;Network&quot;:&quot;172.17.0.0/16&quot;}</code>  </li><li>运行flannel  <h5 id="NODE1"><a href="#NODE1" class="headerlink" title="NODE1"></a>NODE1</h5><code>flanneld --logtostderr=false --log_dir=/var/log/k8s/flannel/ --etcd-endpoints=http://172.16.249.130:4001</code>  <h5 id="NODE2"><a href="#NODE2" class="headerlink" title="NODE2"></a>NODE2</h5><code>flanneld --logtostderr=false --log_dir=/var/log/k8s/flannel/ --etcd-endpoints=http://172.16.249.129:4001</code>  </li><li>运行mk-docker-opts.sh脚本<br><code>sh mk-docker-opts.sh</code>  </li><li>查看/run/docker_opts.env<br><code>cat /run/docker_opts.env</code>  </li><li>修改/etc/sysconfig/docker文件，将上面文件的DOCKER_OPTS内容添加到docker的启动配置<br><code>OPTIONS=--selinux-enabled  --graph=&quot;/data/docker&quot; --bip=172.17.77.1/24 --mtu=1472</code>  </li><li>重启docker.service<br><code>systemctl restart docker.service</code>  </li></ol><h3 id="flannel网络Type中UDP和xvlan的性能对比"><a href="#flannel网络Type中UDP和xvlan的性能对比" class="headerlink" title="flannel网络Type中UDP和xvlan的性能对比"></a>flannel网络Type中UDP和xvlan的性能对比</h3><p>1、性能测试工具选用qperf，选择另外一台主机运行 <code>qperf &amp;</code>用以接受测试。<br>2、分配测试原生网络、docker + flannel type类型为xvlan的网络以及docker + flannel type类型为UDP的网络的网络传输速度(tcp_bw)及延迟(tcp_lat)。<br>3、分别测试不同传输大小的十组数据。  </p><ol><li><p>原生网络<br><code>qperf 101.201.65.159 -oo msg_size:1:64k:*2 tcp_bw tcp_lat</code>  </p></li><li><p>docker + flannel xvlan 网络<br><code>docker run -it registry.cn-hangzhou.aliyuncs.com/cheyang/centos-qperf 101.201.65.159 -oo msg_size:1:64k:*2 tcp_bw tcp_lat</code>  </p></li><li><p>docker + flannel udp 网络<br><code>docker run -it registry.cn-hangzhou.aliyuncs.com/cheyang/centos-qperf 101.201.65.159 -oo msg_size:1:64k:*2 tcp_bw tcp_lat</code></p></li><li><p>测试结果  </p></li></ol><table><thead><tr><th style="text-align:center">数据</th><th style="text-align:center">xvlan 网络</th><th style="text-align:center">原生网络</th><th style="text-align:center">udp 网络</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">bw=184 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=184 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=185 KB/sec ; latency=17.9 ms</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">bw=127 KB/sec ; latency=18.2 ms</td><td style="text-align:center">bw=127 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=120 KB/sec ; latency=18.9 ms</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">bw=127 KB/sec ; latency=18.5 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=14.9 ms</td><td style="text-align:center">bw=141 KB/sec ; latency=15.4 ms</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">bw=131 KB/sec ; latency=18.9 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=17.7 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=14.9 ms</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">bw=129 KB/sec ; latency=18.2 ms</td><td style="text-align:center">bw=128 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=15.4 ms</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">bw=131 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=127 KB/sec ; latency=18.2 ms</td><td style="text-align:center">bw=128 KB/sec ; latency=15.6 ms</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">bw=129 KB/sec ; latency=15.6 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=15.6 ms</td><td style="text-align:center">bw=125 KB/sec ; latency=14.9 ms</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">bw=132 KB/sec ; latency=17.9 ms</td><td style="text-align:center">bw=129 KB/sec ; latency=15.6 ms</td><td style="text-align:center">bw=133 KB/sec ; latency=14.5 ms</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">bw=131 KB/sec ; latency=18.5 ms</td><td style="text-align:center">bw=133 KB/sec ; latency=18.9 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=14.9 ms</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">bw=129 KB/sec ; latency=15.4 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=18.5 ms</td><td style="text-align:center">bw=124 KB/sec ; latency=15.2 ms</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">bw=132 KB/sec ; latency=14.7 ms</td><td style="text-align:center">bw=132 KB/sec ; latency=18.9 ms</td><td style="text-align:center">bw=126 KB/sec ; latency=15.2 ms</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">bw=130 KB/sec ; latency=17.9 ms</td><td style="text-align:center">bw=130 KB/sec ; latency=18.9 ms</td><td style="text-align:center">bw=128 KB/sec ; latency=18.7 ms</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">bw=131 KB/sec ; latency=18.2 ms</td><td style="text-align:center">bw=129 KB/sec ; latency=18 ms</td><td style="text-align:center">bw=129 KB/sec ; latency=14.7 ms</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">bw=127 KB/sec ; latency=23.8 ms</td><td style="text-align:center">bw=131 KB/sec ; latency=22.7 ms</td><td style="text-align:center">bw=131 KB/sec ; latency=23.8 ms</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">bw=123 KB/sec ; latency=62.5 ms</td><td style="text-align:center">bw=131 KB/sec ; latency=71.4 ms</td><td style="text-align:center">bw=123 KB/sec ; latency=62.5 ms</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">bw=115 KB/sec ; latency=167 ms</td><td style="text-align:center">bw=115 KB/sec ; latency=125 ms</td><td style="text-align:center">bw=131 KB/sec ; latency=105 ms</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s docker tips</title>
      <link href="/2020/02/25/k8s-2/"/>
      <url>/2020/02/25/k8s-2/</url>
      
        <content type="html"><![CDATA[<h1 id="DOKCER-TIPS"><a href="#DOKCER-TIPS" class="headerlink" title="DOKCER TIPS"></a>DOKCER TIPS</h1><ol><li><p>log-driver 通过使用<code>--log-driver</code>指定log-driver的类型，可以有<code>none</code>、<code>json-file</code>、<code>syslog</code>、<code>journald</code>等，docker version 1.12以前默认的log-driver为<code>json-file</code>，1.12以后的默认log-driver为<code>journald</code>。<br>当log-driver的类型为json-file时，可使用–log-opt命令指定max-size(每个文件的大小)，max-file(最多保存多少个文件)等。设定–log-driver可以在docker engine的配置文件<code>/etc/sysconfig/dokcer</code>内进行指定，也可以在单个容器运行的时候通过–log-driver进行单独指定。  </p><blockquote><p>参考文档：<a href="https://docs.docker.com/engine/admin/logging/overview/" target="_blank" rel="noopener">https://docs.docker.com/engine/admin/logging/overview/</a>  </p></blockquote></li><li><p>关于指定docker数据存储路径后<code>/etc/sysconfig/docker: line 4: --graph=/data/docker: No such file or directory</code>报错的解释：<br>在docker engine的配置文件<code>/etc/sysconfig/docker</code>内通过<code>--graph=/data/docker</code>指定docker数据文件存储位置后会提示<code>/etc/sysconfig/docker: line 4: --graph=/data/docker: No such file or directory</code>，原因在于docker对于该参数的配置有格式要求<code>OPTIONS=&#39;--graph=&quot;/data/docker&quot;&#39;</code>该标准可行。<br><br></p></li><li>关于<code>docker-storage-setup.service</code>无法启动，报错<code>ERROR: No valid volume group found. Exiting.</code>的原因。———待跟踪<br><br></li><li>docker version 1.12以上的版本，可以通过指定参数(/etc/docker/daemon.json <code>&quot;live-restore&quot;: true</code> 默认参数) 当docker engine异常终止时(例如崩溃或者kill)，使在运行中的container不受影响。<br><br></li><li>使用docker进行端口映射(-p)时，会写入指定规则到iptables里面，firewalld及iptables在第一次启动初始化文件的时候会重置iptables里面规则，所以如果在docker engine启动后iptables或者firewalld再启动时，docker engine启动创建的iptables链会消失，此时通过<code>docker run -p</code>指定端口来启动container时会报错<code>failed: iptables: No chain/target/match by that name.</code>。经过个人测试docker version 1.12以下的版本在重启firewalld或者iptables后也会重置docker engine创建的iptables链表，1.12以上则不会。  </li></ol><h1 id="K8S-TIPS"><a href="#K8S-TIPS" class="headerlink" title="K8S TIPS"></a>K8S TIPS</h1><ol><li>关于在K8S上面通过删除pod来使指定<code>restartPolicy:always</code>的deployment或者rc重新创建pod，以达到重启pod的效果而造成的宿主机上面该pod相关的container存储目录被删除（如果新的pod还是创建在这台宿主机(node)上面，则K8S会保留上一个pod的备份），但是docker engine并没有释放被删除的空间(可以通过<code>lsof |grep deleted</code>查看已删除但是未释放的空间)，此时只能通过重启docker engine来释放这些空间。——需要继续跟踪是否是因为删除pod造成的还是正常通过k8s重新布置pod也会出现该现象。<br><br></li><li>K8S及DOCKER怎么解决不同pod之间数据共享及数据持久化？<br>使用NFS或者其它分布式文件系统，通过docker或者k8s各自的方式挂载到容器内部，数据持久化系统可用NFS和glusterfs等实现。<br><br></li><li>k8s的kube-dns的使用<br>创建的service会随机分配一个clusterIP和targetport（IP不可ping，端口不可telnet) 当其它服务在访问tcp://clusterip:targetport 时，k8s会负载均衡到各node的pod上面，当发起访问请求的主机/pod和该pod的IP为同一网段时（即分配到的POD在和发起请求的POD在同一台node上面），因为路由寻址问题，将会访问失败。所以引入kube-dns概念。  （错错错，只有pod的node主机访问不了，so why???）<br>使用flannel搭建的docker网络，不同网段之间互访源地址会转换成该子网的类似192.168.0.0/32这个地址去访问，不会使用正确的源IP地址<br><br></li><li>k8s更新或者通过kubernetes-dashboard删除rc(直接使用kubectrl delete rc删除会同时删除pod)后对应的pods没有更新或者删除<br>k8s在更新rc中的容器的资源时，会立刻更新rc中的数据信息，但是rc却不会触发更新rc中pod的事件，也就是说并不会去更新正在运行中的pod的资源，但是当rc真正的做伸缩扩建（replicas的值增减），才会真正的用现有的rc模板中的数据去创建新的pod。而且在replicas值减小时，去删除对应的pod的机制是根据pod的创建时间顺序去删除的，最先删除最新创建的，让后次之。<br><br></li><li>k8s的yaml设置中Containers标签ports标签下clinetport参数的意义，并不会改变容器里面监听的端口,service 中port、targetport和clusterip代表的意义  </li></ol><h1 id="Docker-k8s平台下-日常使用指南"><a href="#Docker-k8s平台下-日常使用指南" class="headerlink" title="Docker(k8s平台下) 日常使用指南  　"></a>Docker(k8s平台下) 日常使用指南  　</h1><ol><li><p>确认Container运行所在Cluster。<br>可以通过kubernetes-dashboard界面查看POD的Cluster IP并跟《Cluster IP对照表》比较确认该POD(container)所运行的宿主Cluster。<br>例如：<br><img src="/medias/img/clusterIP.png" alt="cluster ip"><br><br><br>可知cloud及csclient这个POD(container)分别运行在外网地址为59.110.168.105及59.110.171.3的两台服务器(Cluster)上面。<br>   </p></li><li><p>确认POD(container)的Container ID。<br>通过上面步骤我们可知POD(container)运行所在的Cluster，我们可以登陆服务器，通过POD NAME查出POD(container)的Container ID。<br><br><img src="/medias/img/pod_name.png" alt="POD NAME"><br><br>通过<code>docker ps |grep cloud-2694259464-dxjs9</code>命令查询Container ID。<br><br><img src="/medias/img/select_pod.png" alt="select"><br><br>PS：我们也可以直接<code>docker ps |grep cloud</code>查询在该Cluster运行的名为cloud-XXX的POD，但如果该Cluster运行多个名称为cloud-XXX的pod那结果就不是精确结果，可以通过image的版本号或者查看完整的POD NAME来进行精确确认。<br><br></p></li><li>查看POD(container)的控制台日志。<br>1)、根据步骤2我们可以得到我们所想查看的POD(container)的ID。<br>2)、通过<code>docker logs -f --tail=100 39c5fbe30c33</code>命令查看Container ID为39c5fbe30c33的最近100行(–tail=100)控制台日志输出，并且持续监控后续日志输出(-f)。<br>3)、通过<code>docker logs &gt; logfile.log</code>或者<code>docker logs --tail=&quot;all&quot; &gt; logfile.log</code> 命令打印所有控制台日志到logfile.log文件。<br><br></li><li>通过cluster连接POD(container)。<br>1)、根据步骤2我们可以得到我们所想连接的POD(container)的ID。<br>2)、通过<code>docker exec -it 39c5fbe30c33 /bin/bash</code>命令即可进入Container ID为39c5fbe30c33的POD(container)内部。可使用bash命令查看相关信息。<br><br>PS：<code>docker exec</code> 命令实际是调用container内部的命令，可以是<code>/bin/bash</code>也可是<code>cat</code>,<code>ls</code>等命令，但一般docker images会精简自身镜像，所以只会存放内核级别命令及一些基础命令，我们经常可以发现进入到container内部后一些基础命令类似<code>ll</code>,<code>vi</code>,’telnet’命令不可用，就是这个原因。<br><br></li><li>通过cluster拷贝POD(container)内外文件。<br>1)、根据步骤2我们可以得到我们所想连接的POD(container)的ID。<br>2)、通过<code>dokcer cp /opt/fromfile 39c5fbe30c33:/etc/tofile</code> 及<code>docker cp 39c5fbe30c33:/etc/fromfile /opt/tofile</code>命令，可以很方便的在container内外互相拷贝文件，类似Linux下<code>cp</code>,<code>scp</code>,<code>rsyc</code>命令。<br><br>PS:因为container是一次性，使用即销毁的，所以当容器销毁后通过image重新再次启动一个容器的时候，互相拷贝的数据将会消失。容器内数据会恢复到构建Image时默认的数据，如果我们要将一些数据持久化到container内，需要通过重新构建Image的方式进行,如何构建Image参见上一章。</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s (etcd 简介)</title>
      <link href="/2020/02/25/k8s-1/"/>
      <url>/2020/02/25/k8s-1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、etcd简介"><a href="#一、etcd简介" class="headerlink" title="一、etcd简介"></a>一、etcd简介</h1><h3 id="etcd官网"><a href="#etcd官网" class="headerlink" title="etcd官网"></a>etcd官网</h3><blockquote><p><a href="https://coreos.com/etcd/" target="_blank" rel="noopener">https://coreos.com/etcd/</a>  </p></blockquote><h3 id="etcd官方文档"><a href="#etcd官方文档" class="headerlink" title="etcd官方文档"></a>etcd官方文档</h3><blockquote><p><a href="https://coreos.com/etcd/docs/latest/" target="_blank" rel="noopener">https://coreos.com/etcd/docs/latest/</a>  </p></blockquote><h3 id="etcd-github"><a href="#etcd-github" class="headerlink" title="etcd github"></a>etcd github</h3><blockquote><p><a href="https://github.com/coreos/etcd" target="_blank" rel="noopener">https://github.com/coreos/etcd</a>  </p></blockquote><h3 id="下载地址-Latest-release"><a href="#下载地址-Latest-release" class="headerlink" title="下载地址(Latest release)"></a>下载地址(Latest release)</h3><blockquote><p><a href="https://github.com/coreos/etcd/releases" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases</a>  </p></blockquote><h1 id="二、etcd安装配置（两节点）"><a href="#二、etcd安装配置（两节点）" class="headerlink" title="二、etcd安装配置（两节点）"></a>二、etcd安装配置（两节点）</h1><h3 id="在NODE1（172-16-249-130）执行："><a href="#在NODE1（172-16-249-130）执行：" class="headerlink" title="在NODE1（172.16.249.130）执行："></a>在NODE1（172.16.249.130）执行：</h3><pre><code>etcd --name &#39;etcd1&#39; --initial-advertise-peer-urls=http://172.16.249.130:7001 --data-dir=/data/etcd/ --listen-peer-urls=http://0.0.0.0:7001 --listen-client-urls=http://0.0.0.0:4001 --advertise-client-urls=http://172.16.249.130:4001 --initial-cluster=&quot;etcd1=http://172.16.249.130:7001,etcd2=http://172.16.249.129:7001&quot; --initial-cluster-state=new</code></pre><p>备注：其中IP地址、端口、文件路径可以根据具体情况自行配置。  </p><h3 id="在NODE2（172-16-249-129）执行："><a href="#在NODE2（172-16-249-129）执行：" class="headerlink" title="在NODE2（172.16.249.129）执行："></a>在NODE2（172.16.249.129）执行：</h3><pre><code>etcd --name &#39;etcd2&#39; --initial-advertise-peer-urls=http://172.16.249.129:7001 --data-dir=/data/etcd/ --listen-peer-urls=http://0.0.0.0:7001 --listen-client-urls=http://0.0.0.0:4001 --advertise-client-urls=http://172.16.249.129:4001 --initial-cluster=&quot;etcd1=http://172.16.249.130:7001,etcd2=http://172.16.249.129:7001&quot; --initial-cluster-state=new</code></pre><p>备注：其中IP地址、端口、文件路径可以根据具体情况自行配置。  </p><h1 id="三、etcd常用命令"><a href="#三、etcd常用命令" class="headerlink" title="三、etcd常用命令"></a>三、etcd常用命令</h1><h2 id="ETCD备份数据："><a href="#ETCD备份数据：" class="headerlink" title="ETCD备份数据："></a>ETCD备份数据：</h2><p><code>etcdctl backup --data-dir /data/etcd/ --backup-dir /backup/etcd/</code></p><h2 id="ETCD基础命令："><a href="#ETCD基础命令：" class="headerlink" title="ETCD基础命令："></a>ETCD基础命令：</h2><pre><code>etcdctl member list   //列出群集成员etcdctl member update a8266ecf031671f3 http://172.16.249.5:7001   //更新群集成员ID为a8266ecf031671f3的 peerURLs为http://172.16.249.5:7001etcdctl member remove a8266ecf031671f3    //删除ID为a8266ecf031671f3的群集成员，如果删除的是 leader 节点，则需要耗费额外的时间重新选举 leader。etcdctl member add etcd2 http://172.16.249.129:7001     //新加一个节点取名为 etcd2, peerURLs 是 http://172.16.249.129:7001 etcdctl cluster-health  //检查群集的健康状态etcd --data-dir=/data/etcd  --force-new-cluster   //直接用/data/etcd的数据启动一个单节点的ETCD服务， --force-new-cluster 会将节点信息和群集信息抹除，用以使用数据重建群集。</code></pre><h2 id="ETCD场景演练："><a href="#ETCD场景演练：" class="headerlink" title="ETCD场景演练："></a>ETCD场景演练：</h2><h3 id="ETCD增加一个新的节点"><a href="#ETCD增加一个新的节点" class="headerlink" title="ETCD增加一个新的节点:"></a>ETCD增加一个新的节点:</h3><p><code>etcdctl member add etcd2 http://172.16.249.129:7001</code>   </p><p>etcdctl 在注册完新节点后，会返回一段提示，包含3个环境变量。然后在第二部启动新节点的时候，带上这3个环境变量即可。  </p><pre><code>added member 9bf1b35fc7761a23 to clusterETCD_NAME=&quot;etcd2&quot;ETCD_INITIAL_CLUSTER=&quot;etcd1=http://172.16.249.5:7001,etcd2=http://172.16.249.129:7001&quot;ETCD_INITIAL_CLUSTER_STATE=existing</code></pre><p>启动第二个节点方法：  </p><p>1、</p><pre><code>/opt/k8s/etcd/etcd --name &#39;etcd2&#39; --initial-advertise-peer-urls=http://172.16.249.129:7001 --data-dir=/data/etcd/ --listen-peer-urls=http://0.0.0.0:7001 --listen-client-urls=http://0.0.0.0:4001 --advertise-client-urls=http://172.16.249.129:4001 --initial-cluster=&quot;etcd1=http://172.16.249.5:7001,etcd2=http://172.16.249.129:7001&quot;  --initial-cluster-state=existing</code></pre><p>2、将上述三个环境变量写入etcd.conf里面启动  </p><h3 id="ETCD服务故障恢复："><a href="#ETCD服务故障恢复：" class="headerlink" title="ETCD服务故障恢复："></a>ETCD服务故障恢复：</h3><p>首先，从剩余的正常节点中选择一个正常的成员节点， 使用 etcdctl backup 命令备份etcd数据。这个命令会将节点中的用户数据全部写入到指定的备份目录中，但是节点ID,集群ID等信息将会丢失， 并在恢复到目的节点时被重新。这样主要是防止原先的节点意外重新加入新的节点集群而导致数据混乱。  </p><p>然后将Etcd数据恢复到新的集群的任意一个节点上， 使用 –force-new-cluster 参数启动Etcd服务。这个参数会重置集群ID和集群的所有成员信息，（不增加–listen-client-urls参数的情况下其中节点的监听地址会被重置为localhost:2379）, 此时该集群中只有一个节点。  </p><p>(用etcd命令找到当前节点的ID。</p><pre><code>etcdctl member list 98f0c6bf64240842: name=etcd2 peerURLs=http://172.16.249.129:7001 clientURLs=http://172.16.249.129:4001</code></pre><p>由于etcdctl不具备修改成员节点参数的功能， 下面的操作要使用API来完成。  </p><pre><code>curl http://172.16.249.5:4001/v2/members/98f0c6bf64240842 -XPUT -H &quot;Content-Type:application/json&quot; -d &#39;{&quot;peerURLs&quot;:[&quot;http://172.16.249.5:7001&quot;]}&#39;</code></pre><p>)  </p><p>最后，在完成第一个成员节点的启动后，可以通过集群扩展的方法使用 etcdctl member add 命令添加其他成员节点进来。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s (docker 简介)</title>
      <link href="/2020/02/25/k8s/"/>
      <url>/2020/02/25/k8s/</url>
      
        <content type="html"><![CDATA[<h1 id="一、docker简介"><a href="#一、docker简介" class="headerlink" title="一、docker简介"></a>一、docker简介</h1><h3 id="docker-官网"><a href="#docker-官网" class="headerlink" title="docker 官网"></a>docker 官网</h3><blockquote><p><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a>  </p></blockquote><h3 id="docker-官方文档"><a href="#docker-官方文档" class="headerlink" title="docker 官方文档"></a>docker 官方文档</h3><blockquote><p><a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com/</a>  </p></blockquote><h3 id="官方docker-hub"><a href="#官方docker-hub" class="headerlink" title="官方docker hub"></a>官方docker hub</h3><blockquote><p><a href="https://hub.docker.com" target="_blank" rel="noopener">https://hub.docker.com</a>  </p></blockquote><h3 id="Linux内核版本"><a href="#Linux内核版本" class="headerlink" title="Linux内核版本"></a>Linux内核版本</h3><blockquote><p>Docker requires a 64-bit OS and version 3.10 or higher of the Linux kernel.  </p></blockquote><p>备注：docker部分功能需用3.10以上的 linux kernel 才能支持，CENTOS/RHEL6版本的linux内核都低于3.10，所以需要在CENTOS/RHEL6安装docker则需要升级内核版本。本文建议在CENTOS/RHEL7版本内使用docker。其它liunx支持的发行版包括请参考官方文档，这里不再阐述。    </p><h3 id="CENTOS-RHEL-扩展源"><a href="#CENTOS-RHEL-扩展源" class="headerlink" title="CENTOS/RHEL 扩展源"></a>CENTOS/RHEL 扩展源</h3><blockquote><p>CENTOS/RHEL6：<a href="http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</a></p></blockquote><blockquote><p>CENTOS/RHEL7：<a href="http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</a>  </p></blockquote><h3 id="部分术语"><a href="#部分术语" class="headerlink" title="部分术语"></a>部分术语</h3><p><strong>images</strong>:  docker镜像（运行docker容器所需要的基础组件，根据自己应用需求构建最小可用的运行环境）  </p><p><strong>container</strong>:  docker容器（可看做为运行着的image，一个image可以运行多个containers）  </p><p><strong>registry</strong>:  docker仓库（用于存储images，可分为官方、第三方和私有）  </p><p><strong>tags</strong>:  docker镜像的版本，根据tags来区分image的版本</p><h1 id="二、docker安装"><a href="#二、docker安装" class="headerlink" title="二、docker安装"></a>二、docker安装</h1><h3 id="查看Liunx内核版本"><a href="#查看Liunx内核版本" class="headerlink" title="查看Liunx内核版本"></a>查看Liunx内核版本</h3><p><code>uname -a</code></p><h3 id="安装扩展源"><a href="#安装扩展源" class="headerlink" title="安装扩展源"></a>安装扩展源</h3><p><code>sudo rpm -ihv http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p><code>sudo yum install -y docker</code>  </p><h3 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h3><p><code>sudo systemctl enable docker.service</code><br><code>sudo systemctl start docker.service</code></p><h3 id="daemon-reload"><a href="#daemon-reload" class="headerlink" title="daemon-reload"></a>daemon-reload</h3><p><code>sudo systemctl daemon-reload</code>  </p><h3 id="配置文件及启动脚本路径"><a href="#配置文件及启动脚本路径" class="headerlink" title="配置文件及启动脚本路径"></a>配置文件及启动脚本路径</h3><p><code>/etc/sysconfig/docker</code><br><code>/lib/system.d/system/docker.service</code></p><h1 id="三、docker-基础应用"><a href="#三、docker-基础应用" class="headerlink" title="三、docker 基础应用"></a>三、docker 基础应用</h1><h3 id="docker基础命令"><a href="#docker基础命令" class="headerlink" title="docker基础命令"></a>docker基础命令</h3><h5 id="1、查看docker版本"><a href="#1、查看docker版本" class="headerlink" title="1、查看docker版本"></a>1、查看docker版本</h5><pre><code>docker version</code></pre><h5 id="2、查看本地的docker镜像；"><a href="#2、查看本地的docker镜像；" class="headerlink" title="2、查看本地的docker镜像；"></a>2、查看本地的docker镜像；</h5><pre><code>docker images</code></pre><h5 id="3、查看运行中的容器，docker-ps-a-查看所有容器（包括停止的）；"><a href="#3、查看运行中的容器，docker-ps-a-查看所有容器（包括停止的）；" class="headerlink" title="3、查看运行中的容器，docker ps -a 查看所有容器（包括停止的）；"></a>3、查看运行中的容器，docker ps -a 查看所有容器（包括停止的）；</h5><pre><code>docker ps</code></pre><h5 id="4、删除image-id为-imageid的docker镜像；"><a href="#4、删除image-id为-imageid的docker镜像；" class="headerlink" title="4、删除image id为$imageid的docker镜像；"></a>4、删除image id为$imageid的docker镜像；</h5><pre><code>docker rmi $imageid</code></pre><h5 id="5、停止container-id为-containerid的容器；"><a href="#5、停止container-id为-containerid的容器；" class="headerlink" title="5、停止container id为$containerid的容器；"></a>5、停止container id为$containerid的容器；</h5><pre><code>docker stop $containerid</code></pre><h5 id="6、删除container-id为-containerid的容器（不能删除一个运行中的容器）；"><a href="#6、删除container-id为-containerid的容器（不能删除一个运行中的容器）；" class="headerlink" title="6、删除container id为$containerid的容器（不能删除一个运行中的容器）；"></a>6、删除container id为$containerid的容器（不能删除一个运行中的容器）；</h5><pre><code>docker rm $containerid</code></pre><h5 id="7、将一个运行中的container-id为-containerid的容器打包为image-name-为-imagename的镜像-image的版本为-tags；"><a href="#7、将一个运行中的container-id为-containerid的容器打包为image-name-为-imagename的镜像-image的版本为-tags；" class="headerlink" title="7、将一个运行中的container id为$containerid的容器打包为image name 为$imagename的镜像,image的版本为$tags；"></a>7、将一个运行中的container id为$containerid的容器打包为image name 为$imagename的镜像,image的版本为$tags；</h5><pre><code>docker commit $containerid $imagename:$tags</code></pre><h5 id="8、后台运行（-d）一个image名称为-imagename-image版本为-tags的镜像的容器，并且将容器内的80端口映射为宿主机的8080端口，宿主机的-etc目录挂载到容器内的-opt目录内"><a href="#8、后台运行（-d）一个image名称为-imagename-image版本为-tags的镜像的容器，并且将容器内的80端口映射为宿主机的8080端口，宿主机的-etc目录挂载到容器内的-opt目录内" class="headerlink" title="8、后台运行（-d）一个image名称为$imagename,image版本为$tags的镜像的容器，并且将容器内的80端口映射为宿主机的8080端口，宿主机的/etc目录挂载到容器内的/opt目录内;"></a>8、后台运行（-d）一个image名称为$imagename,image版本为$tags的镜像的容器，并且将容器内的80端口映射为宿主机的8080端口，宿主机的/etc目录挂载到容器内的/opt目录内;</h5><pre><code>docker run -d -p 80:8080 -v /opt:/etc $imagename:$tags</code></pre><h5 id="9、通过Dockerfile生成一个名称为-imagename-image版本为-tags的镜像。Dockerfile的文件夹路径为-dockerfiledir"><a href="#9、通过Dockerfile生成一个名称为-imagename-image版本为-tags的镜像。Dockerfile的文件夹路径为-dockerfiledir" class="headerlink" title="9、通过Dockerfile生成一个名称为$imagename,image版本为$tags的镜像。Dockerfile的文件夹路径为$dockerfiledir;"></a>9、通过Dockerfile生成一个名称为$imagename,image版本为$tags的镜像。Dockerfile的文件夹路径为$dockerfiledir;</h5><pre><code>docker build -t $imagename:$tags $dockerfiledir</code></pre><h5 id="10、查看image或者container的详细信息"><a href="#10、查看image或者container的详细信息" class="headerlink" title="10、查看image或者container的详细信息;"></a>10、查看image或者container的详细信息;</h5><pre><code>docker inspect $imageid  docker inspect $containerid</code></pre><h5 id="11、重命名image的名称和版本"><a href="#11、重命名image的名称和版本" class="headerlink" title="11、重命名image的名称和版本;"></a>11、重命名image的名称和版本;</h5><pre><code>docker tag $imagename1:$tag1 $imagename2:$tag2</code></pre><h5 id="12、推送或者下载images镜像"><a href="#12、推送或者下载images镜像" class="headerlink" title="12、推送或者下载images镜像;"></a>12、推送或者下载images镜像;</h5><pre><code>docker pull $imagename:$tag  docker push $imagename:$tag</code></pre><h3 id="Dockerfile介绍"><a href="#Dockerfile介绍" class="headerlink" title="Dockerfile介绍"></a>Dockerfile介绍</h3><p>Dockerfile的指令是忽略大小写的，建议使用大写，使用 # 作为注释，每一行只支持一条指令，每条指令可以携带多个参数。  </p><p>Dockerfile的指令根据作用可以分为两种，构建指令和设置指令。</p><p>构建指令用于构建image，其指定的操作不会在运行image的容器上执行；设置指令用于设置image的属性，其指定的操作将在运行image的容器中执行。</p><p><strong>示例：</strong></p><pre><code>FROM registry.kube-system.svc.cluster.local:5000/tomcat:8.0-jre8-0.1MAINTAINER daxinENV TZ Asia/ShanghaiRUN rm -rf /usr/local/tomcat/webapps/*ADD cloud-2.8.war /usr/local/tomcat/webapps/cloud.warRUN mkdir -p /data1RUN sed -i &#39;2 a\JAVA_OPTS=&quot;-server -Xms512m -Xmx1024m  -XX:PermSize=512m -XX:MaxPermSize=1024m&quot;&#39; /usr/local/tomcat/bin/catalina.sh \    &amp;&amp;  sed -i &#39;2 a\CATALINA_OPTS=&quot;-Ddubbo.registry.address=zookeeper://zookeeper:2181&quot;&#39; /usr/local/tomcat/bin/catalina.sh \    &amp;&amp;  sed -i &#39;70 a\               URIEncoding=&quot;UTF-8&quot;&#39; /usr/local/tomcat/conf/server.xmlCMD [&quot;catalina.sh&quot;, &quot;run&quot;]EXPOSE 8080</code></pre><p>FROM：指定基于哪个镜像来生成新的镜像。  </p><p>ENV：设定环境变量，等同于Linux中export。</p><p>RUN: 运行bash命令，一般用来修改镜像内文件内容。</p><p>ADD：添加本地文件/文件夹至镜像相应路径。</p><p>CMD: 运行image执行的脚本和参数。</p><p>MAINTAINER：用来标志镜像创建者信息。</p><p>EXPOSE：暴露需要让宿主机映射的端口信息</p><p>ENTRYPOINT：类似CMD功能，但运行容器的时候CMD命令可以被外部命令替代ENTRYPOINT不能。  </p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails consul 微服务 (配置下发)</title>
      <link href="/2020/02/24/rails-3/"/>
      <url>/2020/02/24/rails-3/</url>
      
        <content type="html"><![CDATA[<h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><ul><li>和服务发现一致</li><li>console , puma  方法需要扩展</li></ul><pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">class</span> <span class="token class-name">AsyncConsul</span>  include <span class="token constant">Concurrent</span><span class="token punctuation">:</span><span class="token symbol">:Async</span>  <span class="token constant">CACHE</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token constant">Concurrent</span><span class="token punctuation">:</span><span class="token symbol">:Hash</span><span class="token punctuation">.</span><span class="token keyword">new</span>  <span class="token class-name">SERVICE_CACHE</span> <span class="token operator">||</span><span class="token operator">=</span> <span class="token constant">Concurrent</span><span class="token punctuation">:</span><span class="token symbol">:Map</span><span class="token punctuation">.</span><span class="token keyword">new</span>  <span class="token class-name">def</span> reload_const    loop <span class="token keyword">do</span>      <span class="token keyword">begin</span>        <span class="token constant">Timeout</span><span class="token punctuation">:</span><span class="token symbol">:timeout</span> <span class="token number">2</span> <span class="token keyword">do</span>          config <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>load <span class="token constant">Diplomat</span><span class="token punctuation">:</span><span class="token symbol">:Kv</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># your key ,value</span>          database <span class="token operator">=</span> config<span class="token punctuation">[</span><span class="token string">"database"</span><span class="token punctuation">]</span>          redis <span class="token operator">=</span> config<span class="token punctuation">[</span><span class="token string">"redis"</span><span class="token punctuation">]</span>          reset_database database          reset_redisconfig redis        <span class="token keyword">end</span>      <span class="token keyword">rescue</span> <span class="token operator">=</span><span class="token operator">></span> e      <span class="token keyword">end</span>      sleep <span class="token number">2</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">reset_database</span><span class="token punctuation">(</span>database<span class="token punctuation">)</span>    <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"database"</span><span class="token punctuation">]</span> <span class="token operator">||</span><span class="token operator">=</span> database    <span class="token keyword">if</span> <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"database"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> database      <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"database"</span><span class="token punctuation">]</span> <span class="token operator">=</span> database      <span class="token constant">ActiveRecord</span><span class="token punctuation">:</span><span class="token symbol">:Base</span><span class="token punctuation">.</span>establish_connection database    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token function">reset_redisconfig</span><span class="token punctuation">(</span>ldap<span class="token punctuation">)</span>    <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"redis"</span><span class="token punctuation">]</span> <span class="token operator">||</span><span class="token operator">=</span> ldap    <span class="token keyword">if</span> <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"redis"</span><span class="token punctuation">]</span> <span class="token operator">!=</span> ldap      <span class="token constant">CACHE</span><span class="token punctuation">[</span><span class="token string">"redis"</span><span class="token punctuation">]</span> <span class="token operator">=</span> ldap      <span class="token comment" spellcheck="true">#LDAP_CONFIG.merge! ldap</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails consul 微服务(服务发现 , 负载均衡)</title>
      <link href="/2020/02/24/rails-2/"/>
      <url>/2020/02/24/rails-2/</url>
      
        <content type="html"><![CDATA[<h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><ul><li>每隔2秒查看consul ui 有没注册服务<ul><li>consul 没有watch 方法</li></ul></li><li>在控制台启动 <ul><li>console sope</li></ul></li><li>puma 启动<ul><li>on_worker_boot watch</li><li>打开 workers ENV.fetch(“WEB_CONCURRENCY”) { 2 }  </li></ul></li><li>loadbalance<ul><li>在获取到到url 直接round robbin 访问<ul><li>其他的访问策略需要自己写代码<br><code>`</code>ruby<h1 id="console-配置"><a href="#console-配置" class="headerlink" title="console 配置"></a>console 配置</h1>config.after_initialize do<br>require “#{Rails.root}/config/after_initialize/consul_service_discovery.rb”<br>console do<br>  require “#{Rails.root}/config/after_initialize/consul_service_discovery.rb”<h1 id="add-watch-server-code"><a href="#add-watch-server-code" class="headerlink" title="add watch server code"></a>add watch server code</h1>end<br>end</li></ul></li></ul></li></ul><h1 id="puma-配置"><a href="#puma-配置" class="headerlink" title="puma 配置"></a>puma 配置</h1><pre><code>on_worker_boot do  # add watch server codeend</code></pre><p>class AsyncConsul<br>  include Concurrent::Async</p><p>  CACHE ||= Concurrent::Hash.new<br>  SERVICE_CACHE ||= Concurrent::Map.new</p><p>  class &lt;&lt; self<br>    def get_service_url(servicename )<br>      begin<br>        result = SERVICE_CACHE[servicename].sample<br>        return “#{result[:type]}://#{result[:address]}:#{result[:port]}”<br>      rescue =&gt; e</p><pre><code>  endend</code></pre><p>  end</p><p>  def service_discovery(servicename = “sso-server”)<br>    loop do<br>      begin<br>        Timeout::timeout 2 do<br>          success_service_list = Diplomat::Health.service(servicename, passing: true)<br>          list = []<br>          success_service_list.each do |s|<br>            address = s.Service[“Address”]<br>            port = s.Service[“Port”]<br>            list &lt;&lt; { port: port, address: address, type: “http” }<br>          end<br>          SERVICE_CACHE[servicename] ||= list<br>          if SERVICE_CACHE[servicename] != list<br>            SERVICE_CACHE[servicename] = list<br>          end<br>        end<br>      rescue =&gt; e<br>      end<br>      sleep 2<br>    end<br>  end<br>end<br><code>`</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails consul 微服务(register service check)</title>
      <link href="/2020/02/24/rails-1/"/>
      <url>/2020/02/24/rails-1/</url>
      
        <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>可以在每一天机器安装  consul client, 然后通过脚本去watch<ul><li>需要在每一台机器安装consul client</li></ul></li><li>直接在代码watch service<ul><li>经过实践证明, 不存在性能瓶颈</li></ul></li><li>本文通过在代码watch service 实现</li></ul><h3 id="服务注册-健康检查"><a href="#服务注册-健康检查" class="headerlink" title="服务注册 , 健康检查"></a>服务注册 , 健康检查</h3><ul><li><p>diplomat </p></li><li><p>before configuration  加载consul</p><ul><li>rails 有可能需要在consul获取database的配置文件</li></ul></li></ul><pre class=" language-ruby"><code class="language-ruby">    config<span class="token punctuation">.</span>before_configuration <span class="token keyword">do</span>      puts <span class="token string">"before configuration"</span>      <span class="token keyword">require</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>Rails<span class="token punctuation">.</span>root<span class="token delimiter tag">}</span></span>/config/before_configuration/consul.rb"</span>      server_register    <span class="token keyword">end</span><span class="token comment" spellcheck="true"># consul example</span><span class="token keyword">require</span> <span class="token string">"socket"</span><span class="token keyword">require</span> <span class="token string">"diplomat"</span>link <span class="token operator">=</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">:</span><span class="token symbol">:PF_LINK</span> <span class="token keyword">if</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>const_defined<span class="token operator">?</span> <span class="token symbol">:PF_LINK</span>packet <span class="token operator">=</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">:</span><span class="token symbol">:PF_PACKET</span> <span class="token keyword">if</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>const_defined<span class="token operator">?</span> <span class="token symbol">:PF_PACKET</span><span class="token constant">INTERFACE_PACKET_FAMILY</span> <span class="token operator">=</span> link <span class="token operator">||</span> packet<span class="token keyword">raise</span> <span class="token string">"ruby version 至少2.4.5"</span> <span class="token keyword">if</span> <span class="token constant">RUBY_VERSION</span> <span class="token operator">&lt;</span> <span class="token string">"2.4.5"</span><span class="token keyword">def</span> server_ip  ip <span class="token operator">=</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>ip_address_list<span class="token punctuation">.</span>detect <span class="token punctuation">{</span> <span class="token operator">|</span>intf<span class="token operator">|</span> intf<span class="token punctuation">.</span>ipv4_private<span class="token operator">?</span> <span class="token punctuation">}</span>  ip<span class="token punctuation">.</span>ip_address<span class="token keyword">end</span><span class="token keyword">def</span> server_mac  interfaces <span class="token operator">=</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>getifaddrs<span class="token punctuation">.</span>select <span class="token keyword">do</span> <span class="token operator">|</span>addr<span class="token operator">|</span>    <span class="token keyword">if</span> addr<span class="token punctuation">.</span>addr      addr<span class="token punctuation">.</span>addr<span class="token punctuation">.</span>pfamily <span class="token operator">==</span> <span class="token constant">INTERFACE_PACKET_FAMILY</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  mac<span class="token punctuation">,</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>const_defined<span class="token operator">?</span> <span class="token symbol">:PF_LINK</span>      interfaces<span class="token punctuation">.</span>map <span class="token keyword">do</span> <span class="token operator">|</span>addr<span class="token operator">|</span>        addr<span class="token punctuation">.</span>addr<span class="token punctuation">.</span>getnameinfo      <span class="token keyword">end</span><span class="token punctuation">.</span>find <span class="token keyword">do</span> <span class="token operator">|</span>m<span class="token punctuation">,</span> <span class="token operator">|</span>        <span class="token operator">!</span>m<span class="token punctuation">.</span>empty<span class="token operator">?</span>      <span class="token keyword">end</span>    <span class="token keyword">elsif</span> <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>const_defined<span class="token operator">?</span> <span class="token symbol">:PF_PACKET</span>      interfaces<span class="token punctuation">.</span>map <span class="token keyword">do</span> <span class="token operator">|</span>addr<span class="token operator">|</span>        addr<span class="token punctuation">.</span>addr<span class="token punctuation">.</span>inspect_sockaddr<span class="token punctuation">[</span><span class="token regex">/hwaddr=([\h:]+)/</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>      <span class="token keyword">end</span><span class="token punctuation">.</span>find <span class="token keyword">do</span> <span class="token operator">|</span>mac_addr<span class="token operator">|</span>        mac_addr <span class="token operator">!=</span> <span class="token string">"00:00:00:00:00:00"</span>      <span class="token keyword">end</span>    <span class="token keyword">end</span>  <span class="token keyword">return</span> mac <span class="token keyword">if</span> mac  <span class="token keyword">raise</span> <span class="token string">"获取 server_mac failed"</span><span class="token keyword">end</span><span class="token keyword">def</span> server_hostname  <span class="token punctuation">:</span><span class="token symbol">:Socket</span><span class="token punctuation">.</span>gethostname<span class="token keyword">end</span><span class="token constant">CONSUL</span> <span class="token operator">=</span> <span class="token constant">YAML</span><span class="token punctuation">.</span><span class="token function">load_file</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>Rails<span class="token punctuation">.</span>root<span class="token delimiter tag">}</span></span>/config/consul.yaml"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"consul"</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token symbol">:Diplomat</span><span class="token punctuation">.</span>configure <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>  config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"url"</span><span class="token punctuation">]</span>  config<span class="token punctuation">.</span>options <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"opts"</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">end</span><span class="token keyword">def</span> server_register  address <span class="token operator">=</span> server_ip  name <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span>  port <span class="token operator">=</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"port"</span><span class="token punctuation">]</span>  serivice_opts <span class="token operator">=</span> <span class="token punctuation">{</span>    id<span class="token punctuation">:</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>server_mac<span class="token delimiter tag">}</span></span>_<span class="token interpolation"><span class="token delimiter tag">#{</span>server_ip<span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>    address<span class="token punctuation">:</span> address<span class="token punctuation">,</span>    port<span class="token punctuation">:</span> port<span class="token punctuation">,</span>    checks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token constant">CONSUL</span><span class="token punctuation">[</span><span class="token string">"check"</span><span class="token punctuation">]</span>    serivice_opts<span class="token punctuation">[</span><span class="token symbol">:checks</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>server_mac<span class="token delimiter tag">}</span></span>_<span class="token interpolation"><span class="token delimiter tag">#{</span>server_ip<span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span>      <span class="token string">"http"</span><span class="token punctuation">:</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>CONSUL<span class="token punctuation">[</span><span class="token string">"check"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"protocol"</span><span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>://<span class="token interpolation"><span class="token delimiter tag">#{</span>address<span class="token delimiter tag">}</span></span>:<span class="token interpolation"><span class="token delimiter tag">#{</span>port<span class="token delimiter tag">}</span></span><span class="token interpolation"><span class="token delimiter tag">#{</span>CONSUL<span class="token punctuation">[</span><span class="token string">"check"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"path"</span><span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>"</span><span class="token punctuation">,</span>      <span class="token string">"interval"</span><span class="token punctuation">:</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>CONSUL<span class="token punctuation">[</span><span class="token string">"check"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"interval"</span><span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>s"</span><span class="token punctuation">,</span>      <span class="token string">"timeout"</span><span class="token punctuation">:</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#{</span>CONSUL<span class="token punctuation">[</span><span class="token string">"check"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"timeout"</span><span class="token punctuation">]</span><span class="token delimiter tag">}</span></span>s"</span><span class="token punctuation">,</span>      <span class="token string">"DeregisterCriticalServiceAfter"</span><span class="token punctuation">:</span> <span class="token string">"1m"</span><span class="token punctuation">,</span>      <span class="token string">"method"</span><span class="token punctuation">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>      <span class="token string">"header"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token string">"tls_skip_verify"</span><span class="token punctuation">:</span> <span class="token keyword">false</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>  <span class="token keyword">end</span>  <span class="token punctuation">:</span><span class="token symbol">:Diplomat</span><span class="token punctuation">:</span><span class="token symbol">:Service</span><span class="token punctuation">.</span>register serivice_opts<span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python ruby 元编程区别</title>
      <link href="/2020/02/18/python-1/"/>
      <url>/2020/02/18/python-1/</url>
      
        <content type="html"><![CDATA[<h3 id="蜜糖方法"><a href="#蜜糖方法" class="headerlink" title="蜜糖方法"></a>蜜糖方法</h3><ul><li><p>ruby </p><ul><li>method_missing</li></ul></li><li><p>python </p><ul><li>__getattr__  , __getattribute__</li></ul></li></ul><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><ul><li>python </li></ul><pre class=" language-python"><code class="language-python">  <span class="token keyword">def</span> <span class="token function">record_method</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>      puts <span class="token string">"xxxxxxxxxxx"</span>      f<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapper</code></pre><ul><li>ruby  </li></ul><pre><code>def with_record_log(method, *args)  puts &quot;xxxxxx&quot;  self.send method , *args  puts &quot;yyyyyyyy&quot;end</code></pre><h3 id="动态方法"><a href="#动态方法" class="headerlink" title="动态方法"></a>动态方法</h3><ul><li>python</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># class method</span><span class="token keyword">import</span> types<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    country <span class="token operator">=</span> <span class="token string">'china'</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name@classmethod<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s在奔跑'</span> <span class="token operator">%</span> cls<span class="token punctuation">.</span>country<span class="token punctuation">)</span>Person<span class="token punctuation">.</span>run <span class="token operator">=</span> runPerson<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#instance method</span><span class="token keyword">import</span> types<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%s在奔跑'</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>name<span class="token punctuation">)</span>p1 <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">'p1'</span><span class="token punctuation">)</span>p1<span class="token punctuation">.</span>run <span class="token operator">=</span> types<span class="token punctuation">.</span>MethodType<span class="token punctuation">(</span>run<span class="token punctuation">,</span>p1<span class="token punctuation">)</span>p1<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># static method</span><span class="token keyword">import</span> types<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    country <span class="token operator">=</span> <span class="token string">'china'</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name@staticmethod<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'在奔跑'</span><span class="token punctuation">)</span>Person<span class="token punctuation">.</span>run <span class="token operator">=</span> runPerson<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># function</span><span class="token keyword">from</span> ast <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> typesfunction_ast <span class="token operator">=</span> FunctionDef<span class="token punctuation">(</span>    name<span class="token operator">=</span><span class="token string">'foobar'</span><span class="token punctuation">,</span>    args<span class="token operator">=</span>arguments<span class="token punctuation">(</span>args<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vararg<span class="token operator">=</span>None<span class="token punctuation">,</span> kwarg<span class="token operator">=</span>None<span class="token punctuation">,</span> defaults<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    body<span class="token operator">=</span><span class="token punctuation">[</span>Return<span class="token punctuation">(</span>value<span class="token operator">=</span>Num<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> lineno<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> col_offset<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lineno<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> col_offset<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    decorator_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    lineno<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    col_offset<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>module_ast <span class="token operator">=</span> Module<span class="token punctuation">(</span>body<span class="token operator">=</span><span class="token punctuation">[</span>function_ast<span class="token punctuation">]</span><span class="token punctuation">)</span>module_code <span class="token operator">=</span> compile<span class="token punctuation">(</span>module_ast<span class="token punctuation">,</span> <span class="token string">"&lt;>"</span><span class="token punctuation">,</span> <span class="token string">"exec"</span><span class="token punctuation">)</span>function_code <span class="token operator">=</span> <span class="token punctuation">[</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> module_code<span class="token punctuation">.</span>co_consts <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>c<span class="token punctuation">,</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>foobar <span class="token operator">=</span> types<span class="token punctuation">.</span>FunctionType<span class="token punctuation">(</span>function_code<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span> foobar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2</span>module_code <span class="token operator">=</span> compile<span class="token punctuation">(</span><span class="token string">'def foobar(): return "foobar"'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span>function_code <span class="token operator">=</span> <span class="token punctuation">[</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> module_code<span class="token punctuation">.</span>co_consts <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>c<span class="token punctuation">,</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>foobar <span class="token operator">=</span> types<span class="token punctuation">.</span>FunctionType<span class="token punctuation">(</span>function_code<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span> foobar<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ul><li>ruby</li></ul><pre class=" language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true"># instance method</span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">end</span><span class="token constant">A</span><span class="token punctuation">.</span>instance_eval <span class="token keyword">do</span> <span class="token keyword">end</span><span class="token comment" spellcheck="true"># class method </span><span class="token constant">A</span><span class="token punctuation">.</span>class_eval <span class="token keyword">do</span><span class="token keyword">end</span><span class="token comment" spellcheck="true"># open class </span><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">end</span><span class="token comment" spellcheck="true"># 定义方法 </span><span class="token keyword">define_method</span> <span class="token symbol">:xxx</span> <span class="token keyword">do</span> <span class="token operator">|</span>args<span class="token operator">|</span><span class="token keyword">end</span></code></pre><h3 id="动态类"><a href="#动态类" class="headerlink" title="动态类"></a>动态类</h3><ul><li>python</li></ul><pre class=" language-python"><code class="language-python">SomeClass <span class="token operator">=</span> type<span class="token punctuation">(</span><span class="token string">'SomeClass'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><ul><li>ruby</li></ul><pre class=" language-ruby"><code class="language-ruby"> <span class="token constant">A</span> <span class="token operator">=</span>   <span class="token builtin">Class</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token class-name">do</span>   <span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awifi 环境</title>
      <link href="/2020/02/18/awifi/"/>
      <url>/2020/02/18/awifi/</url>
      
        <content type="html"><![CDATA[<h3 id="内部常用链接"><a href="#内部常用链接" class="headerlink" title="内部常用链接"></a>内部常用链接</h3><table><thead><tr><th>地址</th><th>URL</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td>wiki</td><td><a href="https://wiki.51iwifi.com/doku.php" target="_blank" rel="noopener">https://wiki.51iwifi.com/doku.php</a></td><td>-</td><td>-</td></tr><tr><td>dido</td><td><a href="http://dido.51iwifi.com/#/login" target="_blank" rel="noopener">http://dido.51iwifi.com/#/login</a></td><td>-</td><td>-</td></tr><tr><td>gitlab</td><td><a href="https://git.51iwifi.com/" target="_blank" rel="noopener">https://git.51iwifi.com/</a></td><td>-</td><td>-</td></tr><tr><td>jenkins</td><td><a href="https://jks.51iwifi.com" target="_blank" rel="noopener">https://jks.51iwifi.com</a></td><td>-</td><td>-</td></tr></tbody></table><h3 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h3><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><ul><li>url </li></ul><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><ul><li>url</li></ul><h4 id="正式环境"><a href="#正式环境" class="headerlink" title="正式环境"></a>正式环境</h4><ul><li>url</li></ul><h3 id="自动化运维"><a href="#自动化运维" class="headerlink" title="自动化运维"></a>自动化运维</h3><ul><li><p>开发环境</p><ul><li>consul <a href="http://192.168.212.203:8500" target="_blank" rel="noopener">http://192.168.212.203:8500</a></li><li>url location</li><li>kafka  192.168.213.147:9092 </li></ul></li><li><p>测试环境</p><ul><li>consul <a href="http://192.168.190.10:32740" target="_blank" rel="noopener">http://192.168.190.10:32740</a></li><li>url <a href="https://dev-op.51iwifi.com/" target="_blank" rel="noopener">https://dev-op.51iwifi.com/</a></li><li>kafka  192.168.213.147:9092</li></ul></li><li><p>正式环境</p><ul><li>consul <a href="http://192.168.190.12:32500" target="_blank" rel="noopener">http://192.168.190.12:32500</a></li><li>kafka 192.168.213.147:31095</li></ul></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> awifi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3 元编程</title>
      <link href="/2020/02/18/python/"/>
      <url>/2020/02/18/python/</url>
      
        <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>Python元编程有两种方法，一是采用类似“装饰器”的工具对基本元素（例如函数、类、类型）内审和对其进行实时创建和修改，二是运用类型”元类”的方式对类实例的创建过程进行修改，甚至于允许重新设计Python面对对象编程范式的实现</li></ul><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">doSomethingBeforeHi</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I am doing some boring work before executing hi()"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps<span class="token keyword">def</span> <span class="token function">a_new_decorator</span><span class="token punctuation">(</span>a_func<span class="token punctuation">)</span><span class="token punctuation">:</span>    @wraps<span class="token punctuation">(</span>a_func<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">wrapTheFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I am doing some boring work before executing a_func()"</span><span class="token punctuation">)</span>        a_func<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I am doing some boring work after executing a_func()"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> wrapTheFunction<span class="token keyword">def</span> <span class="token function">logit</span><span class="token punctuation">(</span>logfile<span class="token operator">=</span><span class="token string">'out.log'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">logging_decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>        @wraps<span class="token punctuation">(</span>func<span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">wrapped_function</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>            log_string <span class="token operator">=</span> func<span class="token punctuation">.</span>__name__ <span class="token operator">+</span> <span class="token string">" was called"</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>log_string<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 打开logfile，并写入内容</span>            <span class="token keyword">with</span> open<span class="token punctuation">(</span>logfile<span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> opened_file<span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># 现在将日志打到指定的logfile</span>                opened_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>log_string <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">return</span> wrapped_function    <span class="token keyword">return</span> logging_decorator</code></pre><blockquote><p>wraps 作用</p><ul><li>在类装饰器中使用闭包会导致生成的对象不再是被装饰的类的实例，二是在装饰器函数创建的子类的实例，这会影响__name__和__doc__等属性，在上篇我们使用@wraps装饰器对函数装饰器进行操作让问题得到解决，但在类装饰器中这一方法无效</li></ul></blockquote><h3 id="meta"><a href="#meta" class="headerlink" title="meta"></a>meta</h3><hr><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><pre class=" language-python"><code class="language-python">type<span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 查看对象类型</span>type<span class="token punctuation">(</span>name<span class="token punctuation">,</span> bases<span class="token punctuation">,</span> dict<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#用来创建类</span></code></pre><h4 id="metaclass"><a href="#metaclass" class="headerlink" title="metaclass"></a>metaclass</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">FirstMetaClass</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> name<span class="token punctuation">,</span> bases<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">,</span>name<span class="token punctuation">,</span>bases<span class="token punctuation">,</span>attrs<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># cls 类</span><span class="token comment" spellcheck="true"># name  class instance ,个人理解</span><span class="token comment" spellcheck="true"># bases (object ,)</span><span class="token comment" spellcheck="true"># attrs 类属性</span></code></pre><h4 id="动态创建function"><a href="#动态创建function" class="headerlink" title="动态创建function"></a>动态创建function</h4><pre class=" language-python"><code class="language-python">module_code <span class="token operator">=</span> compile<span class="token punctuation">(</span><span class="token string">'def foobar(): return "foobar"'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'exec'</span><span class="token punctuation">)</span>function_code <span class="token operator">=</span> <span class="token punctuation">[</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> module_code<span class="token punctuation">.</span>co_consts <span class="token keyword">if</span> isinstance<span class="token punctuation">(</span>c<span class="token punctuation">,</span> types<span class="token punctuation">.</span>CodeType<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>foobar <span class="token operator">=</span> types<span class="token punctuation">.</span>FunctionType<span class="token punctuation">(</span>function_code<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span> foobar<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="动态method"><a href="#动态method" class="headerlink" title="动态method"></a>动态method</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> types<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    country <span class="token operator">=</span> <span class="token string">'china'</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name@staticmethod<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'在奔跑'</span><span class="token punctuation">)</span>Person<span class="token punctuation">.</span>run <span class="token operator">=</span> runPerson<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka  Error sending heartbeat</title>
      <link href="/2019/10/12/karafka-3/"/>
      <url>/2019/10/12/karafka-3/</url>
      
        <content type="html"><![CDATA[<h4 id="Error-sending-heartbeat-Kafka-UnknownMemberId"><a href="#Error-sending-heartbeat-Kafka-UnknownMemberId" class="headerlink" title="Error sending heartbeat: Kafka::UnknownMemberId"></a>Error sending heartbeat: Kafka::UnknownMemberId</h4><ul><li>通常是代码问题导致发送心跳失败</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> karafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rails console hang</title>
      <link href="/2019/10/09/rails/"/>
      <url>/2019/10/09/rails/</url>
      
        <content type="html"><![CDATA[<h3 id="rails-c-一直卡着-rails-server-可以启动"><a href="#rails-c-一直卡着-rails-server-可以启动" class="headerlink" title="rails c 一直卡着 , rails server 可以启动"></a>rails c 一直卡着 , rails server 可以启动</h3><pre><code>root@autotest:/service/automationtesting-agent# spring  stopSpring stopped.root@autotest:/service/automationtesting-agent# rails cRunning via Spring preloader in process 17051Loading development environment (Rails 5.2.3)</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka  返回批处理</title>
      <link href="/2019/10/09/karafka-2/"/>
      <url>/2019/10/09/karafka-2/</url>
      
        <content type="html"><![CDATA[<pre class=" language-ruby"><code class="language-ruby"><span class="token keyword">class</span> <span class="token class-name">KarafkaApp</span> <span class="token operator">&lt;</span> <span class="token constant">Karafka</span><span class="token punctuation">:</span><span class="token symbol">:App</span>  setup <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>    config<span class="token punctuation">.</span>batch_fetching <span class="token operator">=</span> <span class="token keyword">true</span>  <span class="token comment" spellcheck="true">#批量获取一次处理</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">class</span> <span class="token class-name">CollectGatewayConsumer</span> <span class="token operator">&lt;</span> <span class="token constant">ApplicationConsumer</span>  <span class="token keyword">def</span> consume    params_batch<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>params<span class="token operator">|</span>    <span class="token keyword">end</span>   <span class="token keyword">end</span><span class="token keyword">end</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> karafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka group 多次消费</title>
      <link href="/2019/10/09/karafka-1/"/>
      <url>/2019/10/09/karafka-1/</url>
      
        <content type="html"><![CDATA[<h3 id="consumer-group-多次消费"><a href="#consumer-group-多次消费" class="headerlink" title="consumer group 多次消费"></a>consumer group 多次消费</h3><pre class=" language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#config.client_id = "teamwork_manage_#{ENV["HOSTNAME"]}"</span>config<span class="token punctuation">.</span>client_id <span class="token operator">=</span> <span class="token string">"devops_server"</span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> karafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>karafka Error committing offsets</title>
      <link href="/2019/10/09/karafka/"/>
      <url>/2019/10/09/karafka/</url>
      
        <content type="html"><![CDATA[<h3 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h3><h4 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h4><pre><code>I, [2019-10-09T11:23:08.506232 #9611]  INFO -- : Inline processing of topic data-monitor with 1 messages took 265 msI, [2019-10-09T11:23:08.506383 #9611]  INFO -- : 1 messages on data-monitor topic delegated to DataMonitorConsumerE, [2019-10-09T11:23:08.507763 #9611] ERROR -- : [[devops_server_bigger_group] {}:] Error committing offsets: Kafka::UnknownMemberIdI, [2019-10-09T11:23:08.507862 #9611]  INFO -- : [[devops_server_bigger_group] {}:] Joining group `devops_server_bigger_group`E, [2019-10-09T11:23:08.508926 #9611] ERROR -- : [[devops_server_bigger_group] {}:] Failed to join group; resetting member id and retrying in 1s...I, [2019-10-09T11:23:09.509288 #9611]  INFO -- : [[devops_server_bigger_group] {}:] Joining group `devops_server_bigger_group`I, [2019-10-09T11:23:09.511525 #9611]  INFO -- : [[devops_server_bigger_group] {}:] Joined group `devops_server_bigger_group` with member id `devops_server-799ce8f4-d197-4115-82fa-498ae9ee8a16`</code></pre><h4 id="reason"><a href="#reason" class="headerlink" title="reason"></a>reason</h4><ul><li>batch commit </li></ul><h4 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h4><ul><li><p>if you increase <strong>max.poll.interval.ms</strong> that says “it’s ok to spend time processing a large batch of records” and you’ll gain throughput if you can process larger batches more efficiently than smaller ones.</p></li><li><p>To decrease <strong>max.poll.records says</strong> ”take fewer records so there’s enough time to process them” and would favor latency over throughput.</p></li></ul><pre><code># kafka_2.12-2.3.0./bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list 192.168.213.147:9092 -topic data-monitor  bin/kafka-run-class.sh kafka.tools.UpdateOffsetsInZK earliest config/consumer.properties data-monitor #latest./bin/kafka-topics.sh   --delete --zookeeper 127.0.0.1:2181 --topic data-monitorbatch.size 1024 -&gt; 10240max.block.ms 1000 buffer.memory 4096 -&gt; 40960</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> karafka </category>
          
      </categories>
      
      
        <tags>
            
            <tag> karafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 正则</title>
      <link href="/2019/09/09/ruby-25/"/>
      <url>/2019/09/09/ruby-25/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-正则表达式"><a href="#Ruby-正则表达式" class="headerlink" title="Ruby 正则表达式"></a>Ruby 正则表达式</h3><p>正则表达式是一种特殊序列的字符，它通过使用有专门语法的模式来匹配或查找字符串集合。</p><p>正则表达式用事先定义好的一些特定字符、及这些特定字符的组合，组成一个”规则字符串”，这个”规则字符串”用来表达对字符串的一种过滤逻辑。</p><p><strong>语法</strong><br><strong>正则表达式</strong>从字面上看是一种介于斜杠之间或介于跟在 %r 后的任意分隔符之间的模式，如下所示：</p><pre><code>/pattern//pattern/im    # 可以指定选项%r!/usr/local! # 使用分隔符的正则表达式</code></pre><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyline1 = &quot;Cats are smarter than dogs&quot;;line2 = &quot;Dogs also like meat&quot;;if ( line1 =~ /Cats(.*)/ )  puts &quot;Line1 contains Cats&quot;endif ( line2 =~ /Cats(.*)/ )  puts &quot;Line2 contains  Dogs&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Line1 contains Cats</p></blockquote></div></div><h4 id="正则表达式修饰符"><a href="#正则表达式修饰符" class="headerlink" title="正则表达式修饰符"></a>正则表达式修饰符</h4><p>正则表达式从字面上看可能包含一个可选的修饰符，用于控制各方面的匹配。修饰符在第二个斜杠字符后指定，如上面实例所示。下标列出了 可能的修饰符：</p><table><thead><tr><th style="text-align:center">修饰符</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">i</td><td>当匹配文本时忽略大小写。</td></tr><tr><td style="text-align:center">o</td><td>只执行一次 #{} 插值，正则表达式在第一次时就进行判断。</td></tr><tr><td style="text-align:center">x</td><td>忽略空格，允许在整个表达式中放入空白符和注释。</td></tr><tr><td style="text-align:center">m</td><td>匹配多行，把换行字符识别为正常字符。</td></tr><tr><td style="text-align:center">u,e,s,n</td><td>把正则表达式解释为 Unicode（UTF-8）、EUC、SJIS 或 ASCII。如果没有指定修饰符，则认为正则表达式使用的是源编码。</td></tr></tbody></table><p>就像字符串通过 %Q 进行分隔一样，Ruby 允许您以 %r 作为正则表达式的开头，后面跟着任意分隔符。这在描述包含大量您不想转义的斜杠字符时非常有用。</p><pre><code># 下面匹配单个斜杠字符，不转义%r|/|               # Flag 字符可通过下面的语法进行匹配%r[&lt;/(.*)&gt;]i</code></pre><h4 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h4><p>除了控制字符，(+ ? . * ^ $ ( ) [ ] { } | )，其他所有字符都匹配本身。您可以通过在控制字符前放置一个反斜杠来对控制字符进行转义。</p><p>下表列出了 Ruby 中可用的正则表达式语法。</p><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">^</td><td style="text-align:center">匹配行的开头。</td></tr><tr><td style="text-align:center">$</td><td style="text-align:center">匹配行的结尾。</td></tr><tr><td style="text-align:center">.</td><td style="text-align:center">匹配除了换行符以外的任意单字符。使用 m 选项时，它也可以匹配换行符。</td></tr><tr><td style="text-align:center">[…]</td><td style="text-align:center">匹配在方括号中的任意单字符。</td></tr><tr><td style="text-align:center">[^…]</td><td style="text-align:center">匹配不在方括号中的任意单字符。</td></tr><tr><td style="text-align:center">re*</td><td style="text-align:center">匹配前面的子表达式零次或多次。</td></tr><tr><td style="text-align:center">re+</td><td style="text-align:center">匹配前面的子表达式一次或多次。</td></tr><tr><td style="text-align:center">re?</td><td style="text-align:center">匹配前面的子表达式零次或一次。</td></tr><tr><td style="text-align:center">re{ n}</td><td style="text-align:center">匹配前面的子表达式 n 次。</td></tr><tr><td style="text-align:center">re{ n,}</td><td style="text-align:center">匹配前面的子表达式 n 次或 n 次以上。</td></tr><tr><td style="text-align:center">re{ n, m}</td><td style="text-align:center">匹配前面的子表达式至少 n 次至多 m 次。</td></tr><tr><td style="text-align:center">a&#166;     b</td><td style="text-align:center">匹配 a 或 b。</td></tr><tr><td style="text-align:center">(re)</td><td style="text-align:center">对正则表达式进行分组，并记住匹配文本。</td></tr><tr><td style="text-align:center">(?imx)</td><td style="text-align:center">暂时打开正则表达式内的 i、 m 或 x 选项。如果在圆括号中，则只影响圆括号内的部分。</td></tr><tr><td style="text-align:center">(?-imx)</td><td style="text-align:center">暂时关闭正则表达式内的 i、 m 或 x 选项。如果在圆括号中，则只影响圆括号内的部分。</td></tr><tr><td style="text-align:center">(?: re)</td><td style="text-align:center">对正则表达式进行分组，但不记住匹配文本。</td></tr><tr><td style="text-align:center">(?imx: re)</td><td style="text-align:center">暂时打开圆括号内的 i、 m 或 x 选项。</td></tr><tr><td style="text-align:center">(?-imx: re)</td><td style="text-align:center">暂时关闭圆括号内的 i、 m 或 x 选项。</td></tr><tr><td style="text-align:center">(?#…)</td><td style="text-align:center">注释。</td></tr><tr><td style="text-align:center">(?= re)</td><td style="text-align:center">使用模式指定位置。没有范围。</td></tr><tr><td style="text-align:center">(?! re)</td><td style="text-align:center">使用模式的否定指定位置。没有范围。</td></tr><tr><td style="text-align:center">(?&gt; re)</td><td style="text-align:center">匹配无回溯的独立模式。</td></tr><tr><td style="text-align:center">\w</td><td style="text-align:center">匹配单词字符。</td></tr><tr><td style="text-align:center">\W</td><td style="text-align:center">匹配非单词字符。</td></tr><tr><td style="text-align:center">\s</td><td style="text-align:center">匹配空白字符。等价于 [\t\n\r\f]。</td></tr><tr><td style="text-align:center">\S</td><td style="text-align:center">匹配非空白字符。</td></tr><tr><td style="text-align:center">\d</td><td style="text-align:center">匹配数字。等价于 [0-9]。</td></tr><tr><td style="text-align:center">\D</td><td style="text-align:center">匹配非数字。</td></tr><tr><td style="text-align:center">\A</td><td style="text-align:center">匹配字符串的开头。</td></tr><tr><td style="text-align:center">\Z</td><td style="text-align:center">匹配字符串的结尾。如果存在换行符，则只匹配到换行符之前。</td></tr><tr><td style="text-align:center">\z</td><td style="text-align:center">匹配字符串的结尾。</td></tr><tr><td style="text-align:center">\G</td><td style="text-align:center">匹配最后一个匹配完成的点。</td></tr><tr><td style="text-align:center">\b</td><td style="text-align:center">当在括号外时匹配单词边界，当在括号内时匹配退格键（0x08）。</td></tr><tr><td style="text-align:center">\B</td><td style="text-align:center">匹配非单词边界。</td></tr><tr><td style="text-align:center">\n, \t, etc.</td><td style="text-align:center">匹配换行符、回车符、制表符，等等。</td></tr><tr><td style="text-align:center">\1…\9</td><td style="text-align:center">匹配第 n 个分组子表达式。</td></tr><tr><td style="text-align:center">\10</td><td style="text-align:center">如果已匹配过，则匹配第 n 个分组子表达式。否则指向字符编码的八进制表示。</td></tr></tbody></table><h4 id="正则表达式实例"><a href="#正则表达式实例" class="headerlink" title="正则表达式实例"></a>正则表达式实例</h4><p><strong>字符</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/ruby/</td><td style="text-align:center">匹配 “ruby”</td></tr><tr><td style="text-align:center">¥</td><td style="text-align:center">匹配 Yen 符号。Ruby 1.9 和 Ruby 1.8 支持多个字符。</td></tr></tbody></table><p><strong>字符类</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/[Rr]uby/</td><td style="text-align:center">匹配 “Ruby” 或 “ruby”</td></tr><tr><td style="text-align:center">/rub[ye]/</td><td style="text-align:center">匹配 “ruby” 或 “rube”</td></tr><tr><td style="text-align:center">/[aeiou]/</td><td style="text-align:center">匹配任何一个小写元音字母</td></tr><tr><td style="text-align:center">/[0-9]/</td><td style="text-align:center">匹配任何一个数字，与 /[0123456789]/ 相同</td></tr><tr><td style="text-align:center">/[a-z]/</td><td style="text-align:center">匹配任何一个小写 ASCII 字母</td></tr><tr><td style="text-align:center">/[A-Z]/</td><td style="text-align:center">匹配任何一个大写 ASCII 字母</td></tr><tr><td style="text-align:center">/[a-zA-Z0-9]/</td><td style="text-align:center">匹配任何一个括号内的字符</td></tr><tr><td style="text-align:center">/[^aeiou]/</td><td style="text-align:center">匹配任何一个非小写元音字母的字符</td></tr><tr><td style="text-align:center">/[^0-9]/</td><td style="text-align:center">匹配任何一个非数字字符</td></tr></tbody></table><p><strong>特殊字符类</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/./</td><td style="text-align:center">匹配除了换行符以外的其他任意字符</td></tr><tr><td style="text-align:center">/./m</td><td style="text-align:center">在多行模式下，也能匹配换行符</td></tr><tr><td style="text-align:center">/\d/</td><td style="text-align:center">匹配一个数字，等同于 /[0-9]/</td></tr><tr><td style="text-align:center">/\D/</td><td style="text-align:center">匹配一个非数字，等同于 /[^0-9]/</td></tr><tr><td style="text-align:center">/\s/</td><td style="text-align:center">匹配一个空白字符，等同于 /[ \t\r\n\f]/</td></tr><tr><td style="text-align:center">/\S/</td><td style="text-align:center">匹配一个非空白字符，等同于 /[^ \t\r\n\f]/</td></tr><tr><td style="text-align:center">/\w/</td><td style="text-align:center">匹配一个单词字符，等同于 /[A-Za-z0-9_]/</td></tr><tr><td style="text-align:center">/\W/</td><td style="text-align:center">匹配一个非单词字符，等同于 /[^A-Za-z0-9_]/</td></tr></tbody></table><p><strong>重复</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/ruby?/</td><td style="text-align:center">匹配 “rub” 或 “ruby”。其中，y 是可有可无的。</td></tr><tr><td style="text-align:center">/ruby*/</td><td style="text-align:center">匹配 “rub” 加上 0 个或多个的 y。</td></tr><tr><td style="text-align:center">/ruby+/</td><td style="text-align:center">匹配 “rub” 加上 1 个或多个的 y。</td></tr><tr><td style="text-align:center">/\d{3}/</td><td style="text-align:center">刚好匹配 3 个数字。</td></tr><tr><td style="text-align:center">/\d{3,}/</td><td style="text-align:center">匹配 3 个或多个数字。</td></tr><tr><td style="text-align:center">/\d{3,5}/</td><td style="text-align:center">匹配 3 个、4 个或 5 个数字。</td></tr></tbody></table><p><strong>非贪婪重复</strong><br>这会匹配最小次数的重复。</p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/&lt;.*&gt;/</td><td style="text-align:center">贪婪重复：匹配 “<ruby>perl&gt;”</ruby></td></tr><tr><td style="text-align:center">/&lt;.*?&gt;/</td><td style="text-align:center">非贪婪重复：匹配 “<ruby>perl&gt;” 中的 “<ruby>“</ruby></ruby></td></tr></tbody></table><p><strong>通过圆括号进行分组</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/\D\d+/</td><td style="text-align:center">无分组： + 重复 \d</td></tr><tr><td style="text-align:center">/(\D\d)+/</td><td style="text-align:center">分组： + 重复 \D\d 对</td></tr><tr><td style="text-align:center">/([Rr]uby(, )?)+/</td><td style="text-align:center">匹配 “Ruby”、”Ruby, ruby, ruby”，等等</td></tr></tbody></table><p><strong>反向引用</strong><br>这会再次匹配之前匹配过的分组。</p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/([Rr])uby&amp;\1ails/</td><td style="text-align:center">匹配 ruby&amp;rails 或 Ruby&amp;Rails</td></tr><tr><td style="text-align:center">/([‘“])(?:(?!\1).)*\1/</td><td style="text-align:center">单引号或双引号字符串。\1 匹配第一个分组所匹配的字符，\2 匹配第二个分组所匹配的字符，依此类推。</td></tr></tbody></table><p><strong>替换</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/ruby</td><td style="text-align:center">rube/</td><td>匹配 “ruby” 或 “rube”</td></tr><tr><td style="text-align:center">/rub(y</td><td style="text-align:center">le))/</td><td>匹配 “ruby” 或 “ruble”</td></tr><tr><td style="text-align:center">/ruby(!+</td><td style="text-align:center">\?)/</td><td>“ruby” 后跟一个或多个 ! 或者跟一个 ?</td></tr></tbody></table><p><strong>锚</strong><br>这需要指定匹配位置。</p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/^Ruby/</td><td style="text-align:center">匹配以 “Ruby” 开头的字符串或行</td></tr><tr><td style="text-align:center">/Ruby$/</td><td style="text-align:center">匹    匹配以 “Ruby” 结尾的字符串或行</td></tr><tr><td style="text-align:center">/\ARuby/</td><td style="text-align:center">匹匹配以 “Ruby” 开头的字符串</td></tr><tr><td style="text-align:center">/Ruby\Z/</td><td style="text-align:center">匹匹配以 “Ruby” 结尾的字符串</td></tr><tr><td style="text-align:center">/\bRuby\b/</td><td style="text-align:center">匹匹配单词边界的 “Ruby”</td></tr><tr><td style="text-align:center">/\brub\B/</td><td style="text-align:center">匹\B 是非单词边界：匹配 “rube” 和 “ruby” 中的 “rub”，但不匹配单独的 “rub”</td></tr><tr><td style="text-align:center">/Ruby(?=!)/</td><td style="text-align:center">匹如果 “Ruby” 后跟着一个感叹号，则匹配 “Ruby”</td></tr><tr><td style="text-align:center">/Ruby(?!!)/</td><td style="text-align:center">匹如果 “Ruby” 后没有跟着一个感叹号，则匹配 “Ruby”</td></tr></tbody></table><p><strong>括号的特殊语法</strong></p><table><thead><tr><th style="text-align:center">实例</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">/R(?#comment)/</td><td style="text-align:center">匹配 “R”。所有剩余的字符都是注释。</td></tr><tr><td style="text-align:center">/R(?i)uby/</td><td style="text-align:center">当匹配 “uby” 时不区分大小写。</td></tr><tr><td style="text-align:center">/R(?i:uby)/</td><td style="text-align:center">与上面相同。</td></tr><tr><td style="text-align:center">/rub(?:y&#166;    le))/</td><td style="text-align:center">只分组，不进行 \1 反向引用</td></tr></tbody></table><p><strong>搜索和替换</strong></p><p>sub 和 gsub 及它们的替代变量 sub! 和 gsub! 是使用正则表达式时重要的字符串方法。</p><p>所有这些方法都是使用正则表达式模式执行搜索与替换操作。sub 和 sub! 替换模式的第一次出现，gsub 和 gsub! 替换模式的所有出现。</p><p>sub 和 gsub 返回一个新的字符串，保持原始的字符串不被修改，而 sub! 和 gsub! 则会修改它们调用的字符串。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-phone = &quot;138-3453-1111 #这是一个电话号码&quot;# 删除 Ruby 的注释phone = phone.sub!(/#.*$/, &quot;&quot;)   puts &quot;电话号码 : #{phone}&quot;# 移除数字以外的其他字符phone = phone.gsub!(/\D/, &quot;&quot;)    puts &quot;电话号码 : #{phone}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>电话号码 : 138-3453-1111<br>电话号码 : 13834531111</p></blockquote></div></div><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-text = &quot;rails 是 rails,  Ruby on Rails 非常好的 Ruby 框架&quot;# 把所有的 &quot;rails&quot; 改为 &quot;Rails&quot;text.gsub!(&quot;rails&quot;, &quot;Rails&quot;)# 把所有的单词 &quot;Rails&quot; 都改成首字母大写text.gsub!(/\brails\b/, &quot;Rails&quot;)puts &quot;#{text}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Rails 是 Rails,  Ruby on Rails 非常好的 Ruby 框架</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby thread</title>
      <link href="/2019/09/09/ruby-26/"/>
      <url>/2019/09/09/ruby-26/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-多线程"><a href="#Ruby-多线程" class="headerlink" title="Ruby 多线程"></a>Ruby 多线程</h3><p>每个正在系统上运行的程序都是一个进程。每个进程包含一到多个线程。</p><p>线程是程序中一个单一的顺序控制流程，在单个程序中同时运行多个线程完成不同的工作,称为多线程。</p><p>Ruby 中我们可以通过 Thread 类来创建多线程，Ruby的线程是一个轻量级的，可以以高效的方式来实现并行的代码。</p><h4 id="创建-Ruby-线程"><a href="#创建-Ruby-线程" class="headerlink" title="创建 Ruby 线程"></a>创建 Ruby 线程</h4><p>要启动一个新的线程，只需要调用 Thread.new 即可:</p><pre><code>#线程 #1 代码部分Thread.new {  # 线程 #2 执行代码}</code></pre><p>线程 #1 执行代码<br><strong>实例</strong><br>以下实例展示了如何在Ruby程序中使用多线程：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubydef func1   i=0   while i&lt;=2      puts &quot;func1 at: #{Time.now}&quot;      sleep(2)      i=i+1   endenddef func2   j=0   while j&lt;=2      puts &quot;func2 at: #{Time.now}&quot;      sleep(1)      j=j+1   endendputs &quot;Started At #{Time.now}&quot;t1=Thread.new{func1()}t2=Thread.new{func2()}t1.joint2.joinputs &quot;End at #{Time.now}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>Started At Wed May 14 08:21:54 -0700 2014<br>func1 at: Wed May 14 08:21:54 -0700 2014<br>func2 at: Wed May 14 08:21:54 -0700 2014<br>func2 at: Wed May 14 08:21:55 -0700 2014<br>func1 at: Wed May 14 08:21:56 -0700 2014<br>func2 at: Wed May 14 08:21:56 -0700 2014<br>func1 at: Wed May 14 08:21:58 -0700 2014<br>End at Wed May 14 08:22:00 -0700 2014</p></div></div><h4 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h4><ul><li>线程的创建可以使用Thread.new,同样可以以同样的语法使用Thread.start 或者Thread.fork这三个方法来创建线程。</li><li>创建线程后无需启动，线程会自动执行。</li><li>Thread 类定义了一些方法来操控线程。线程执行Thread.new中的代码块。</li><li>线程代码块中最后一个语句是线程的值，可以通过线程的方法来调用，如果线程执行完毕，则返回线程值，否则不返回值直到线程执行完毕。</li><li>Thread.current 方法返回表示当前线程的对象。 Thread.main 方法返回主线程。</li><li>通过 Thread.Join 方法来执行线程，这个方法会挂起主线程，直到当前线程执行完毕。</li></ul><h4 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h4><p>线程有5种状态：</p><table><thead><tr><th style="text-align:center">线程状态</th><th style="text-align:center">返回值</th></tr></thead><tbody><tr><td style="text-align:center">可执行</td><td style="text-align:center">run</td></tr><tr><td style="text-align:center">睡眠</td><td style="text-align:center">Sleeping</td></tr><tr><td style="text-align:center">退出</td><td style="text-align:center">aborting</td></tr><tr><td style="text-align:center">正常终止</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">发生异常终止</td><td style="text-align:center">nil</td></tr></tbody></table><h4 id="线程和异常"><a href="#线程和异常" class="headerlink" title="线程和异常"></a>线程和异常</h4><p>当某线程发生异常，且没有被rescue捕捉到时，该线程通常会被无警告地终止。但是，若有其它线程因为Thread#join的关系一直等待该线程的话，则等待的线程同样会被引发相同的异常。</p><pre><code>begin  t = Thread.new do    Thread.pass    # 主线程确实在等join    raise &quot;unhandled exception&quot;  end  t.joinrescue  p $!  # =&gt; &quot;unhandled exception&quot;end</code></pre><p>使用下列3个方法，就可以让解释器在某个线程因异常而终止时中断运行。</p><ul><li>启动脚本时指定-d选项，并以调试模时运行。</li><li>用Thread.abort_on_exception设置标志。</li><li>使用Thread#abort_on_exception对指定的线程设定标志。</li></ul><p>当使用上述3种方法之一后，整个解释器就会被中断。</p><pre><code>t = Thread.new { ... }t.abort_on_exception = true</code></pre><h4 id="线程同步控制"><a href="#线程同步控制" class="headerlink" title="线程同步控制"></a>线程同步控制</h4><p>在Ruby中，提供三种实现同步的方式，分别是：</p><ul><li>通过Mutex类实现线程同步</li><li>监管数据交接的Queue类实现线程同步</li><li>使用ConditionVariable实现同步控制</li></ul><p><strong>通过Mutex类实现线程同步</strong><br>通过Mutex类实现线程同步控制，如果在多个线程钟同时需要一个程序变量，可以将这个变量部分使用lock锁定。 代码如下：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyrequire &quot;thread&quot;puts &quot;Synchronize Thread&quot;@num=200@mutex=Mutex.newdef buyTicket(num)     @mutex.lock          if @num&gt;=num               @num=@num-num               puts &quot;you have successfully bought #{num} tickets&quot;          else               puts &quot;sorry,no enough tickets&quot;          end     @mutex.unlockendticket1=Thread.new 10 do     10.times do |value|     ticketNum=15     buyTicket(ticketNum)     sleep 0.01     endendticket2=Thread.new 10 do     10.times do |value|     ticketNum=20     buyTicket(ticketNum)     sleep 0.01     endendsleep 1ticket1.jointicket2.join</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Synchronize Thread<br>you have successfully bought 15 tickets<br>you have successfully bought 20 tickets<br>you have successfully bought 15 tickets<br>you have successfully bought 20 tickets<br>you have successfully bought 15 tickets<br>you have successfully bought 20 tickets<br>you have successfully bought 15 tickets<br>you have successfully bought 20 tickets<br>you have successfully bought 15 tickets<br>you have successfully bought 20 tickets<br>you have successfully bought 15 tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets<br>sorry,no enough tickets</p></blockquote></div></div><p>除了使用lock锁定变量，还可以使用try_lock锁定变量，还可以使用Mutex.synchronize同步对某一个变量的访问。</p><p><strong>监管数据交接的Queue类实现线程同步</strong><br>Queue类就是表示一个支持线程的队列，能够同步对队列末尾进行访问。不同的线程可以使用统一个对类，但是不用担心这个队列中的数据是否能够同步，另外使用SizedQueue类能够限制队列的长度</p><p>SizedQueue类能够非常便捷的帮助我们开发线程同步的应用程序，应为只要加入到这个队列中，就不用关心线程的同步问题。</p><p>经典的生产者消费者问题：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyrequire &quot;thread&quot;puts &quot;SizedQuee Test&quot;queue = Queue.newproducer = Thread.new do     10.times do |i|          sleep rand(i) # 让线程睡眠一段时间          queue &lt;&lt; i          puts &quot;#{i} produced&quot;     endendconsumer = Thread.new do     10.times do |i|          value = queue.pop          sleep rand(i/2)          puts &quot;consumed #{value}&quot;     endendconsumer.join</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>SizedQuee Test<br>0 produced<br>1 produced<br>consumed 0<br>2 produced<br>consumed 1<br>consumed 2<br>3 produced<br>consumed 34 produced</p></blockquote><p>consumed 4<br>5 produced<br>consumed 5<br>6 produced<br>consumed 6<br>7 produced<br>consumed 7<br>8 produced<br>9 produced<br>consumed 8<br>consumed 9</p></div></div><h4 id="线程变量"><a href="#线程变量" class="headerlink" title="线程变量"></a>线程变量</h4><p>线程可以有其私有变量，线程的私有变量在线程创建的时候写入线程。可以被线程范围内使用，但是不能被线程外部进行共享。</p><p>但是有时候，线程的局部变量需要别别的线程或者主线程访问怎么办？ruby当中提供了允许通过名字来创建线程变量，类似的把线程看做hash式的散列表。通过[]=写入并通过[]读出数据。我们来看一下下面的代码：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubycount = 0arr = []10.times do |i|   arr[i] = Thread.new {      sleep(rand(0)/10.0)      Thread.current[&quot;mycount&quot;] = count      count += 1   }endarr.each {|t| t.join; print t[&quot;mycount&quot;], &quot;, &quot; }puts &quot;count = #{count}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>8, 0, 3, 7, 2, 1, 6, 5, 4, 9, count = 10</p></blockquote></div></div><p>主线程等待子线程执行完成，然后分别输出每个值。 。</p><h4 id="线程优先级"><a href="#线程优先级" class="headerlink" title="线程优先级"></a>线程优先级</h4><p>线程的优先级是影响线程的调度的主要因素。其他因素包括占用CPU的执行时间长短，线程分组调度等等。</p><p>可以使用 Thread.priority 方法得到线程的优先级和使用 Thread.priority= 方法来调整线程的优先级。</p><p>线程的优先级默认为 0 。 优先级较高的执行的要快。</p><p>一个 Thread 可以访问自己作用域内的所有数据，但如果有需要在某个线程内访问其他线程的数据应该怎么做呢？ Thread 类提供了线程数据互相访问的方法，你可以简单的把一个线程作为一个 Hash 表，可以在任何线程内使用 []= 写入数据，使用 [] 读出数据。</p><pre><code>athr = Thread.new { Thread.current[&quot;name&quot;] = &quot;Thread A&quot;; Thread.stop }bthr = Thread.new { Thread.current[&quot;name&quot;] = &quot;Thread B&quot;; Thread.stop }cthr = Thread.new { Thread.current[&quot;name&quot;] = &quot;Thread C&quot;; Thread.stop }Thread.list.each {|x| puts &quot;#{x.inspect}: #{x[&quot;name&quot;]}&quot; }</code></pre><p>可以看到，把线程作为一个 Hash 表，使用 [] 和 []= 方法，我们实现了线程之间的数据共享。</p><h4 id="线程互斥"><a href="#线程互斥" class="headerlink" title="线程互斥"></a>线程互斥</h4><p>Mutex(Mutal Exclusion = 互斥锁)是一种用于多线程编程中，防止两条线程同时对同一公共资源（比如全局变量）进行读写的机制。</p><p>不使用Mutex的实例<br><strong>实例</strong></p><pre><code>#!/usr/bin/rubyrequire &#39;thread&#39;count1 = count2 = 0difference = 0counter = Thread.new do   loop do      count1 += 1      count2 += 1   endendspy = Thread.new do   loop do      difference += (count1 - count2).abs   endendsleep 1puts &quot;count1 :  #{count1}&quot;puts &quot;count2 :  #{count2}&quot;puts &quot;difference : #{difference}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>count1 :  9712487<br>count2 :  12501239<br>difference : 0</p></blockquote></div></div><h4 id="使用Mutex的实例"><a href="#使用Mutex的实例" class="headerlink" title="使用Mutex的实例"></a>使用Mutex的实例</h4><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyrequire &#39;thread&#39;mutex = Mutex.newcount1 = count2 = 0difference = 0counter = Thread.new do   loop do      mutex.synchronize do         count1 += 1         count2 += 1      end    endendspy = Thread.new do   loop do       mutex.synchronize do          difference += (count1 - count2).abs       end   endendsleep 1mutex.lockputs &quot;count1 :  #{count1}&quot;puts &quot;count2 :  #{count2}&quot;puts &quot;difference : #{difference}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>count1 :  1336406<br>count2 :  1336406<br>difference : 0</p></div></div><h4 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h4><p>两个以上的运算单元，双方都在等待对方停止运行，以获取系统资源，但是没有一方提前退出时，这种状况，就称为死锁。</p><p>例如，一个进程 p1占用了显示器，同时又必须使用打印机，而打印机被进程p2占用，p2又必须使用显示器，这样就形成了死锁。</p><p>当我们在使用 Mutex 对象时需要注意线程死锁。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyrequire &#39;thread&#39;mutex = Mutex.newcv = ConditionVariable.newa = Thread.new {   mutex.synchronize {      puts &quot;A: I have critical section, but will wait for cv&quot;      cv.wait(mutex)      puts &quot;A: I have critical section again! I rule!&quot;   }}puts &quot;(Later, back at the ranch...)&quot;b = Thread.new {   mutex.synchronize {      puts &quot;B: Now I am critical, but am done with cv&quot;      cv.signal      puts &quot;B: I am still critical, finishing up&quot;   }}a.joinb.join</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>A: I have critical section, but will wait for cv<br>(Later, back at the ranch…)<br>B: Now I am critical, but am done with cv<br>B: I am still critical, finishing up<br>A: I have critical section again! I rule!</p></blockquote></div></div><h4 id="线程类方法"><a href="#线程类方法" class="headerlink" title="线程类方法"></a>线程类方法</h4><p>完整的 Thread（线程） 类方法如下：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Thread.abort_on_exception若其值为真的话，一旦某线程因异常而终止时，整个解释器就会被中断。它的默认值是假，也就是说，在通常情况下，若某线程发生异常且该异常未被Thread#join等检测到时，该线程会被无警告地终止。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Thread.abort_on_exception= 如果设置为 true, 一旦某线程因异常而终止时，整个解释器就会被中断。返回新的状态</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Thread.critical 返回布尔值。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Thread.critical=当其值为true时，将不会进行线程切换。若当前线程挂起(stop)或有信号(signal)干预时，其值将自动变为false。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Thread.current 返回当前运行中的线程(当前线程)。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">Thread.exit 终止当前线程的运行。返回当前线程。若当前线程是唯一的一个线程时，将使用exit(0)来终止它的运行。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Thread.fork { block } 与 Thread.new 一样生成线程。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">Thread.kill( aThread ) 终止线程的运行.</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">Thread.list 返回处于运行状态或挂起状态的活线程的数组。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">Thread.main 返回主线程。</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">Thread.new( [ arg ]* ) {</td><td>args</td><td>block } 生成线程,并开始执行。数会被原封不动地传递给块. 这就可以在启动线程的同时,将值传递给该线程所固有的局部变量。</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">Thread.pass 将运行权交给其他线程. 它不会改变运行中的线程的状态,而是将控制权交给其他可运行的线程(显式的线程调度)。</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">Thread.start( [ args ]* ) {</td><td>args</td><td>block } 生成线程,并开始执行。数会被原封不动地传递给块. 这就可以在启动线程的同时,将值传递给该线程所固有的局部变量。</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">Thread.stop 将当前线程挂起,直到其他线程使用run方法再次唤醒该线程。</td></tr></tbody></table><h4 id="线程实例化方法"><a href="#线程实例化方法" class="headerlink" title="线程实例化方法"></a>线程实例化方法</h4><p>以下实例调用了线程实例化方法 join：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubythr = Thread.new do   # 实例化   puts &quot;In second thread&quot;   raise &quot;Raise exception&quot;endthr.join   # 调用实例化方法 join</code></pre><p>以下是完整实例化方法列表：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">thr[ name ] 取出线程内与name相对应的固有数据。 name可以是字符串或符号。 若没有与name相对应的数据时, 返回nil。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">thr[ name ] = 设置线程内name相对应的固有数据的值， name可以是字符串或符号。 若设为nil时, 将删除该线程内对应数据。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">thr.abort_on_exception 返回布尔值。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">thr.abort_on_exception= 若其值为true的话，一旦某线程因异常而终止时，整个解释器就会被中断。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">thr.alive? 若线程是”活”的,就返回true。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">thr.exit 终止线程的运行。返回self。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">thr.join 挂起当前线程,直到self线程终止运行为止. 若self因异常而终止时, 将会当前线程引发同样的异常。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">thr.key? 若与name相对应的线程固有数据已经被定义的话,就返回true</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">thr.kill 类似于 Thread.exit 。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">thr.priority 返回线程的优先度. 优先度的默认值为0. 该值越大则优先度越高.</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">thr.priority=设定线程的优先度. 也可以将其设定为负数.</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">thr.raise( anException )在该线程内强行引发异常.</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">thr.run 重新启动被挂起(stop)的线程. 与wakeup不同的是,它将立即进行线程的切换. 若对死进程使用该方法时, 将引发ThreadError异常.</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">thr.safe_level 返回self 的安全等级. 当前线程的safe_level与$SAFE相同.</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">thr.status 使用字符串”run”、”sleep”或”aborting” 来表示活线程的状态. 若某线程是正常终止的话,就返回false. 若因异常而终止的话,就返回nil。</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">thr.stop? 若线程处于终止状态(dead)或被挂起(stop)时,返回true.</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">thr.value 一直等到self线程终止运行(等同于join)后,返回该线程的块的返回值. 若在线程的运行过程中发生了异常, 就会再次引发该异常.</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">thr.wakeup 把被挂起(stop)的线程的状态改为可执行状态(run), 若对死线程执行该方法时,将会引发ThreadError异常。</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 面向对象</title>
      <link href="/2019/09/09/ruby-24/"/>
      <url>/2019/09/09/ruby-24/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-面向对象"><a href="#Ruby-面向对象" class="headerlink" title="Ruby 面向对象"></a>Ruby 面向对象</h3><p>Ruby 是纯面向对象的语言，Ruby 中的一切都是以对象的形式出现。Ruby 中的每个值都是一个对象，即使是最原始的东西：字符串、数字，甚至连 true 和 false 都是对象。类本身也是一个对象，是 Class 类的一个实例。本章将向您讲解所有与 Ruby 面向对象相关的主要功能。</p><p>类用于指定对象的形式，它结合了数据表示法和方法，把数据整理成一个整齐的包。类中的数据和方法被称为类的成员。</p><h4 id="Ruby-类定义"><a href="#Ruby-类定义" class="headerlink" title="Ruby 类定义"></a>Ruby 类定义</h4><p>当您定义一个类时，您实际是定义了一个数据类型的蓝图。这实际上并没有定义任何的数据，而是定义了类的名称意味着什么，也就是说，定义了类的对象将由什么组成，以及在该对象上能执行什么操作。</p><p>类定义以关键字 class 开始，后跟类名称，最后以一个 end 进行分隔表示终止该类定义。例如，我们使用关键字 class 来定义 Box 类，如下所示：</p><pre><code>class Box   codeend</code></pre><p>按照惯例，名称必须以大写字母开头，如果包含多个单词，每个单词首字母大写，但此间没有分隔符（例如：CamelCase）。</p><h4 id="定义-Ruby-对象"><a href="#定义-Ruby-对象" class="headerlink" title="定义 Ruby 对象"></a>定义 Ruby 对象</h4><p>类提供了对象的蓝图，所以基本上，对象是根据类进行创建的。我们使用 new 关键字声明类的对象。下面的语句声明了类 Box 的两个对象：</p><pre><code>box1 = Box.newbox2 = Box.new</code></pre><h4 id="initialize-方法"><a href="#initialize-方法" class="headerlink" title="initialize 方法"></a>initialize 方法</h4><p>initialize 方法是一个标准的 Ruby 类方法，是类的构造函数，与其他面向对象编程语言中的 constructor 工作原理类似。当您想要在创建对象的同时初始化一些类变量，initialize 方法就派上用场了。该方法带有一系列参数，与其他 Ruby 方法一样，使用该方法时，必须在前面放置 def 关键字，如下所示：</p><pre><code>class Box   def initialize(w,h)      @width, @height = w, h   endend</code></pre><h4 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h4><p>实例变量是类属性，它们在使用类创建对象时就变成对象的属性。每个对象的属性是单独赋值的，和其他对象之间不共享值。在类的内部，是使用 @ 运算符访问这些属性，在类的外部，则是使用称为访问器方法的公共方法进行访问。下面我们以上面定义的类 Box 为实例，把 @width 和 @height 作为类 Box 的实例变量。</p><pre><code>class Box   def initialize(w,h)      # 给实例变量赋值      @width, @height = w, h   endend</code></pre><h4 id="访问器-getter-amp-设置器-setter-方法"><a href="#访问器-getter-amp-设置器-setter-方法" class="headerlink" title="访问器(getter) &amp; 设置器(setter)方法"></a>访问器(getter) &amp; 设置器(setter)方法</h4><p>为了在类的外部读取类中已定义的变量，我们可以通过定义访问器(getter)方法来访问。下面的实例演示了访问器方法的用法：</p><p>实例</p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造函数   def initialize(w,h)      @width, @height = w, h   end   # 访问器方法   def printWidth      @width   end   def printHeight      @height   endend# 创建对象，初始化盒子的高度与宽度box = Box.new(10, 20)# 使用访问器方法x = box.printWidth()y = box.printHeight()puts &quot;盒子宽度 : #{x}&quot;puts &quot;盒子高度 : #{y}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>盒子宽度 : 10<br>盒子高度 : 20</p></blockquote></div></div><p>与用于访问变量值的访问器方法类似，Ruby 提供了一种在类的外部将参数传入类中已定义的变量，也就是所谓的设置器方法，定义如下：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 访问器方法   def getWidth      @width   end   def getHeight      @height   end   # 设置器方法   def setWidth=(value)      @width = value   end   def setHeight=(value)      @height = value   endend# 创建对象box = Box.new(10, 20)# 使用设置器方法box.setWidth = 30box.setHeight = 50# 使用访问器方法x = box.getWidth()y = box.getHeight()puts &quot;盒子宽度 : #{x}&quot;puts &quot;盒子高度 : #{y}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>盒子宽度 : 30<br>盒子高度 : 50</p></blockquote></div></div><p><code>由于两种方法非常常用，Ruby 定义了 attr_accessor :variable_name、attr_reader :variable_name、attr_writer :variable_name 三种属性声明方法。其中：accessor=reader+writer。 同时注意：变量名前一定要带 : ，变量名之间要用 , 分割。</code></p><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><p>实例方法的定义与其他方法的定义一样，都是使用 def 关键字，但它们只能通过类实例来使用，如下面实例所示。它们的功能不限于访问实例变量，也能按照您的需求做更多其他的任务。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法   def getArea      @width * @height   endend# 创建对象box = Box.new(10, 20)# 调用实例方法a = box.getArea()puts &quot;Area of the box is : #{a}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Area of the box is : 200</p></blockquote></div></div><h4 id="类方法-amp-类变量"><a href="#类方法-amp-类变量" class="headerlink" title="类方法 &amp; 类变量"></a>类方法 &amp; 类变量</h4><p><strong>类变量</strong>是在类的所有实例中共享的变量。换句话说，类变量的实例可以被所有的对象实例访问。类变量以两个 @ 字符（@@）作为前缀，类变量必须在类定义中被初始化，如下面实例所示。</p><p><strong>类方法</strong>使用 <strong>def self.methodname()</strong> 定义，类方法以 end 分隔符结尾。类方法可使用带有类名称的 classname.methodname 形式调用，如下面实例所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wclass Box   # 初始化类变量   @@count = 0   def initialize(w,h)      # 给实例变量赋值      @width, @height = w, h      @@count += 1   end   def self.printCount()      puts &quot;Box count is : #@@count&quot;   endend# 创建两个对象box1 = Box.new(10, 20)box2 = Box.new(30, 100)# 调用类方法来输出盒子计数Box.printCount()</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Box count is : 2</p></blockquote></div></div><h4 id="to-s-方法"><a href="#to-s-方法" class="headerlink" title="to_s 方法"></a>to_s 方法</h4><p>您定义的任何类都有一个 to_s 实例方法来返回对象的字符串表示形式。下面是一个简单的实例，根据 width 和 height 表示 Box 对象：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wclass Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 定义 to_s 方法   def to_s      &quot;(w:#@width,h:#@height)&quot;  # 对象的字符串格式   endend# 创建对象box = Box.new(10, 20)# 自动调用 to_s 方法puts &quot;String representation of box is : #{box}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>String representation of box is : (w:10,h:20)</p></blockquote></div></div><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><p>Ruby 为您提供了三个级别的实例方法保护，分别是 <strong>public</strong>、<strong>private</strong> 或 <strong>protected</strong>。Ruby 不在实例和类变量上应用任何访问控制。</p><ul><li>Public 方法： Public 方法可被任意对象调用。默认情况下，方法都是 public 的，除了 initialize 方法总是 private 的。</li><li>Private 方法： Private 方法不能从类外部访问或查看。只有类方法可以访问私有成员。</li><li>Protected 方法： Protected 方法只能被类及其子类的对象调用。访问也只能在类及其子类内部进行。</li></ul><p>下面是一个简单的实例，演示了这三种修饰符的语法：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法默认是 public 的   def getArea      getWidth() * getHeight   end   # 定义 private 的访问器方法   def getWidth      @width   end   def getHeight      @height   end   # make them private   private :getWidth, :getHeight   # 用于输出面积的实例方法   def printArea      @area = getWidth() * getHeight      puts &quot;Big box area is : #@area&quot;   end   # 让实例方法是 protected 的   protected :printAreaend# 创建对象box = Box.new(10, 20)# 调用实例方法a = box.getArea()puts &quot;Area of the box is : #{a}&quot;# 尝试调用 protected 的实例方法box.printArea()</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>Area of the box is : 200<br>test.rb:42: protected method `printArea’ called for #<br>&lt;Box:0xb7f11280 @height=20, @width=10&gt; (NoMethodError)</p></div></div><h4 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h4><p>继承，是面向对象编程中最重要的概念之一。继承允许我们根据另一个类定义一个类，这样使得创建和维护应用程序变得更加容易。</p><p>继承有助于重用代码和快速执行，不幸的是，Ruby 不支持多继承，但是 Ruby 支持 mixins。mixin 就像是多继承的一个特定实现，在多继承中，只有接口部分是可继承的。</p><p>当创建类时，程序员可以直接指定新类继承自某个已有类的成员，这样就不用从头编写新的数据成员和成员函数。这个已有类被称为基类或父类，新类被称为派生类或子类。</p><p>Ruby 也提供了子类化的概念，子类化即继承，下面的实例解释了这个概念。扩展一个类的语法非常简单。只要添加一个 &lt; 字符和父类的名称到类语句中即可。例如，下面定义了类 BigBox 是 Box 的子类：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法   def getArea      @width * @height   endend# 定义子类class BigBox &lt; Box   # 添加一个新的实例方法   def printArea      @area = @width * @height      puts &quot;Big box area is : #@area&quot;   endend# 创建对象box = BigBox.new(10, 20)# 输出面积box.printArea()</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Big box area is : 200</p></blockquote></div></div><h4 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h4><p>虽然您可以在派生类中添加新的功能，但有时您可能想要改变已经在父类中定义的方法的行为。这时您可以保持方法名称不变，重载方法的功能即可，如下面实例所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法   def getArea      @width * @height   endend# 定义子类class BigBox &lt; Box   # 改变已有的 getArea 方法   def getArea      @area = @width * @height      puts &quot;Big box area is : #@area&quot;   endend# 创建对象box = BigBox.new(10, 20)# 使用重载的方法输出面积box.getArea()</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>Big box area is : 200</p></div></div><h4 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h4><p>我们希望使用 + 运算符执行两个 Box 对象的向量加法，使用 * 运算符来把 Box 的 width 和 height 相乘，使用一元运算符 - 对 Box 的 width 和 height 求反。下面是一个带有数学运算符定义的 Box 类版本：</p><pre><code>class Box  def initialize(w,h) # 初始化 width 和 height    @width,@height = w, h  end  def +(other)         # 定义 + 来执行向量加法    Box.new(@width + other.width, @height + other.height)  end  def -@               # 定义一元运算符 - 来对 width 和 height 求反    Box.new(-@width, -@height)  end  def *(scalar)        # 执行标量乘法    Box.new(@width*scalar, @height*scalar)  endend</code></pre><h4 id="冻结对象"><a href="#冻结对象" class="headerlink" title="冻结对象"></a>冻结对象</h4><p>有时候，我们想要防止对象被改变。在 Object 中，freeze 方法可实现这点，它能有效地把一个对象变成一个常量。任何对象都可以通过调用 Object.freeze 进行冻结。冻结对象不能被修改，也就是说，您不能改变它的实例变量。</p><p>您可以使用 Object.frozen? 方法检查一个给定的对象是否已经被冻结。如果对象已被冻结，该方法将返回 true，否则返回一个 false 值。下面的实例解释了这个概念：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 访问器方法   def getWidth      @width   end   def getHeight      @height   end   # 设置器方法   def setWidth=(value)      @width = value   end   def setHeight=(value)      @height = value   endend# 创建对象box = Box.new(10, 20)# 让我们冻结该对象box.freezeif( box.frozen? )   puts &quot;Box object is frozen object&quot;else   puts &quot;Box object is normal object&quot;end# 现在尝试使用设置器方法box.setWidth = 30box.setHeight = 50# 使用访问器方法x = box.getWidth()y = box.getHeight()puts &quot;Width of the box is : #{x}&quot;puts &quot;Height of the box is : #{y}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>Box object is frozen object<br>test.rb:20:in `setWidth=’: can’t modify frozen object (TypeError)<br>        from test.rb:39</p></div></div><h4 id="类常量"><a href="#类常量" class="headerlink" title="类常量"></a>类常量</h4><p>您可以在类的内部定义一个常量，通过把一个直接的数值或字符串值赋给一个变量来定义的，常量的定义不需要使用 @ 或 @@。按照惯例，常量的名称使用大写。</p><p>一旦常量被定义，您就不能改变它的值，您可以在类的内部直接访问常量，就像是访问变量一样，但是如果您想要在类的外部访问常量，那么您必须使用 classname::constant，如下面实例所示。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   BOX_COMPANY = &quot;TATA Inc&quot;   BOXWEIGHT = 10   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法   def getArea      @width * @height   endend# 创建对象box = Box.new(10, 20)# 调用实例方法a = box.getArea()puts &quot;Area of the box is : #{a}&quot;puts Box::BOX_COMPANYputs &quot;Box weight is: #{Box::BOXWEIGHT}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Area of the box is : 200<br>TATA Inc<br>Box weight is: 10</p></blockquote></div></div><p>类常量可被继承，也可像实例方法一样被重载。</p><h4 id="使用-allocate-创建对象"><a href="#使用-allocate-创建对象" class="headerlink" title="使用 allocate 创建对象"></a>使用 allocate 创建对象</h4><p>可能有一种情况，您想要在不调用对象构造器 initialize 的情况下创建对象，即，使用 new 方法创建对象，在这种情况下，您可以调用 allocate 来创建一个未初始化的对象，如下面实例所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# 定义类class Box   attr_accessor :width, :height   # 构造器方法   def initialize(w,h)      @width, @height = w, h   end   # 实例方法   def getArea      @width * @height   endend# 使用 new 创建对象box1 = Box.new(10, 20)# 使用 allocate 创建另一个对象box2 = Box.allocate# 使用 box1 调用实例方法a = box1.getArea()puts &quot;Area of the box is : #{a}&quot;# 使用 box2 调用实例方法a = box2.getArea()puts &quot;Area of the box is : #{a}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Area of the box is : 200<br>test.rb:14: warning: instance variable @width not initialized<br>test.rb:14: warning: instance variable @height not initialized<br>test.rb:14:in <code>getArea&#39;: undefined method</code>*’<br>   for nil:NilClass (NoMethodError) from test.rb:29</p></blockquote></div></div><h4 id="类信息"><a href="#类信息" class="headerlink" title="类信息"></a>类信息</h4><p>Ruby的 self 和 Java 的 this 有相似之处，但又大不相同。Java的方法都是在实例方法中引用，所以this一般都是指向当前对象的。而Ruby的代码逐行执行，所以在不同的上下文(context)self就有了不同的含义。让我们来看看下面的实例：.</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wclass Box   # 输出类信息   puts &quot;Class of self = #{self.class}&quot;   puts &quot;Name of self = #{self.name}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Class of self = Class<br>Name of self = Box</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 异常</title>
      <link href="/2019/09/09/ruby-23/"/>
      <url>/2019/09/09/ruby-23/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-异常"><a href="#Ruby-异常" class="headerlink" title="Ruby 异常"></a>Ruby 异常</h3><p>异常和执行总是被联系在一起。如果您打开一个不存在的文件，且没有恰当地处理这种情况，那么您的程序则被认为是低质量的。</p><p>如果异常发生，则程序停止。异常用于处理各种类型的错误，这些错误可能在程序执行期间发生，所以要采取适当的行动，而不至于让程序完全停止。</p><p>Ruby 提供了一个完美的处理异常的机制。我们可以在 begin/end 块中附上可能抛出异常的代码，并使用 rescue 子句告诉 Ruby 完美要处理的异常类型。</p><p><strong>语法</strong></p><pre><code>begin #开始 raise.. #抛出异常rescue [ExceptionType = StandardException] #捕获指定类型的异常默认值是 StandardException $! #表示异常信息 $@ #表示异常出现的代码位置else #其余异常 ..ensure #不管有没有异常，进入该代码块end #结束</code></pre><p>从 begin 到 rescue 中的一切是受保护的。如果代码块执行期间发生了异常，控制会传到 rescue 和 end 之间的块。</p><p>对于 begin 块中的每个 rescue 子句，Ruby 把抛出的异常与每个参数进行轮流比较。如果 rescue 子句中命名的异常与当前抛出的异常类型相同，或者是该异常的父类，则匹配成功。</p><p>如果异常不匹配所有指定的错误类型，我们可以在所有的 rescue 子句后使用一个 else 子句。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubybegin   file = open(&quot;/unexistant_file&quot;)   if file      puts &quot;File opened successfully&quot;   endrescue      file = STDINendprint file, &quot;==&quot;, STDIN, &quot;\n&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p><code>#&lt;IO:0xb7d16f84&gt;==#&lt;IO:0xb7d16f84&gt;</code></p></div></div><h4 id="使用-retry-语句"><a href="#使用-retry-语句" class="headerlink" title="使用 retry 语句"></a>使用 retry 语句</h4><p>您可以使用 rescue 块捕获异常，然后使用 retry 语句从开头开始执行 begin 块。</p><p><strong>语法</strong></p><pre><code>begin    # 这段代码抛出的异常将被下面的 rescue 子句捕获rescue    # 这个块将捕获所有类型的异常    retry  # 这将把控制移到 begin 的开头end</code></pre><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubybegin   file = open(&quot;/unexistant_file&quot;)   if file      puts &quot;File opened successfully&quot;   endrescue   fname = &quot;existant_file&quot;   retryend</code></pre><p>以下是处理流程：</p><p>打开时发生异常。</p><ul><li>跳到 rescue。fname 被重新赋值。</li><li>通过 retry 跳到 begin 的开头。</li><li>这次文件成功打开。</li><li>继续基本的过程。</li></ul><p><strong>注意：</strong>如果被重新命名的文件不存在，本实例代码会无限尝试。所以异常处理时，谨慎使用 retry。</p><h4 id="使用-raise-语句"><a href="#使用-raise-语句" class="headerlink" title="使用 raise 语句"></a>使用 raise 语句</h4><p>您可以使用 raise 语句抛出异常。下面的方法在调用时抛出异常。它的第二个消息将被输出。</p><p><strong>语法</strong></p><pre><code>raise </code></pre><p>或</p><pre><code>raise &quot;Error Message&quot; </code></pre><p>或</p><pre><code>raise ExceptionType, &quot;Error Message&quot;</code></pre><p>或</p><pre><code>raise ExceptionType, &quot;Error Message&quot; condition</code></pre><p>第一种形式简单地重新抛出当前异常（如果没有当前异常则抛出一个 RuntimeError）。这用在传入异常之前需要解释异常的异常处理程序中。</p><p>第二种形式创建一个新的 RuntimeError 异常，设置它的消息为给定的字符串。该异常之后抛出到调用堆栈。</p><p>第三种形式使用第一个参数创建一个异常，然后设置相关的消息为第二个参数。</p><p>第四种形式与第三种形式类似，您可以添加任何额外的条件语句（比如 unless）来抛出异常。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubybegin      puts &#39;I am before the raise.&#39;      raise &#39;An error has occurred.&#39;      puts &#39;I am after the raise.&#39;  rescue      puts &#39;I am rescued.&#39;  end  puts &#39;I am after the begin block.&#39;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>I am before the raise.<br>I am rescued.<br>I am after the begin block.  </p></blockquote></div></div><p>另一个演示 raise 用法的实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubybegin    raise &#39;A test exception.&#39;  rescue Exception =&gt; e    puts e.message    puts e.backtrace.inspect  end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>A test exception.<br>[“main.rb:4”]</p></blockquote></div></div><h4 id="使用-ensure-语句"><a href="#使用-ensure-语句" class="headerlink" title="使用 ensure 语句"></a>使用 ensure 语句</h4><p>有时候，无论是否抛出异常，您需要保证一些处理在代码块结束时完成。例如，您可能在进入时打开了一个文件，当您退出块时，您需要确保关闭文件。</p><p>ensure 子句做的就是这个。ensure 放在最后一个 rescue 子句后，并包含一个块终止时总是执行的代码块。它与块是否正常退出、是否抛出并处理异常、是否因一个未捕获的异常而终止，这些都没关系，ensure 块始终都会运行。</p><p><strong>语法</strong></p><pre><code>begin    #.. 过程   #.. 抛出异常rescue    #.. 处理错误 ensure    #.. 最后确保执行   #.. 这总是会执行end</code></pre><p><strong>实例</strong></p><pre><code>begin  raise &#39;A test exception.&#39;rescue Exception =&gt; e  puts e.message  puts e.backtrace.inspectensure  puts &quot;Ensuring execution&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>A test exception.<br>[“main.rb:4”]<br>Ensuring execution</p></blockquote></div></div><h4 id="使用-else-语句"><a href="#使用-else-语句" class="headerlink" title="使用 else 语句"></a>使用 else 语句</h4><p>如果提供了 else 子句，它一般是放置在 rescue 子句之后，任意 ensure 之前。</p><p>else 子句的主体只有在代码主体没有抛出异常时执行。</p><p><strong>语法</strong></p><pre><code>begin    #.. 过程    #.. 抛出异常rescue    #.. 处理错误else   #.. 如果没有异常则执行ensure    #.. 最后确保执行   #.. 这总是会执行end</code></pre><p><strong>实例</strong></p><pre><code>begin # 抛出 &#39;A test exception.&#39; puts &quot;I&#39;m not raising exception&quot;rescue Exception =&gt; e  puts e.message  puts e.backtrace.inspectelse   puts &quot;Congratulations-- no errors!&quot;ensure  puts &quot;Ensuring execution&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>I’m not raising exception<br>Congratulations– no errors!<br>Ensuring execution</p></blockquote></div></div><p>使用 $! 变量可以捕获抛出的错误消息。</p><h4 id="Catch-和-Throw"><a href="#Catch-和-Throw" class="headerlink" title="Catch 和 Throw"></a>Catch 和 Throw</h4><p>raise 和 rescue 的异常机制能在发生错误时放弃执行，有时候需要在正常处理时跳出一些深层嵌套的结构。此时 catch 和 throw 就派上用场了。</p><p>catch 定义了一个使用给定的名称（可以是 Symbol 或 String）作为标签的块。块会正常执行直到遇到一个 throw。</p><p><strong>语法</strong></p><pre><code>throw :lablename#.. 这不会被执行catch :lablename do#.. 在遇到一个 throw 后匹配将被执行的 catchend</code></pre><p>或</p><pre><code>throw :lablename condition#.. 这不会被执行catch :lablename do#.. 在遇到一个 throw 后匹配将被执行的 catchend</code></pre><p><strong>实例</strong></p><p>下面的实例中，如果用户键入 ‘!’ 回应任何提示，使用一个 throw 终止与用户的交互。</p><p><strong>实例</strong></p><pre><code>def promptAndGet(prompt)   print prompt   res = readline.chomp   throw :quitRequested if res == &quot;!&quot;   return resendcatch :quitRequested do   name = promptAndGet(&quot;Name: &quot;)   age = promptAndGet(&quot;Age: &quot;)   sex = promptAndGet(&quot;Sex: &quot;)   # ..   # 处理信息endpromptAndGet(&quot;Name:&quot;)</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Name: Ruby on Rails<br>Age: 3<br>Sex: !<br>Name:Just Ruby</p></blockquote></div></div><h4 id="类-Exception"><a href="#类-Exception" class="headerlink" title="类 Exception"></a>类 Exception</h4><p>Ruby 的标准类和模块抛出异常。所有的异常类组成一个层次，包括顶部的 Exception 类在内。下一层是七种不同的类型：</p><ul><li>Interrupt</li><li>NoMemoryError</li><li>SignalException</li><li>ScriptError</li><li>StandardError</li><li>SystemExit</li></ul><p>Fatal 是该层中另一种异常，但是 Ruby 解释器只在内部使用它。</p><p>ScriptError 和 StandardError 都有一些子类，但是在这里我们不需要了解这些细节。最重要的事情是创建我们自己的异常类，它们必须是类 Exception 或其子代的子类。</p><p>让我们看一个实例：</p><p><strong>实例</strong></p><pre><code>class FileSaveError &lt; StandardError   attr_reader :reason   def initialize(reason)      @reason = reason   endend</code></pre><p>现在，看下面的实例，将用到上面的异常：</p><p><strong>实例</strong></p><pre><code>File.open(path, &quot;w&quot;) do |file|begin    # 写出数据 ...rescue    # 发生错误    raise FileSaveError.new($!)endend</code></pre><p>在这里，最重要的一行是 raise FileSaveError.new($!)。我们调用 raise 来示意异常已经发生，把它传给 FileSaveError 的一个新的实例，由于特定的异常引起数据写入失败。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby Dir 类和方法</title>
      <link href="/2019/09/09/ruby-22/"/>
      <url>/2019/09/09/ruby-22/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-Dir-类和方法"><a href="#Ruby-Dir-类和方法" class="headerlink" title="Ruby Dir 类和方法"></a>Ruby Dir 类和方法</h3><p>Dir 是一个表示用于给出操作系统中目录中的文件名的目录流。Dir 类也拥有与目录相关的操作，比如通配符文件名匹配、改变工作目录等。</p><h4 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h4><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Dir[pat] Dir::glob( pat)  <br>返回一个数组，包含与指定的通配符模式 pat 匹配的文件名：<br><em> - 匹配包含 null 字符串的任意字符串<br>** - 递归地匹配任意字符串<br>? - 匹配任意单个字符<br>[…] - 匹配封闭字符中的任意一个<br>{a,b…} - 匹配字符串中的任意一个<br>Dir[“foo.</em>“] # 匹配 “foo.c”、 “foo.rb” 等等<br>Dir[“foo.?”] # 匹配 “foo.c”、 “foo.h” 等等<br></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Dir::chdir( path) 改变当前目录。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Dir::chroot( path) 改变根目录（只允许超级用户）。并不是在所有的平台上都可用。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Dir::delete( path) 删除 path 指定的目录。目录必须是空的。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Dir::entries( path) 返回一个数组，包含目录 path 中的文件名。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">Dir::foreach( path) { &#166;     f&#166;     …} 为 path 指定的目录中的每个文件执行一次块。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Dir::getwd Dir::pwd 返回当前目录。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">Dir::mkdir( path[, mode=0777]) 创建 path 指定的目录。权限模式可被 File::umask 的值修改，在 Win32 的平台上会被忽略。</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">Dir::new( path) Dir::open( path) Dir::open( path) { &#166;     dir &#166;     …} 返回 path 的新目录对象。如果 open 给出一个块，则新目录对象会传到该块，块会在终止前关闭目录对象。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">Dir::pwd 参见 Dir::getwd。</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">Dir::rmdir( path) Dir::unlink( path) Dir::delete( path) 删除 path 指定的目录。目录必须是空的。</td></tr></tbody></table><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><p>假设 d 是 Dir 类的一个实例：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">d.close关闭目录流。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">d.each { &#166;     f &#166;     …} 为 d 中的每一个条目执行一次块。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">d.pos d.tell 返回 d 中的当前位置。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">d.pos= offset 设置目录流中的位置。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">d.pos= pos d.seek(pos) 移动到 d 中的某个位置。pos 必须是一个由 d.pos 返回的值或 0。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">d.read 返回 d 的下一个条目。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">d.rewind 移动 d 中的位置到第一个条目。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">d.seek(po s) 参见 d.pos=pos。</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">d.tell 参见 d.pos。</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  Ruby File 类和方法</title>
      <link href="/2019/09/09/ruby-21/"/>
      <url>/2019/09/09/ruby-21/</url>
      
        <content type="html"><![CDATA[<p>File 表示一个连接到普通文件的 stdio 对象。open 为普通文件返回该类的一个实例。</p><h3 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h3><table><thead><tr><th style="text-align:center">序号</th><th>方法 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td>File::atime( path)  返回 path 的最后访问时间。</td></tr><tr><td style="text-align:center">2</td><td>File::basename( path[, suffix]) 返回 path 末尾的文件名。如果指定了 suffix，则它会从文件名末尾被删除。例如：File.basename(“/home/users/bin/ruby.exe”) #=&gt; “ruby.exe”</td></tr><tr><td style="text-align:center">3</td><td>File::blockdev?( path) 如果 path 是一个块设备，则返回 true。</td></tr><tr><td style="text-align:center">4</td><td>File::chardev?( path) 如果 path 是一个字符设备，则返回 true。</td></tr><tr><td style="text-align:center">5</td><td>File::chmod( mode, path…)改变指定文件的权限模式。</td></tr><tr><td style="text-align:center">6</td><td>File::chown( owner, group, path…)改变指定文件的所有者和所属组。</td></tr><tr><td style="text-align:center">7</td><td>File::ctime( path) 返回 path 的最后一个 inode 更改时间。</td></tr><tr><td style="text-align:center">8</td><td>File::delete( path…)File::unlink( path…)删除指定的文件。</td></tr><tr><td style="text-align:center">9</td><td>File::directory?( path)如果 path 是一个目录，则返回 true。</td></tr><tr><td style="text-align:center">10</td><td>File::dirname( path)返回 path 的目录部分，不包括最后的文件名。</td></tr><tr><td style="text-align:center">11</td><td>File::executable?( path)如果 path 是可执行的，则返回 true。</td></tr><tr><td style="text-align:center">12</td><td>File::executable_real?( path)如果 path 通过真正的用户权限是可执行的，则返回 true。</td></tr><tr><td style="text-align:center">13</td><td>File::exist?( path)如果 path 存在，则返回 true。</td></tr><tr><td style="text-align:center">14</td><td>File::expand_path( path[, dir])返回 path 的绝对路径，扩展 ~ 为进程所有者的主目录，~user 为用户的主目录。相对路径是相对于 dir 指定的目录，如果 dir 被省略则相对于当前工作目录。</td></tr><tr><td style="text-align:center">15</td><td>File::file?( path)如果 path 是一个普通文件，则返回 true。</td></tr><tr><td style="text-align:center">16</td><td>File::ftype( path) 返回下列其中一个字符串，表示文件类型：file - 普通文件directory - 目录characterSpecial - 字符特殊文件blockSpecial - 块特殊文件fifo - 命名管道（FIFO）link - 符号链接socket - Socket unknown - 未知的文件类型</td></tr><tr><td style="text-align:center">17</td><td>File::grpowned?( path)如果 path 由用户的所属组所有，则返回 true。</td></tr><tr><td style="text-align:center">18</td><td>File::join( item…)返回一个字符串，由指定的项连接在一起，并使用 File::Separator 进行分隔例如：File::join(“”, “home”, “usrs”, “bin”) # =&gt; “/home/usrs/bin”</td></tr><tr><td style="text-align:center">18</td><td>File::link( old, new)创建一个到文件 old 的硬链接。</td></tr><tr><td style="text-align:center">19</td><td>File::lstat( path) 与 stat 相同，但是它返回自身符号链接上的信息，而不是所指向的文件。</td></tr><tr><td style="text-align:center">20</td><td>File::mtime( path)返回 path 的最后一次修改时间。</td></tr><tr><td style="text-align:center">21</td><td>File::new( path[, mode=”r”]) File::open( path[, mode=”r”])File::open( path[, mode=”r”]) {&#166;    f &#166;     …}打开文件。如果指定了块，则通过传递新文件作为参数来执行块。当块退出时，文件会自动关闭。这些方法有别于 Kernel.open，即使 path 是以 &#166;     开头，后续的字符串也不会作为命令运行。</td></tr><tr><td style="text-align:center">22</td><td>File::owned?( path)如果 path 由有效的用户所有，则返回 true。</td></tr><tr><td style="text-align:center">23</td><td>File::pipe?( path)如果 path 是一个管道，则返回 true。</td></tr><tr><td style="text-align:center">24</td><td>File::readable?( path)如果 path 是可读的，则返回 true。</td></tr><tr><td style="text-align:center">25</td><td>File::readable_real?( path)如果 path 通过真正的用户权限是可读的，则返回 true。</td></tr><tr><td style="text-align:center">25</td><td>File::readlink( path) 返回 path 所指向的文件。</td></tr><tr><td style="text-align:center">26</td><td>File::rename( old, new)改变文件名 old 为 new。</td></tr><tr><td style="text-align:center">27</td><td>File::setgid?( path) 如果设置了 path 的 set-group-id 权限位，则返回 true。</td></tr><tr><td style="text-align:center">28</td><td>File::setuid?( path) 如果设置了 path 的 set-user-id 权限位，则返回 true。</td></tr><tr><td style="text-align:center">29</td><td>File::size( path) 返回 path 的文件大小。</td></tr><tr><td style="text-align:center">30</td><td>File::size?( path) 返回 path 的文件大小，如果为 0 则返回 nil。</td></tr><tr><td style="text-align:center">31</td><td>File::socket?( path)如果 path 是一个 socket，则返回 true。</td></tr><tr><td style="text-align:center">32</td><td>File::split( path)返回一个数组，包含 path 的内容，path 被分成 File::dirname(path) 和 File::basename(path)。</td></tr><tr><td style="text-align:center">33</td><td>File::stat( path) 返回 path 上带有信息的 File::Stat 对象。</td></tr><tr><td style="text-align:center">34</td><td>File::sticky?( path) 如果设置了 path 的 sticky 位，则返回 true。</td></tr><tr><td style="text-align:center">35</td><td>File::symlink( old, new) 创建一个指向文件 old 的符号链接。</td></tr><tr><td style="text-align:center">36</td><td>File::symlink?( path) 如果 path 是一个符号链接，则返回 true。</td></tr><tr><td style="text-align:center">37</td><td>File::truncate( path, len) 截断指定的文件为 len 字节。</td></tr><tr><td style="text-align:center">38</td><td>File::unlink( path…) 删除 path 给定的文件。</td></tr><tr><td style="text-align:center">39</td><td>File::umask([ mask]) 如果未指定参数，则为该进程返回当前的 umask。如果指定了一个参数，则设置了 umask，并返回旧的 umask。</td></tr><tr><td style="text-align:center">40</td><td>File::utime( atime, mtime, path…)改变指定文件的访问和修改时间。</td></tr><tr><td style="text-align:center">41</td><td>File::writable?( path)如果 path 是可写的，则返回 true。</td></tr><tr><td style="text-align:center">42</td><td>File::writable_real?( path)如果 path 通过真正的用户权限是可写的，则返回 true。</td></tr><tr><td style="text-align:center">43</td><td>File::zero?( path)如果 path 的文件大小是 0，则返回 true。</td></tr></tbody></table><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><p>假设 f 是 File 类的一个实例：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">f.atime 返回 f 的最后访问时间。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">f.chmode( mode) 改变 f 的权限模式。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">f.chown( owner, group) 改变 f 的所有者和所属组。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">f.ctime 返回 f 的最后一个 inode 更改时间。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">f.flock( op) 调用 flock(2)。op 可以是 0 或一个逻辑值或 File 类常量 LOCK_EX、LOCK_NB、LOCK_SH 和 LOCK_UN。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">f.lstat 与 stat 相同，但是它返回自身符号链接上的信息，而不是所指向的文件。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">f.mtime 返回 f 的最后修改时间。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">f.path返回用于创建 f 的路径名。</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">f.reopen( path[, mode=”r”])重新打开文件。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">f.truncate( len) 截断 f 为 len 字节。</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby File</title>
      <link href="/2019/09/09/ruby-20/"/>
      <url>/2019/09/09/ruby-20/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-文件的输入与输出"><a href="#Ruby-文件的输入与输出" class="headerlink" title="Ruby 文件的输入与输出"></a>Ruby 文件的输入与输出</h3><p>Ruby 提供了一整套 I/O 相关的方法，在内核（Kernel）模块中实现。所有的 I/O 方法派生自 IO 类。</p><p>类 IO 提供了所有基础的方法，比如 read、 write、 gets、 puts、 readline、 getc 和 printf。</p><p>本章节将讲解所有 Ruby 中可用的基础的 I/O 函数。如需了解更多的函数，请查看 Ruby 的 IO 类。</p><h4 id="puts-语句"><a href="#puts-语句" class="headerlink" title="puts 语句"></a>puts 语句</h4><p>在前面的章节中，您赋值给变量，然后使用 puts 语句打印输出。</p><p>puts 语句指示程序显示存储在变量中的值。这将在每行末尾添加一个新行。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyval1 = &quot;This is variable one&quot;val2 = &quot;This is variable two&quot;puts val1puts val2</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>This is variable one<br>This is variable two</p></blockquote></div></div><h4 id="gets-语句"><a href="#gets-语句" class="headerlink" title="gets 语句"></a>gets 语句</h4><p>gets 语句可用于获取来自名为 STDIN 的标准屏幕的用户输入。</p><p><strong>实例</strong><br>下面的代码演示了如何使用 gets 语句。该代码将提示用户输入一个值，该值将被存储在变量 val 中，最后会被打印在 STDOUT 上。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyputs &quot;Enter a value :&quot;val = getsputs val</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Enter a value :<br>This is entered value<br>This is entered value</p></blockquote></div></div><h4 id="putc-语句"><a href="#putc-语句" class="headerlink" title="putc 语句"></a>putc 语句</h4><p>与 puts 语句不同，puts 语句输出整个字符串到屏幕上，而 putc 语句可用于依次输出一个字符。</p><p>下面代码的输出只是字符 H：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubystr=&quot;Hello Ruby!&quot;putc str</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>H</p></blockquote></div></div><h4 id="print-语句"><a href="#print-语句" class="headerlink" title="print 语句"></a>print 语句</h4><p>print 语句与 puts 语句类似。唯一的不同在于 puts 语句在输出内容后会跳到下一行，而使用 print 语句时，光标定位在同一行。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyprint &quot;Hello World&quot;print &quot;Good Morning&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Hello WorldGood Morning</p></blockquote></div></div><h4 id="打开和关闭文件"><a href="#打开和关闭文件" class="headerlink" title="打开和关闭文件"></a>打开和关闭文件</h4><p>截至现在，您已经读取并写入标准输入和输出。现在，我们将看看如何操作实际的数据文件。</p><h5 id="File-new-方法"><a href="#File-new-方法" class="headerlink" title="File.new 方法"></a>File.new 方法</h5><p>您可以使用 File.new 方法创建一个 File 对象用于读取、写入或者读写，读写权限取决于 mode 参数。最后，您可以使用 File.close 方法来关闭该文件。</p><p><strong>语法</strong></p><pre><code>aFile = File.new(&quot;filename&quot;, &quot;mode&quot;)   # ... 处理文件aFile.close</code></pre><h5 id="File-open-方法"><a href="#File-open-方法" class="headerlink" title="File.open 方法"></a>File.open 方法</h5><p>您可以使用 File.open 方法创建一个新的 file 对象，并把该 file 对象赋值给文件。但是，File.open 和 File.new 方法之间有一点不同。不同点是 File.open 方法可与块关联，而 File.new 方法不能。</p><pre><code>File.open(&quot;filename&quot;, &quot;mode&quot;) do |aFile|   # ... process the fileend</code></pre><p>下表列出了打开文件的不同模式：</p><table><thead><tr><th style="text-align:center">模式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">r</td><td style="text-align:center">只读模式。文件指针被放置在文件的开头。这是默认模式。</td></tr><tr><td style="text-align:center">r+</td><td style="text-align:center">读写模式。文件指针被放置在文件的开头。</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">只写模式。如果文件存在，则重写文件。如果文件不存在，则创建一个新文件用于写入。</td></tr><tr><td style="text-align:center">w+</td><td style="text-align:center">读写模式。如果文件存在，则重写已存在的文件。如果文件不存在，则创建一个新文件用于读写。</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">只写模式。如果文件存在，则文件指针被放置在文件的末尾。也就是说，文件是追加模式。如果文件不存在，则创建一个新文件用于写入。</td></tr><tr><td style="text-align:center">a+</td><td style="text-align:center">读写模式。如果文件存在，则文件指针被放置在文件的末尾。也就是说，文件是追加模式。如果文件不存在，则创建一个新文件用于读写。</td></tr></tbody></table><h4 id="读取和写入文件"><a href="#读取和写入文件" class="headerlink" title="读取和写入文件"></a>读取和写入文件</h4><p>用于简单 I/O 的方法也可用于所有 file 对象。所以，gets 从标准输入读取一行，aFile.gets 从文件对象 aFile 读取一行。</p><p>但是，I/O 对象提供了访问方法的附加设置，为我们提供了便利。</p><h4 id="sysread-方法"><a href="#sysread-方法" class="headerlink" title="sysread 方法"></a>sysread 方法</h4><p>您可以使用方法 sysread 来读取文件的内容。当使用方法 sysread 时，您可以使用任意一种模式打开文件。例如：</p><p>下面是输入文本文件：</p><p><code>This is a simple text file for testing purpose.</code><br>现在让我们尝试读取这个文件：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyaFile = File.new(&quot;input.txt&quot;, &quot;r&quot;)if aFile   content = aFile.sysread(20)   puts contentelse   puts &quot;Unable to open file!&quot;end</code></pre><p>该语句将输入文件的头 20 个字符。文件指针将被放置在文件中第 21 个字符的位置。</p><h4 id="syswrite-方法"><a href="#syswrite-方法" class="headerlink" title="syswrite 方法"></a>syswrite 方法</h4><p>您可以使用方法 syswrite 来向文件写入内容。当使用方法 syswrite 时，您需要以写入模式打开文件。例如：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyaFile = File.new(&quot;input.txt&quot;, &quot;r+&quot;)if aFile   aFile.syswrite(&quot;ABCDEF&quot;)else   puts &quot;Unable to open file!&quot;end</code></pre><p>该语句将写入 “ABCDEF” 到文件中。</p><h3 id="each-byte-方法"><a href="#each-byte-方法" class="headerlink" title="each_byte 方法"></a>each_byte 方法</h3><p>该方法属于类 File。方法 each_byte 是个可以迭代字符串中每个字符。请看下面的代码实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyaFile = File.new(&quot;input.txt&quot;, &quot;r+&quot;)if aFile   aFile.syswrite(&quot;ABCDEF&quot;)   aFile.rewind   aFile.each_byte {|ch| putc ch; putc ?. }else   puts &quot;Unable to open file!&quot;end</code></pre><p>字符一个接着一个被传到变量 ch，然后显示在屏幕上，如下所示：</p><p><code>A.B.C.D.E.F.s. .a. .s.i.m.p.l.e. .t.e.x.t. .f.i.l.e. .f.o.r. .t.e.s.t.i.n.g. .p.u.r.p.o.s.e...</code></p><h4 id="IO-readlines-方法"><a href="#IO-readlines-方法" class="headerlink" title="IO.readlines 方法"></a>IO.readlines 方法</h4><p>类 File 是类 IO 的一个子类。类 IO 也有一些用于操作文件的方法。</p><p>IO.readlines 是 IO 类中的一个方法。该方法逐行返回文件的内容。下面的代码显示了方法 IO.readlines 的使用：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyarr = IO.readlines(&quot;input.txt&quot;)puts arr[0]puts arr[1]</code></pre><p>在这段代码中，变量 arr 是一个数组。文件 input.txt 的每一行将是数组 arr 中的一个元素。因此，arr[0] 将包含第一行，而 arr[1] 将包含文件的第二行。</p><h4 id="IO-foreach-方法"><a href="#IO-foreach-方法" class="headerlink" title="IO.foreach 方法"></a>IO.foreach 方法</h4><p>该方法也逐行返回输出。方法 foreach 与方法 readlines 之间不同的是，方法 foreach 与块相关联。但是，不像方法 readlines，方法 foreach 不是返回一个数组。例如：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyIO.foreach(&quot;input.txt&quot;){|block| puts block}</code></pre><p>这段代码将把文件 test 的内容逐行传给变量 block，然后输出将显示在屏幕上。</p><h4 id="重命名和删除文件"><a href="#重命名和删除文件" class="headerlink" title="重命名和删除文件"></a>重命名和删除文件</h4><p>您可以通过 rename 和 delete 方法重命名和删除文件。</p><p>下面的实例重命名一个已存在文件 test1.txt：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 重命名文件 test1.txt 为 test2.txtFile.rename( &quot;test1.txt&quot;, &quot;test2.txt&quot; )</code></pre><p>下面的实例删除一个已存在文件 test2.txt：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 删除文件 test2.txtFile.delete(&quot;text2.txt&quot;)</code></pre><h4 id="文件模式与所有权"><a href="#文件模式与所有权" class="headerlink" title="文件模式与所有权"></a>文件模式与所有权</h4><p>使用带有掩码的 chmod 方法来改变文件的模式或权限/访问列表：</p><p>下面的实例改变一个已存在文件 test.txt 的模式为一个掩码值：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyfile = File.new( &quot;test.txt&quot;, &quot;w&quot; )file.chmod( 0755 )</code></pre><p>下表列出了 chmod 方法中可使用的不同的掩码：</p><table><thead><tr><th style="text-align:center">掩码</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">0700</td><td style="text-align:center">rwx 掩码，针对所有者</td></tr><tr><td style="text-align:center">0400</td><td style="text-align:center">r ，针对所有者</td></tr><tr><td style="text-align:center">0200</td><td style="text-align:center">w ，针对所有者</td></tr><tr><td style="text-align:center">0100</td><td style="text-align:center">x ，针对所有者</td></tr><tr><td style="text-align:center">0070</td><td style="text-align:center">rwx 掩码，针对所属组</td></tr><tr><td style="text-align:center">0040</td><td style="text-align:center">r ，针对所属组</td></tr><tr><td style="text-align:center">0020</td><td style="text-align:center">w ，针对所属组</td></tr><tr><td style="text-align:center">0010</td><td style="text-align:center">x ，针对所属组</td></tr><tr><td style="text-align:center">0007</td><td style="text-align:center">rwx 掩码，针对其他人</td></tr><tr><td style="text-align:center">0004</td><td style="text-align:center">r ，针对其他人</td></tr><tr><td style="text-align:center">0002</td><td style="text-align:center">w ，针对其他人</td></tr><tr><td style="text-align:center">0001</td><td style="text-align:center">x ，针对其他人</td></tr><tr><td style="text-align:center">4000</td><td style="text-align:center">执行时设置用户 ID</td></tr><tr><td style="text-align:center">2000</td><td style="text-align:center">执行时设置所属组 ID</td></tr><tr><td style="text-align:center">1000</td><td style="text-align:center">保存交换文本，甚至在使用后也会保存</td></tr></tbody></table><h4 id="文件查询"><a href="#文件查询" class="headerlink" title="文件查询"></a>文件查询</h4><p>下面的命令在打开文件前检查文件是否已存在：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile.open(&quot;file.rb&quot;) if File::exists?( &quot;file.rb&quot; )</code></pre><p>下面的命令查询文件是否确实是一个文件：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 返回 true 或falseFile.file?( &quot;text.txt&quot; )</code></pre><p>下面的命令检查给定的文件名是否是一个目录：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 一个目录File::directory?( &quot;/usr/local/bin&quot; ) # =&gt; true# 一个文件File::directory?( &quot;file.rb&quot; ) # =&gt; false</code></pre><p>下面的命令检查文件是否可读、可写、可执行：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile.readable?( &quot;test.txt&quot; )   # =&gt; trueFile.writable?( &quot;test.txt&quot; )   # =&gt; trueFile.executable?( &quot;test.txt&quot; ) # =&gt; false</code></pre><p>下面的命令检查文件是否大小为零：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile.zero?( &quot;test.txt&quot; )      # =&gt; true</code></pre><p>下面的命令返回文件的大小：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile.size?( &quot;text.txt&quot; )     # =&gt; 1002</code></pre><p>下面的命令用于检查文件的类型：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile::ftype( &quot;test.txt&quot; )     # =&gt; file</code></pre><p>ftype 方法通过返回下列中的某个值来标识了文件的类型：file、 directory、 characterSpecial、 blockSpecial、 fifo、 link、 socket 或 unknown。</p><p>下面的命令用于检查文件被创建、修改或最后访问的时间：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyFile::ctime( &quot;test.txt&quot; ) # =&gt; Fri May 09 10:06:37 -0700 2008File::mtime( &quot;text.txt&quot; ) # =&gt; Fri May 09 10:44:44 -0700 2008File::atime( &quot;text.txt&quot; ) # =&gt; Fri May 09 10:45:01 -0700 2008</code></pre><h4 id="Ruby-中的目录"><a href="#Ruby-中的目录" class="headerlink" title="Ruby 中的目录"></a>Ruby 中的目录</h4><p>所有的文件都是包含在目录中，Ruby 提供了处理文件和目录的方式。File 类用于处理文件，Dir 类用于处理目录。</p><h5 id="浏览目录"><a href="#浏览目录" class="headerlink" title="浏览目录"></a>浏览目录</h5><p>为了在 Ruby 程序中改变目录，请使用 Dir.chdir。下面的实例改变当前目录为 /usr/bin。</p><pre><code>Dir.chdir(&quot;/usr/bin&quot;)</code></pre><p>您可以通过 Dir.pwd 查看当前目录：</p><pre><code>puts Dir.pwd # 返回当前目录，类似 /usr/bin</code></pre><p>您可以使用 Dir.entries 获取指定目录内的文件和目录列表：</p><pre><code>puts Dir.entries(&quot;/usr/bin&quot;).join(&#39; &#39;)</code></pre><p>Dir.entries 返回一个数组，包含指定目录内的所有项。Dir.foreach 提供了相同的功能：</p><pre><code>Dir.foreach(&quot;/usr/bin&quot;) do |entry|   puts entryend</code></pre><p>获取目录列表的一个更简洁的方式是通过使用 Dir 的类数组的方法：</p><pre><code>Dir[&quot;/usr/bin/*&quot;]</code></pre><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><p>Dir.mkdir 可用于创建目录：</p><pre><code>Dir.mkdir(&quot;mynewdir&quot;)</code></pre><p>您也可以通过 mkdir 在新目录（不是已存在的目录）上设置权限：</p><p><strong>注意：</strong>掩码 755 设置所有者（owner）、所属组（group）、每个人（world [anyone]）的权限为 rwxr-xr-x，其中 r = read 读取，w = write 写入，x = execute 执行。</p><pre><code>Dir.mkdir( &quot;mynewdir&quot;, 755 )</code></pre><h4 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h4><p>Dir.delete 可用于删除目录。Dir.unlink 和 Dir.rmdir 执行同样的功能，为我们提供了便利。</p><pre><code>Dir.delete(&quot;testdir&quot;)</code></pre><h4 id="创建文件-amp-临时目录"><a href="#创建文件-amp-临时目录" class="headerlink" title="创建文件 &amp; 临时目录"></a>创建文件 &amp; 临时目录</h4><p>临时文件是那些在程序执行过程中被简单地创建，但不会永久性存储的信息。</p><p>Dir.tmpdir 提供了当前系统上临时目录的路径，但是该方法默认情况下是不可用的。为了让 Dir.tmpdir 可用，使用必需的 ‘tmpdir’ 是必要的。</p><p>您可以把 Dir.tmpdir 和 File.join 一起使用，来创建一个独立于平台的临时文件：</p><pre><code>require &#39;tmpdir&#39;tempfilename = File.join(Dir.tmpdir, &quot;tingtong&quot;)tempfile = File.new(tempfilename, &quot;w&quot;)tempfile.puts &quot;This is a temporary file&quot;tempfile.closeFile.delete(tempfilename)</code></pre><p>这段代码创建了一个临时文件，并向其中写入数据，然后删除文件。Ruby 的标准库也包含了一个名为 Tempfile 的库，该库可用于创建临时文件：</p><pre><code>require &#39;tempfile&#39;f = Tempfile.new(&#39;tingtong&#39;)f.puts &quot;Hello&quot;puts f.pathf.close</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 迭代器</title>
      <link href="/2019/09/09/ruby-19/"/>
      <url>/2019/09/09/ruby-19/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-迭代器"><a href="#Ruby-迭代器" class="headerlink" title="Ruby 迭代器"></a>Ruby 迭代器</h3><p>简单来说：迭代(iterate)指的是重复做相同的事，所以迭代器(iterator)就是用来重复多次相同的事。</p><p>迭代器是集合支持的方法。存储一组数据成员的对象称为集合。在 Ruby 中，数组(Array)和哈希(Hash)可以称之为集合。</p><p>迭代器返回集合的所有元素，一个接着一个。在这里我们将讨论两种迭代器，each 和 collect。</p><h4 id="Ruby-each-迭代器"><a href="#Ruby-each-迭代器" class="headerlink" title="Ruby each 迭代器"></a>Ruby each 迭代器</h4><p>each 迭代器返回数组或哈希的所有元素。</p><p><strong>语法</strong></p><pre><code>collection.each do |variable|   codeend</code></pre><p>为集合中的每个元素执行 code。在这里，集合可以是数组或哈希。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyary = [1,2,3,4,5]ary.each do |i|   puts iend</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>1<br>2<br>3<br>4<br>5</p></blockquote></div></div><p>each 迭代器总是与一个块关联。它向块返回数组的每个值，一个接着一个。值被存储在变量 i 中，然后显示在屏幕上。</p><h4 id="Ruby-collect-迭代器"><a href="#Ruby-collect-迭代器" class="headerlink" title="Ruby collect 迭代器"></a>Ruby collect 迭代器</h4><p>collect 迭代器返回集合的所有元素。</p><p><strong>语法</strong></p><pre><code>collection = collection.collect</code></pre><p>collect 方法不需要总是与一个块关联。collect 方法返回整个集合，不管它是数组或者是哈希。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubya = [1,2,3,4,5]b = Array.newb = a.collect{ |x|x }puts b</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>1<br>2<br>3<br>4<br>5</p></blockquote></div></div><p><code>collect 方法不是数组间进行复制的正确方式。这里有另一个称为 clone 的方法，用于复制一个数组到另一个数组。</code></p><p>当您想要对每个值进行一些操作以便获得新的数组时，您通常使用 collect 方法。例如，下面的代码会生成一个数组，其值是 a 中每个值的 10 倍。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubya = [1,2,3,4,5]b = a.collect{|x| 10*x}puts b</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>10<br>20<br>30<br>40<br>50</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby Range</title>
      <link href="/2019/09/09/ruby-18/"/>
      <url>/2019/09/09/ruby-18/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-范围（Range）"><a href="#Ruby-范围（Range）" class="headerlink" title="Ruby 范围（Range）"></a>Ruby 范围（Range）</h3><p>范围（Range）无处不在：a 到 z、 0 到 9、等等。Ruby 支持范围，并允许我们以不同的方式使用范围：</p><ul><li>作为序列的范围</li><li>作为条件的范围</li><li>作为间隔的范围</li></ul><h4 id="作为序列的范围"><a href="#作为序列的范围" class="headerlink" title="作为序列的范围"></a>作为序列的范围</h4><p>范围的第一个也是最常见的用途是表达序列。序列有一个起点、一个终点和一个在序列产生连续值的方式。</p><p>Ruby 使用 ‘’..’’ 和 ‘’…’’ 范围运算符创建这些序列。两点形式创建一个包含指定的最高值的范围，三点形式创建一个不包含指定的最高值的范围。</p><pre><code>(1..5)        #==&gt; 1, 2, 3, 4, 5(1...5)       #==&gt; 1, 2, 3, 4(&#39;a&#39;..&#39;d&#39;)    #==&gt; &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;</code></pre><p>序列 1..100 是一个 Range 对象，包含了两个 Fixnum 对象的引用。如果需要，您可以使用 to_a 方法把范围转换为列表。尝试下面的实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby$, =&quot;, &quot;   # Array 值分隔符range1 = (1..10).to_arange2 = (&#39;bar&#39;..&#39;bat&#39;).to_aputs &quot;#{range1}&quot;puts &quot;#{range2}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br>[“bar”, “bas”, “bat”]</p></blockquote></div></div><p>范围实现了让您可以遍历它们的方法，您可以通过多种方式检查它们的内容：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-# 指定范围digits = 0..9puts digits.include?(5)ret = digits.minputs &quot;最小值为 #{ret}&quot;ret = digits.maxputs &quot;最大值为 #{ret}&quot;ret = digits.reject {|i| i &lt; 5 }puts &quot;不符合条件的有 #{ret}&quot;digits.each do |digit|   puts &quot;在循环中 #{digit}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>true<br>最小值为 0<br>最大值为 9<br>不符合条件的有 [5, 6, 7, 8, 9]<br>在循环中 0<br>在循环中 1<br>在循环中 2<br>在循环中 3<br>在循环中 4<br>在循环中 5<br>在循环中 6<br>在循环中 7<br>在循环中 8<br>在循环中 9</p></blockquote></div></div><h4 id="作为条件的范围"><a href="#作为条件的范围" class="headerlink" title="作为条件的范围"></a>作为条件的范围</h4><p>范围也可以用作条件表达式。例如，下面的代码片段从标准输入打印行，其中每个集合的第一行包含单词 start，最后一行包含单词 end.：</p><pre><code>while gets   print if /start/../end/end</code></pre><p>范围可以用在 case 语句中：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-score = 70result = case scorewhen 0..40    &quot;糟糕的分数&quot;when 41..60    &quot;快要及格&quot;when 61..70    &quot;及格分数&quot;when 71..100       &quot;良好分数&quot;else    &quot;错误的分数&quot;endputs result</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>及格分数</p></blockquote></div></div><h4 id="作为间隔的范围"><a href="#作为间隔的范围" class="headerlink" title="作为间隔的范围"></a>作为间隔的范围</h4><p>范围的最后一个用途是间隔检测：检查指定值是否在指定的范围内。需要使用 === 相等运算符来完成计算。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-if ((1..10) === 5)  puts &quot;5 在 (1..10)&quot;endif ((&#39;a&#39;..&#39;j&#39;) === &#39;c&#39;)  puts &quot;c 在 (&#39;a&#39;..&#39;j&#39;)&quot;endif ((&#39;a&#39;..&#39;j&#39;) === &#39;z&#39;)  puts &quot;z 在 (&#39;a&#39;..&#39;j&#39;)&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>5 在 (1..10)<br>c 在 (‘a’..’j’) </p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby Date and Time</title>
      <link href="/2019/09/09/ruby-17/"/>
      <url>/2019/09/09/ruby-17/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-日期-amp-时间（Date-amp-Time）"><a href="#Ruby-日期-amp-时间（Date-amp-Time）" class="headerlink" title="Ruby 日期 &amp; 时间（Date &amp; Time）"></a>Ruby 日期 &amp; 时间（Date &amp; Time）</h3><p><strong>Time</strong> 类在 Ruby 中用于表示日期和时间。它是基于操作系统提供的系统日期和时间之上。该类可能无法表示 1970 年之前或者 2038 年之后的日期。</p><hr><h4 id="创建当前的日期和时间"><a href="#创建当前的日期和时间" class="headerlink" title="创建当前的日期和时间"></a>创建当前的日期和时间</h4><p>下面是获取当前的日期和时间的简单实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# -*- coding: UTF-8 -*-time1 = Time.newputs &quot;当前时间 : &quot; + time1.inspect# Time.now 功能相同time2 = Time.nowputs &quot;当前时间 : &quot; + time2.inspect</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>当前时间 : 2015-09-17 15:23:14 +0800<br>当前时间 : 2015-09-17 15:23:14 +0800</p></blockquote></div></div><h4 id="获取-Date-amp-Time-组件"><a href="#获取-Date-amp-Time-组件" class="headerlink" title="获取 Date &amp; Time 组件"></a>获取 Date &amp; Time 组件</h4><p>我们可以使用 Time 对象来获取各种日期和时间的组件。请看下面的实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -w# -*- coding: UTF-8 -*-time = Time.new# Time 的组件puts &quot;当前时间 : &quot; + time.inspectputs time.year    # =&gt; 日期的年份puts time.month   # =&gt; 日期的月份（1 到 12）puts time.day     # =&gt; 一个月中的第几天（1 到 31）puts time.wday    # =&gt; 一周中的星期几（0 是星期日）puts time.yday    # =&gt; 365：一年中的第几天puts time.hour    # =&gt; 23：24 小时制puts time.min     # =&gt; 59puts time.sec     # =&gt; 59puts time.usec    # =&gt; 999999：微秒puts time.zone    # =&gt; &quot;UTC&quot;：时区名称</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>当前时间 : 2015-09-17 15:24:44 +0800<br>2015<br>9<br>17<br>4<br>260<br>15<br>24<br>44<br>921519<br>CST</p></blockquote></div></div><h4 id="Time-utc、Time-gm-和-Time-local-函数"><a href="#Time-utc、Time-gm-和-Time-local-函数" class="headerlink" title="Time.utc、Time.gm 和 Time.local 函数"></a>Time.utc、Time.gm 和 Time.local 函数</h4><p>这些函数可用于格式化标准格式的日期，如下所示：</p><pre><code># July 8, 2008Time.local(2008, 7, 8)  # July 8, 2008, 09:10am，本地时间Time.local(2008, 7, 8, 9, 10)   # July 8, 2008, 09:10 UTCTime.utc(2008, 7, 8, 9, 10)  # July 8, 2008, 09:10:11 GMT （与 UTC 相同）Time.gm(2008, 7, 8, 9, 10, 11)</code></pre><p>下面的实例在数组中获取所有的组件：</p><pre><code>[sec,min,hour,day,month,year,wday,yday,isdst,zone]</code></pre><p>尝试下面的实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wtime = Time.newvalues = time.to_ap values</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[39, 25, 15, 17, 9, 2015, 4, 260, false, “CST”]</p></blockquote></div></div><p>该数组可被传到 Time.utc 或 Time.local 函数来获取日期的不同格式，如下所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wtime = Time.newvalues = time.to_aputs Time.utc(*values)</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>2015-09-17 15:26:09 UTC</p></blockquote></div></div><p>下面是获取时间的方式，从纪元以来的秒数（平台相关）：</p><pre><code># 返回从纪元以来的秒数time = Time.now.to_i  # 把秒数转换为 Time 对象Time.at(time)# 返回从纪元以来的秒数，包含微妙time = Time.now.to_f</code></pre><h4 id="时区和夏令时"><a href="#时区和夏令时" class="headerlink" title="时区和夏令时"></a>时区和夏令时</h4><p>您可以使用 Time 对象来获取与时区和夏令时有关的所有信息，如下所示：</p><pre><code>time = Time.new# 这里是解释time.zone       # =&gt; &quot;UTC&quot;：返回时区time.utc_offset # =&gt; 0：UTC 是相对于 UTC 的 0 秒偏移time.zone       # =&gt; &quot;PST&quot;（或其他时区）time.isdst      # =&gt; false：如果 UTC 没有 DST（夏令时）time.utc?       # =&gt; true：如果在 UTC 时区time.localtime  # 转换为本地时区time.gmtime     # 转换回 UTCtime.getlocal   # 返回本地区中的一个新的 Time 对象time.getutc     # 返回 UTC 中的一个新的 Time 对象</code></pre><h4 id="格式化时间和日期"><a href="#格式化时间和日期" class="headerlink" title="格式化时间和日期"></a>格式化时间和日期</h4><p>有多种方式格式化日期和时间。下面的实例演示了其中一部分：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby -wtime = Time.newputs time.to_sputs time.ctimeputs time.localtimeputs time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>2015-09-17 15:26:42 +0800<br>Thu Sep 17 15:26:42 2015<br>2015-09-17 15:26:42 +0800<br>2015-09-17 15:26:42</p></blockquote></div></div><h4 id="时间格式化指令"><a href="#时间格式化指令" class="headerlink" title="时间格式化指令"></a>时间格式化指令</h4><p>下表所列出的指令与方法 Time.strftime 一起使用。</p><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">%a</td><td style="text-align:center">星期几名称的缩写（比如 Sun）。</td></tr><tr><td style="text-align:center">%A</td><td style="text-align:center">星期几名称的全称（比如 Sunday）。</td></tr><tr><td style="text-align:center">%b</td><td style="text-align:center">月份名称的缩写（比如 Jan）。</td></tr><tr><td style="text-align:center">%B</td><td style="text-align:center">月份名称的全称（比如 January）。</td></tr><tr><td style="text-align:center">%c</td><td style="text-align:center">优选的本地日期和时间表示法。</td></tr><tr><td style="text-align:center">%d</td><td style="text-align:center">一个月中的第几天（01 到 31）。</td></tr><tr><td style="text-align:center">%H</td><td style="text-align:center">一天中的第几小时，24 小时制（00 到 23）。</td></tr><tr><td style="text-align:center">%I</td><td style="text-align:center">一天中的第几小时，12 小时制（01 到 12）。</td></tr><tr><td style="text-align:center">%j</td><td style="text-align:center">一年中的第几天（001 到 366）。</td></tr><tr><td style="text-align:center">%m</td><td style="text-align:center">一年中的第几月（01 到 12）。</td></tr><tr><td style="text-align:center">%M</td><td style="text-align:center">小时中的第几分钟（00 到 59）。</td></tr><tr><td style="text-align:center">%p</td><td style="text-align:center">子午线指示（AM 或 PM）。</td></tr><tr><td style="text-align:center">%S</td><td style="text-align:center">分钟中的第几秒（00 或 60）。</td></tr><tr><td style="text-align:center">%U</td><td style="text-align:center">当前年中的周数，从第一个星期日（作为第一周的第一天）开始（00 到 53）。</td></tr><tr><td style="text-align:center">%W</td><td style="text-align:center">当前年中的周数，从第一个星期一（作为第一周的第一天）开始（00 到 53）。</td></tr><tr><td style="text-align:center">%w</td><td style="text-align:center">一星期中的第几天（Sunday 是 0，0 到 6）。</td></tr><tr><td style="text-align:center">%x</td><td style="text-align:center">只有日期没有时间的优先表示法。</td></tr><tr><td style="text-align:center">%X</td><td style="text-align:center">只有时间没有日期的优先表示法。</td></tr><tr><td style="text-align:center">%y</td><td style="text-align:center">不带世纪的年份表示（00 到 99）。</td></tr><tr><td style="text-align:center">%Y</td><td style="text-align:center">带有世纪的年份。</td></tr><tr><td style="text-align:center">%Z</td><td style="text-align:center">时区名称。</td></tr><tr><td style="text-align:center">%%</td><td style="text-align:center">% 字符。</td></tr></tbody></table><h4 id="时间算法"><a href="#时间算法" class="headerlink" title="时间算法"></a>时间算法</h4><p>您可以用时间做一些简单的算术，如下所示：</p><pre><code>now = Time.now           # 当前时间puts nowpast = now - 10          # 10 秒之前。Time - number =&gt; Timeputs pastfuture = now + 10        # 从现在开始 10 秒之后。Time + number =&gt; Timeputs futurediff = future - now      # =&gt; 10  Time - Time =&gt; 秒数puts diff</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>2015-09-17 15:27:08 +0800<br>2015-09-17 15:26:58 +0800<br>2015-09-17 15:27:18 +0800<br>10.0</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby Hash</title>
      <link href="/2019/09/09/ruby-16/"/>
      <url>/2019/09/09/ruby-16/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-哈希（Hash）"><a href="#Ruby-哈希（Hash）" class="headerlink" title="Ruby 哈希（Hash）"></a>Ruby 哈希（Hash）</h3><ul><li>哈希（Hash）是类似 “key” =&gt; “value” 这样的键值对集合。哈希类似于一个数组，只不过它的索引不局限于使用数字。</li><li>Hash 的索引（或者叫”键”）几乎可以是任何对象。</li><li>Hash 虽然和数组类似，但却有一个很重要的区别：Hash 的元素没有特定的顺序。 如果顺序很重要的话就要使用数组了。</li></ul><h4 id="创建哈希"><a href="#创建哈希" class="headerlink" title="创建哈希"></a>创建哈希</h4><p>与数组一样，有各种不同的方式来创建哈希。您可以通过 new 类方法创建一个空的哈希：</p><pre><code>months = Hash.new</code></pre><p>您也可以使用 new 创建带有默认值的哈希，不带默认值的哈希是 nil：</p><pre><code>months = Hash.new( &quot;month&quot; )</code></pre><p>或</p><pre><code>months = Hash.new &quot;month&quot;</code></pre><p>当您访问带有默认值的哈希中的任意键时，如果键或值不存在，访问哈希将返回默认值：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubymonths = Hash.new( &quot;month&quot; )puts &quot;#{months[0]}&quot;puts &quot;#{months[72]}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>month<br>month</p></blockquote></div></div><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyH = Hash[&quot;a&quot; =&gt; 100, &quot;b&quot; =&gt; 200]puts &quot;#{H[&#39;a&#39;]}&quot;puts &quot;#{H[&#39;b&#39;]}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>100<br>200</p></blockquote></div></div><p>您可以使用任何的 Ruby 对象作为键或值，甚至可以使用数组，如下实例所示：</p><pre><code>[1,&quot;jan&quot;] =&gt; &quot;January&quot;</code></pre><h4 id="哈希内置方法"><a href="#哈希内置方法" class="headerlink" title="哈希内置方法"></a>哈希内置方法</h4><p>如果需要调用 Hash 方法，需要先实例化一个 Hash 对象。下面是创建 Hash 对象实例的方式：</p><pre><code>Hash[[key =&gt;|, value]* ] orHash.new [or] Hash.new(obj) [or]Hash.new { |hash, key| block }</code></pre><p>这将返回一个使用给定对象进行填充的新的哈希。现在，使用创建的对象，我们可以调用任意可用的方法。例如：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby$, = &quot;, &quot;months = Hash.new( &quot;month&quot; )months = {&quot;1&quot; =&gt; &quot;January&quot;, &quot;2&quot; =&gt; &quot;February&quot;}keys = months.keysputs &quot;#{keys}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[“1”, “2”]</p></blockquote></div></div><p>下面是公共的哈希方法（假设 hash 是一个 Hash 对象）：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">hash == other_hash</td><td style="text-align:center">检查两个哈希是否具有相同的键值对个数，键值对是否相互匹配，来判断两个哈希是否相等。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">hash.[key]</td><td style="text-align:center">使用键，从哈希引用值。如果未找到键，则返回默认值。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">hash.[key]=value</td><td style="text-align:center">把 value 给定的值与 key 给定的键进行关联。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">hash.clear</td><td style="text-align:center">从哈希中移除所有的键值对。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">hash.default(key = nil)</td><td style="text-align:center">返回 hash 的默认值，如果未通过 default= 进行设置，则返回 nil。（如果键在 hash 中不存在，则 [] 返回一个默认值。）</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">hash.default = obj</td><td style="text-align:center">为 hash 设置默认值。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">hash.default_proc</td><td style="text-align:center">如果 hash 通过块来创建，则返回块。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">hash.delete(key) [or] array.delete(key) {  &#166;    key&#166;     block }</td><td style="text-align:center">通过 key 从 hash 中删除键值对。如果使用了块 且未找到匹配的键值对，则返回块的结果。把它与 delete_if 进行比较。</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">hash.delete_if { &#166;    key,value &#166;     block }</td><td style="text-align:center">block 为 true 的每个块，从 hash 中删除键值对。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">hash.each { &#166;    key,value &#166;     block }</td><td style="text-align:center">遍历 hash，为每个 key 调用一次 block，传递 key-value 作为一个二元素数组。</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">hash.each_key {  &#166;    key &#166;     block }</td><td style="text-align:center">遍历 hash，为每个 key 调用一次 block，传递 key 作为参数。</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">hash.each_key {  &#166;    key_value_array &#166;     block }</td><td style="text-align:center">遍历 hash，为每个 key 调用一次 block，传递 key 和 value 作为参数。</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">hash.each_value { &#166;    value &#166;     block }</td><td style="text-align:center">遍历 hash，为每个 key 调用一次 block，传递 value 作为参数。</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">hash.empty?</td><td style="text-align:center">检查 hash 是否为空（不包含键值对），返回 true 或 false。</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">hash.fetch(key [, default] ) [or] hash.fetch(key) { &#166;     key &#166;     block }</td><td style="text-align:center">通过给定的 key 从 hash 返回值。如果未找到 key，且未提供其他参数，则抛出 IndexError 异常；如果给出了 default，则返回 default；如果指定了可选的 block，则返回 block 的结果。</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">hash.has_key?(key) [or] hash.include?(key) [or] hash.key?(key) [or] hash.member?(key)</td><td style="text-align:center">检查给定的 key 是否存在于哈希中，返回 true 或 false。</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">hash.has_value?(value)</td><td style="text-align:center">检查哈希是否包含给定的 value。</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">hash.index(value)</td><td style="text-align:center">为给定的 value 返回哈希中的 key，如果未找到匹配值则返回 nil。</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">hash.indexes(keys)</td><td style="text-align:center">返回一个新的数组，由给定的键的值组成。找不到的键将插入默认值。该方法已被废弃，请使用 select。</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">hash.indices(keys)</td><td style="text-align:center">返回一个新的数组，由给定的键的值组成。找不到的键将插入默认值。该方法已被废弃，请使用 select。</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">hash.inspect</td><td style="text-align:center">返回哈希的打印字符串版本。</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">hash.invert</td><td style="text-align:center">创建一个新的 hash，倒置 hash 中的 keys 和 values。也就是说，在新的哈希中，hash 中的键将变成值，值将变成键。</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">hash.keys</td><td style="text-align:center">创建一个新的数组，带有 hash 中的键。</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">hash.length</td><td style="text-align:center">以整数形式返回 hash 的大小或长度。</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">hash.merge(other_hash) [or] hash.merge(other_hash) { &#166;    key, oldval, newval &#166;     block }</td><td style="text-align:center">返回一个新的哈希，包含 hash 和 other_hash 的内容，重写 hash 中与 other_hash 带有重复键的键值对。</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">hash.merge!(other_hash) [or] hash.merge!(other_hash) {  &#166;    key, oldval, newval&#166;     block }</td><td style="text-align:center">与 merge 相同，但实际上 hash 发生了变化。</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">hash.rehash</td><td style="text-align:center">基于每个 key 的当前值重新建立 hash。如果插入后值发生了改变，该方法会重新索引 hash。</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">hash.reject { &#166;    key, value &#166;     block }</td><td style="text-align:center">类似 delete_if, 但作用在一个拷贝的哈希上。相等于 hsh.dup.delete_if。</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">hash.reject! { &#166;    key, value &#166;     block }</td><td style="text-align:center">相等于 delete_if, 但是如果没有修改，返回 nil。</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">hash.replace(other_hash)</td><td style="text-align:center">把 hash 的内容替换为 other_hash 的内容。</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">hash.select { &#166;    key, value &#166;     block }</td><td style="text-align:center">返回一个新的数组，由 block 返回 true 的 hash 中的键值对组成。</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">hash.shift</td><td style="text-align:center">从 hash 中移除一个键值对，并把该键值对作为二元素数组返回。</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">hash.size</td><td style="text-align:center">以整数形式返回 hash 的 size 或 length。</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">hash.sort</td><td style="text-align:center">把 hash 转换为一个包含键值对数组的二维数组，然后进行排序。</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">hash.store(key, value)</td><td style="text-align:center">存储 hash 中的一个键值对。</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">hash.to_a</td><td style="text-align:center">从 hash 中创建一个二维数组。每个键值对转换为一个数组，所有这些数组都存储在一个数组中。</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">hash.to_hash</td><td style="text-align:center">返回 hash（self）。</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">hash.to_s</td><td style="text-align:center">把 hash 转换为一个数组，然后把该数组转换为一个字符串。</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">hash.update(other_hash) [or] hash.update(other_hash) { &#166;    key, oldval, newval&#166;     block}</td><td style="text-align:center">返回一个新的哈希，包含 hash 和 other_hash 的内容，重写 hash 中与 other_hash 带有重复键的键值对。</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">hash.value?(value)</td><td style="text-align:center">检查 hash 是否包含给定的 value。</td></tr><tr><td style="text-align:center">41</td><td style="text-align:center">hash.values</td><td style="text-align:center">返回一个新的数组，包含 hash 的所有值。</td></tr><tr><td style="text-align:center">42</td><td style="text-align:center">hash.values_at(obj, …)</td><td style="text-align:center">返回一个新的数组，包含 hash 中与给定的键相关的值。</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby Array</title>
      <link href="/2019/09/09/ruby-15/"/>
      <url>/2019/09/09/ruby-15/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-数组（Array）"><a href="#Ruby-数组（Array）" class="headerlink" title="Ruby 数组（Array）"></a>Ruby 数组（Array）</h3><p>Ruby 数组是任何对象的有序整数索引集合。数组中的每个元素都与一个索引相关，并可通过索引进行获取。</p><ul><li>数组的索引从 0 开始，这与 C 或 Java 中一样。一个负数的索相对于数组的末尾计数的，也就是说，索引为 -1 表示数组的最后一个元素，-2 表示数组中的倒数第二个元素，依此类推。</li><li>Ruby 数组可存储诸如 String、 Integer、 Fixnum、 Hash、 Symbol 等对象，甚至可以是其他 Array 对象。</li><li>Ruby 数组不需要指定大小，当向数组添加元素时，Ruby 数组会自动增长。</li></ul><h4 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h4><p>有多种方式创建或初始化数组。一种方式是通过 new 类方法：</p><pre><code>names = Array.new</code></pre><p>您可以在创建数组的同时设置数组的大小：</p><pre><code>names = Array.new(20)</code></pre><p>数组 names 的大小或长度为 20 个元素。您可以使用 size 或 length 方法返回数组的大小：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubynames = Array.new(20)puts names.size  # 返回 20puts names.length # 返回 20</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>20<br>20</p></blockquote></div></div><p>您可以给数组中的每个元素赋值，如下所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubynames = Array.new(4, &quot;mac&quot;)puts &quot;#{names}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[“mac”, “mac”, “mac”, “mac”]</p></blockquote></div></div><p>您也可以使用带有 new 的块，每个元素使用块中的计算结果来填充：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubynums = Array.new(10) { |e| e = e * 2 }puts &quot;#{nums}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</p></blockquote></div></div><p>数组还有另一种方法，[]，如下所示：</p><pre><code>nums = Array.[](1, 2, 3, 4,5)</code></pre><p>数组创建的另一种形式如下所示：</p><pre><code>nums = Array[1, 2, 3, 4,5]</code></pre><p>在 Ruby 核心模块中可以有一个只接收单个参数的 Array 方法，该方法使用一个范围作为参数来创建一个数字数组：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubydigits = Array(0..9)puts &quot;#{digits}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</p></blockquote></div></div><h4 id="数组内建方法"><a href="#数组内建方法" class="headerlink" title="数组内建方法"></a>数组内建方法</h4><p>我们需要有一个 Array 对象的实例来调用 Array 方法。下面是创建 Array 对象实例的方式：</p><p><code>Array.[](...) [or] Array[...] [or] [...]</code></p><p>这将返回一个使用给定对象进行填充的新数组。现在，使用创建的对象，我们可以调用任意可用的方法。例如：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubydigits = Array(0..9)num = digits.at(6)puts &quot;#{num}&quot;</code></pre><p>以上实例运行输出结果为：<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>6</p></blockquote></div></div><br>下面是公共的数组方法（假设 array 是一个 Array 对象）：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">array &amp; other_array</td><td style="text-align:center">返回一个新的数组，包含两个数组中共同的元素，没有重复。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">array <em> int [or] array </em> str</td><td style="text-align:center">返回一个新的数组，新数组通过连接 self 的 int 副本创建的。带有 String 参数时，相当于 self.join(str)。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">array + other_array</td><td style="text-align:center">返回一个新的数组，新数组通过连接两个数组产生第三个数组创建的。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">array - other_array</td><td style="text-align:center">返回一个新的数组，新数组是从初始数组中移除了在 other_array 中出现的项的副本。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">str &lt;=&gt; other_str</td><td style="text-align:center">把 str 与 other_str 进行比较，返回 -1（小于）、0（等于）或 1（大于）。比较是区分大小写的。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">array &#166;     other_array</td><td style="text-align:center">通过把 other_array 加入 array 中，移除重复项，返回一个新的数组。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">array &lt;&lt; obj</td><td style="text-align:center">把给定的对象附加到数组的末尾。该表达式返回数组本身，所以几个附加可以连在一起。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">array &lt;=&gt; other_array</td><td style="text-align:center">如果数组小于、等于或大于 other_array，则返回一个整数（-1、 0 或 +1）。</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">array == other_array</td><td style="text-align:center">如果两个数组包含相同的元素个数，且每个元素与另一个数组中相对应的元素相等（根据 Object.==），那么这两个数组相等。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">array[index] [or] array[start, length] [or] array[range] [or] array.slice(index) [or] array.slice(start, length) [or] array.slice(range)</td><td style="text-align:center">返回索引为 index 的元素，或者返回从 start 开始直至 length 个元素的子数组，或者返回 range 指定的子数组。负值索引从数组末尾开始计数（-1 是最后一个元素）。如果 index（或开始索引）超出范围，则返回 nil。</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">array[index] = obj [or] array[start, length] = obj or an_array or nil [or]  array[range] = obj or an_array or nil</td><td style="text-align:center">设置索引为 index 的元素，或者替换从 start 开始直至 length 个元素的子数组，或者替换 range 指定的子数组。如果索引大于数组的当前容量，那么数组会自动增长。负值索引从数组末尾开始计数。如果 length 为零则插入元素。如果在第二种或第三种形式中使用了 nil，则从 self 删除元素。</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">array.abbrev(pattern = nil)</td><td style="text-align:center">为 self 中的字符串计算明确的缩写集合。如果传递一个模式或一个字符串，只考虑当字符串匹配模式或者以该字符串开始时的情况。</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">array.assoc(obj)</td><td style="text-align:center">搜索一个数组，其元素也是数组，使用 obj.== 把 obj 与每个包含的数组的第一个元素进行比较。如果匹配则返回第一个包含的数组，如果未找到匹配则返回 nil。</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">array.at(index)</td><td style="text-align:center">返回索引为 index 的元素。一个负值索引从 self 的末尾开始计数。如果索引超出范围则返回 nil。</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">array.clear</td><td style="text-align:center">从数组中移除所有的元素。</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">array.collect { &#166;    item&#166;     block } [or]array.map { &#166;    item&#166;     block }</td><td style="text-align:center">为 self 中的每个元素调用一次 block。创建一个新的数组，包含 block 返回的值。</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">array.collect! { &#166;    item &#166;     block } [or]array.map! { &#166;    item&#166;     block }</td><td style="text-align:center">为 self 中的每个元素调用一次 block，把元素替换为 block 返回的值。</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">array.compact</td><td style="text-align:center">返回 self 的副本，移除了所有的 nil 元素。</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">array.compact!</td><td style="text-align:center">从数组中移除所有的 nil 元素。如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">array.concat(other_array)</td><td style="text-align:center">追加 other_array 中的元素到 self 中。</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">array.delete(obj) [or] array.delete(obj) { block }</td><td style="text-align:center">从 self 中删除等于 obj 的项。如果未找到相等项，则返回 nil。如果未找到相等项且给出了可选的代码 block，则返回 block 的结果。</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">array.delete_at(index)</td><td style="text-align:center">删除指定的 index 处的元素，并返回该元素。如果 index 超出范围，则返回 nil。</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">array.delete_if { &#166;    item&#166;     block }</td><td style="text-align:center">当 block 为 true 时，删除 self 的每个元素。</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">array.each { &#166;    item &#166;     block }</td><td style="text-align:center">为 self 中的每个元素调用一次 block，传递该元素作为参数。</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">array.each_index { &#166;    index&#166;     block }</td><td style="text-align:center">与 Array#each 相同，但是传递元素的 index，而不是传递元素本身。</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">array.empty?</td><td style="text-align:center">如果数组本身没有包含元素，则返回 true。</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">array.eql?(other)</td><td style="text-align:center">如果 array 和 other 是相同的对象，或者两个数组带有相同的内容，则返回 true。</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">array.fetch(index) [or] array.fetch(index, default) [or] array.fetch(index) { &#166;    index &#166;     block }</td><td style="text-align:center">尝试返回位置 index 处的元素。如果 index 位于数组外部，则第一种形式会抛出 IndexError 异常，第二种形式会返回 default，第三种形式会返回调用 block 传入 index 的值。负值的 index 从数组末尾开始计数。</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">array.fill(obj) [or] array.fill(obj, start [, length]) [or] array.fill(obj, range) [or] array.fill { &#166;    index &#166;     block } [or] array.fill(start [, length] ) { &#166;    index&#166;     block } [or] array.fill(range) {  &#166;    index &#166;     block }</td><td style="text-align:center">前面三种形式设置 self 的被选元素为 obj。以 nil 开头相当于零。nil 的长度相当于 self.length。最后三种形式用 block 的值填充数组。block 通过带有被填充的每个元素的绝对索引来传递。</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">array.first [or] array.first(n)</td><td style="text-align:center">返回数组的第一个元素或前 n 个元素。如果数组为空，则第一种形式返回 nil，第二种形式返回一个空的数组。</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">array.flatten</td><td style="text-align:center">返回一个新的数组，新数组是一个一维的扁平化的数组（递归）。</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">array.flatten!</td><td style="text-align:center">把 array 进行扁平化。如果没有变化则返回 nil。（数组不包含子数组。）</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">array.frozen?</td><td style="text-align:center">如果 array 被冻结（或排序时暂时冻结），则返回 true。</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">array.hash</td><td style="text-align:center">计算数组的哈希代码。两个具有相同内容的数组将具有相同的哈希代码。</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">array.include?(obj)</td><td style="text-align:center">如果 self 中包含 obj，则返回 true，否则返回 false。</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">array.index(obj)</td><td style="text-align:center">返回 self 中第一个等于 obj 的对象的 index。如果未找到匹配则返回 nil。</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">array.indexes(i1, i2, … iN) [or] array.indices(i1, i2, … iN)</td><td style="text-align:center">该方法在 Ruby 的最新版本中被废弃，所以请使用 Array#values_at。</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">array.indices(i1, i2, … iN) [or] array.indexes(i1, i2, … iN)</td><td style="text-align:center">该方法在 Ruby 的最新版本中被废弃，所以请使用 Array#values_at。</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">array.insert(index, obj…)</td><td style="text-align:center">在给定的 index 的元素前插入给定的值，index 可以是负值。</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">array.inspect</td><td style="text-align:center">创建一个数组的可打印版本。</td></tr><tr><td style="text-align:center">41</td><td style="text-align:center">array.join(sep=$,)</td><td style="text-align:center">返回一个字符串，通过把数组的每个元素转换为字符串，并使用 sep 分隔进行创建的。</td></tr><tr><td style="text-align:center">42</td><td style="text-align:center">array.last [or] array.last(n)</td><td style="text-align:center">返回 self 的最后一个元素。如果数组为空，则第一种形式返回 nil。</td></tr><tr><td style="text-align:center">43</td><td style="text-align:center">array.length</td><td style="text-align:center">返回 self 中元素的个数。可能为零。</td></tr><tr><td style="text-align:center">44</td><td style="text-align:center">array.map { &#166;    item &#166;     block } [or] array.collect { &#166;     item &#166;     block }</td><td style="text-align:center">为 self 的每个元素调用一次 block。创建一个新的数组，包含 block 返回的值。</td></tr><tr><td style="text-align:center">45</td><td style="text-align:center">array.map! { &#166;    item &#166;     block } [or]array.collect! { &#166;    item &#166;     block }</td><td style="text-align:center">为 array 的每个元素调用一次 block，把元素替换为 block 返回的值。</td></tr><tr><td style="text-align:center">46</td><td style="text-align:center">array.nitems</td><td style="text-align:center">返回 self 中 non-nil 元素的个数。可能为零。</td></tr><tr><td style="text-align:center">47</td><td style="text-align:center">array.pack(aTemplateString)</td><td style="text-align:center">根据 aTemplateString 中的指令，把数组的内容压缩为二进制序列。指令 A、 a 和 Z 后可以跟一个表示结果字段宽度的数字。剩余的指令也可以带有一个表示要转换的数组元素个数的数字。如果数字是一个星号（*），则所有剩余的数组元素都将被转换。任何指令后都可以跟一个下划线（_），表示指定类型使用底层平台的本地尺寸大小，否则使用独立于平台的一致的尺寸大小。在模板字符串中空格会被忽略。</td></tr><tr><td style="text-align:center">48</td><td style="text-align:center">array.pop</td><td style="text-align:center">从 array 中移除最后一个元素，并返回该元素。如果 array 为空则返回 nil。</td></tr><tr><td style="text-align:center">49</td><td style="text-align:center">array.push(obj, …)</td><td style="text-align:center">把给定的 obj 附加到数组的末尾。该表达式返回数组本身，所以几个附加可以连在一起。</td></tr><tr><td style="text-align:center">50</td><td style="text-align:center">array.rassoc(key)</td><td style="text-align:center">搜索一个数组，其元素也是数组，使用 == 把 key 与每个包含的数组的第二个元素进行比较。如果匹配则返回第一个包含的数组。</td></tr><tr><td style="text-align:center">51</td><td style="text-align:center">array.reject { &#166;    item &#166;     block }</td><td style="text-align:center">返回一个新的数组，包含当 block 不为 true 时的数组项。</td></tr><tr><td style="text-align:center">52</td><td style="text-align:center">array.reject! { &#166;    item &#166;     block }</td><td style="text-align:center">当 block 为真时，从 array 删除元素，如果没有变化则返回 nil。相当于 Array#delete_if。</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">array.replace(other_array)</td><td style="text-align:center">把 array 的内容替换为 other_array 的内容，必要的时候进行截断或扩充。</td></tr><tr><td style="text-align:center">54</td><td style="text-align:center">array.reverse</td><td style="text-align:center">返回一个新的数组，包含倒序排列的数组元素。</td></tr><tr><td style="text-align:center">55</td><td style="text-align:center">array.reverse!</td><td style="text-align:center">把 array 进行逆转。</td></tr><tr><td style="text-align:center">56</td><td style="text-align:center">array.reverse_each {&#166;    item &#166;     block }</td><td style="text-align:center">与 Array#each 相同，但是把 array 进行逆转。</td></tr><tr><td style="text-align:center">57</td><td style="text-align:center">array.rindex(obj)</td><td style="text-align:center">返回 array 中最后一个等于 obj 的对象的索引。如果未找到匹配，则返回 nil。</td></tr><tr><td style="text-align:center">58</td><td style="text-align:center">array.select { &#166;    item &#166;     block }</td><td style="text-align:center">调用从数组传入连续元素的 block，返回一个数组，包含 block 返回 true 值时的元素。</td></tr><tr><td style="text-align:center">59</td><td style="text-align:center">array.shift</td><td style="text-align:center">返回 self 的第一个元素，并移除该元素（把所有的其他元素下移一位）。如果数组为空，则返回 nil。</td></tr><tr><td style="text-align:center">60</td><td style="text-align:center">array.size</td><td style="text-align:center">返回 array 的长度（元素的个数）。length 的别名。</td></tr><tr><td style="text-align:center">61</td><td style="text-align:center">array.slice(index) [or] array.slice(start, length) [or] array.slice(range) [or] array[index] [or] array[start, length] [or] array[range]</td><td style="text-align:center">返回索引为 index 的元素，或者返回从 start 开始直至 length 个元素的子数组，或者返回 range 指定的子数组。负值索引从数组末尾开始计数（-1 是最后一个元素）。如果 index（或开始索引）超出范围，则返回 nil。</td></tr><tr><td style="text-align:center">62</td><td style="text-align:center">array.slice!(index) [or] array.slice!(start, length) [or] array.slice!(range)</td><td style="text-align:center">删除 index（长度是可选的）或 range 指定的元素。返回被删除的对象、子数组，如果 index 超出范围，则返回 nil。</td></tr><tr><td style="text-align:center">63</td><td style="text-align:center">array.sort [or] array.sort { &#166;     a,b &#166;     block }</td><td style="text-align:center">返回一个排序的数组。</td></tr><tr><td style="text-align:center">64</td><td style="text-align:center">array.sort! [or] array.sort! { &#166;     a,b &#166;     block }</td><td style="text-align:center">把数组进行排序。</td></tr><tr><td style="text-align:center">65</td><td style="text-align:center">array.to_a</td><td style="text-align:center">返回 self。如果在 Array 的子类上调用，则把接收参数转换为一个 Array 对象。</td></tr><tr><td style="text-align:center">66</td><td style="text-align:center">array.to_ary</td><td style="text-align:center">返回 self。</td></tr><tr><td style="text-align:center">67</td><td style="text-align:center">array.to_s</td><td style="text-align:center">返回 self.join。</td></tr><tr><td style="text-align:center">68</td><td style="text-align:center">array.transpose</td><td style="text-align:center">假设 self 是数组的数组，且置换行和列。</td></tr><tr><td style="text-align:center">69</td><td style="text-align:center">array.uniq</td><td style="text-align:center">返回一个新的数组，移除了 array 中的重复值。</td></tr><tr><td style="text-align:center">70</td><td style="text-align:center">array.uniq!</td><td style="text-align:center">从 self 中移除重复元素。如果没有变化（也就是说，未找到重复），则返回 nil。</td></tr><tr><td style="text-align:center">71</td><td style="text-align:center">array.unshift(obj, …)</td><td style="text-align:center">把对象前置在数组的前面，其他元素上移一位。</td></tr><tr><td style="text-align:center">72</td><td style="text-align:center">array.values_at(selector,…)</td><td style="text-align:center">返回一个数组，包含 self 中与给定的 selector（一个或多个）相对应的元素。选择器可以是整数索引或者范围。</td></tr><tr><td style="text-align:center">73</td><td style="text-align:center">array.zip(arg, …) [or] array.zip(arg, …){ &#166;     arr &#166;     block }</td><td style="text-align:center">把任何参数转换为数组，然后把 array 的元素与每个参数中相对应的元素合并。</td></tr></tbody></table><h3 id="数组-pack-指令"><a href="#数组-pack-指令" class="headerlink" title="数组 pack 指令"></a>数组 pack 指令</h3><p>下表列出了方法 Array#pack 的压缩指令。</p><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">@</td><td style="text-align:center">移动到绝对位置。</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">ASCII 字符串（填充 space，count 是宽度）。</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">ASCII 字符串（填充 null，count 是宽度）。</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">位字符串（降序）</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">位字符串（升序）。</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">无符号字符。</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">字符。</td></tr><tr><td style="text-align:center">D, d</td><td style="text-align:center">双精度浮点数，原生格式。</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">双精度浮点数，little-endian 字节顺序。</td></tr><tr><td style="text-align:center">e</td><td style="text-align:center">单精度浮点数，little-endian 字节顺序。</td></tr><tr><td style="text-align:center">F, f</td><td style="text-align:center">单精度浮点数，原生格式。</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">双精度浮点数，network（big-endian）字节顺序。</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">单精度浮点数，network（big-endian）字节顺序。</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">十六进制字符串（高位优先）。</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center">十六进制字符串（低位优先）。</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">无符号整数。</td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">整数。</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">无符号 long。</td></tr><tr><td style="text-align:center">l</td><td style="text-align:center">Long。</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">引用可打印的，MIME 编码。</td></tr><tr><td style="text-align:center">m</td><td style="text-align:center">Base64 编码字符串。</td></tr><tr><td style="text-align:center">N</td><td style="text-align:center">Long，network（big-endian）字节顺序。</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">Short，network（big-endian）字节顺序。</td></tr><tr><td style="text-align:center">P</td><td style="text-align:center">指向一个结构（固定长度的字符串）。</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">指向一个空结束字符串。</td></tr><tr><td style="text-align:center">Q, q</td><td style="text-align:center">64 位数字。</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">无符号 short。</td></tr><tr><td style="text-align:center">s</td><td style="text-align:center">Short。</td></tr><tr><td style="text-align:center">U</td><td style="text-align:center">UTF-8。</td></tr><tr><td style="text-align:center">u</td><td style="text-align:center">UU 编码字符串。</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">Long，little-endian 字节顺序。</td></tr><tr><td style="text-align:center">v</td><td style="text-align:center">Short，little-endian 字节顺序。</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">BER 压缩的整数 \fnm。</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">向后跳过一个字节。</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center">Null 字节。</td></tr><tr><td style="text-align:center">Z</td><td style="text-align:center">与 a 相同，除了 null 会被加上 *。</td></tr></tbody></table><p><strong>实例</strong><br>尝试下面的实例，压缩各种数据。</p><pre><code>a = [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ]n = [ 65, 66, 67 ]puts a.pack(&quot;A3A3A3&quot;)   #=&gt; &quot;a  b  c  &quot;puts a.pack(&quot;a3a3a3&quot;)   #=&gt; &quot;a\000\000b\000\000c\000\000&quot;puts n.pack(&quot;ccc&quot;)      #=&gt; &quot;ABC&quot;</code></pre><p>以上实例运行输出结果为：</p><blockquote><p>a  b  c<br>abc<br>ABC</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby String</title>
      <link href="/2019/09/09/ruby-14/"/>
      <url>/2019/09/09/ruby-14/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-字符串（String）"><a href="#Ruby-字符串（String）" class="headerlink" title="Ruby 字符串（String）"></a>Ruby 字符串（String）</h3><ul><li><p>Ruby 中的 String 对象用于存储或操作一个或多个字节的序列。</p></li><li><p>Ruby 字符串分为单引号字符串（’）和双引号字符串（”），区别在于双引号字符串能够支持更多的转义字符。</p></li></ul><h3 id="单引号字符串"><a href="#单引号字符串" class="headerlink" title="单引号字符串"></a>单引号字符串</h3><p>最简单的字符串是单引号字符串，即在单引号内存放字符串：</p><p><code>&#39;这是一个 Ruby 程序的字符串&#39;</code></p><p>如果您需要在单引号字符串内使用单引号字符，那么需要在单引号字符串使用反斜杠()，这样 Ruby 解释器就不会认为这个单引号字符是字符串的终止符号：</p><p><code>&#39;Won\&#39;t you read O\&#39;Reilly\&#39;s book?&#39;</code></p><p>反斜杠也能转义另一个反斜杠，这样第二个反斜杠本身不会解释为转义字符。</p><p>以下是 Ruby 中字符串相关的特性。</p><h3 id="双引号字符串"><a href="#双引号字符串" class="headerlink" title="双引号字符串"></a>双引号字符串</h3><p>在双引号字符串中我们可以使用 #{} 井号和大括号来计算表达式的值：</p><p>字符串中嵌入变量：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-name1 = &quot;Joe&quot;name2 = &quot;Mary&quot;puts &quot;你好 #{name1},  #{name2} 在哪?&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>你好 Joe,  Mary 在哪?</p></blockquote></div></div><h4 id="字符串中进行数学运算："><a href="#字符串中进行数学运算：" class="headerlink" title="字符串中进行数学运算："></a>字符串中进行数学运算：</h4><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-x, y, z = 12, 36, 72puts &quot;x 的值为 #{ x }&quot;puts &quot;x + y 的值为 #{ x + y }&quot;puts &quot;x + y + z 的平均值为 #{ (x + y + z)/3 }&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>x 的值为 12<br>x + y 的值为 48<br>x + y + z 的平均值为 40</p></blockquote></div></div><p>Ruby 中还支持一种采用 %q 和 %Q 来引导的字符串变量，%q 使用的是单引号引用规则，而 %Q 是双引号引用规则，后面再接一个 (! [ { 等等的开始界定符和与 } ] ) 等等的末尾界定符。</p><p>跟在 q 或 Q 后面的字符是分界符.分界符可以是任意一个非字母数字的单字节字符.如:[,{,(,&lt;,!等,字符串会一直读取到发现相匹配的结束符为止 .</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-desc1 = %Q{Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。}desc2 = %q|Ruby 的字符串可以使用 &#39;&#39; 和 &quot;&quot;。|puts desc1puts desc2</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Ruby 的字符串可以使用 ‘’ 和 “”。<br>Ruby 的字符串可以使用 ‘’ 和 “”。</p></blockquote></div></div><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>下标列出了可使用反斜杠符号转义的转义字符或非打印字符。</p><p><code>在一个双引号括起的字符串内，转义字符会被解析。在一个单引号括起的字符串内，转义字符不会被解析，原样输出。</code></p><table><thead><tr><th style="text-align:center">反斜杠符号</th><th style="text-align:center">十六进制字符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">\a</td><td style="text-align:center">0x07</td><td style="text-align:center">报警符</td></tr><tr><td style="text-align:center">\b</td><td style="text-align:center">0x08</td><td style="text-align:center">退格键</td></tr><tr><td style="text-align:center">\cx</td><td style="text-align:center"></td><td style="text-align:center">Control-x</td></tr><tr><td style="text-align:center">\C-x</td><td style="text-align:center">Control-x</td></tr><tr><td style="text-align:center">\e</td><td style="text-align:center">0x1b</td><td style="text-align:center">转义符</td></tr><tr><td style="text-align:center">\f</td><td style="text-align:center">0x0c</td><td style="text-align:center">换页符</td></tr><tr><td style="text-align:center">\M-\C-x</td><td style="text-align:center"></td><td style="text-align:center">Meta-Control-x</td></tr><tr><td style="text-align:center">\n</td><td style="text-align:center">0x0a</td><td style="text-align:center">换行符</td></tr><tr><td style="text-align:center">\nnn</td><td style="text-align:center"></td><td style="text-align:center">八进制表示法，其中 n 的范围为 0.7</td></tr><tr><td style="text-align:center">\r</td><td style="text-align:center">0x0d</td><td style="text-align:center">回车符</td></tr><tr><td style="text-align:center">\s</td><td style="text-align:center">0x20</td><td style="text-align:center">空格符</td></tr><tr><td style="text-align:center">\t</td><td style="text-align:center">0x09</td><td style="text-align:center">制表符</td></tr><tr><td style="text-align:center">\v</td><td style="text-align:center">0x0b</td><td style="text-align:center">垂直制表符</td></tr><tr><td style="text-align:center">\x</td><td style="text-align:center"></td><td style="text-align:center">字符 x</td></tr><tr><td style="text-align:center">\xnn</td><td style="text-align:center"></td><td style="text-align:center">十六进制表示法，其中 n 的范围为 0.9、 a.f 或 A.F</td></tr></tbody></table><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>Ruby 的默认字符集是 ASCII，字符可用单个字节表示。如果您使用 UTF-8 或其他现代的字符集，字符可能是用一个到四个字节表示。</p><p>您可以在程序开头使用 $KCODE 改变字符集，如下所示：</p><pre><code>$KCODE = &#39;u&#39;</code></pre><p>下面是 $KCODE 可能的值。</p><table><thead><tr><th style="text-align:center">编码</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">a</td><td style="text-align:center">ASCII （与 none 相同）。这是默认的。</td></tr><tr><td style="text-align:center">e</td><td style="text-align:center">EUC。</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">None （与 ASCII 相同）。</td></tr><tr><td style="text-align:center">u</td><td style="text-align:center">UTF-8。</td></tr></tbody></table><p><code>在ruby 1.9版本KODE取消,默认采用unicode 编码</code></p><h3 id="字符串内建方法"><a href="#字符串内建方法" class="headerlink" title="字符串内建方法"></a>字符串内建方法</h3><p>我们需要有一个 String 对象的实例来调用 String 方法。下面是创建 String 对象实例的方式：</p><pre><code>new [String.new(str=&quot;&quot;)]</code></pre><p>这将返回一个包含 str 副本的新的字符串对象。现在，使用 str 对象，我们可以调用任意可用的实例方法。例如：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubymyStr = String.new(&quot;THIS IS TEST&quot;)foo = myStr.downcaseputs &quot;#{foo}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>this is test</p></blockquote></div></div><p>下面是公共的字符串方法（假设 str 是一个 String 对象）：</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法 &amp; 描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><strong>str % arg</strong> 使用格式规范格式化字符串。如果 arg 包含一个以上的替代，那么 arg 必须是一个数组。如需了解更多格式规范的信息，请查看”内核模块”下的 sprintf。</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><strong>str * integer</strong> 返回一个包含 integer 个 str 的新的字符串。换句话说，str 被重复了 integer 次。</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><strong>str + other_str</strong> 连接 other_str 到 str。</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><strong>str &lt;&lt; obj</strong> 连接一个对象到字符串。如果对象是范围为 0.255 之间的固定数字 Fixnum，则它会被转换为一个字符。把它与 concat 进行比较。</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><strong>str &lt;=&gt; other_str</strong>把 str 与 other_str 进行比较，返回 -1（小于）、0（等于）或 1（大于）。比较是区分大小写的。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><strong>str == obj</strong>检查 str 和 obj 的相等性。如果 obj 不是字符串，则返回 false，如果 str &lt;=&gt; obj，则返回 true，返回 0。</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><strong>str =~ obj</strong>根据正则表达式模式 obj 匹配 str。返回匹配开始的位置，否则返回 false。</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><strong>str[position]</strong> # 注意返回的是ASCII码而不是字符 <strong>str[start, length]</strong> <strong>str[start..end]</strong> <strong>str[start…end]</strong> 使用索引截取子串</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><strong>str.capitalize</strong> 把字符串转换为大写字母显示。</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><strong>str.capitalize!</strong> 与 <strong>capitalize</strong> 相同，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><strong>str.casecmp</strong> 不区分大小写的字符串比较。</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><strong>str.center</strong> 居中字符串。</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><strong>str.chomp</strong> 从字符串末尾移除记录分隔符（$/），通常是 \n。如果没有记录分隔符，则不进行任何操作。</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><strong>str.chomp!</strong> 与 chomp 相同，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><strong>str.chop</strong> 移除 str 中的最后一个字符。</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><strong>str.chop!</strong> 与 chop 相同，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><strong>str.concat(other_str)</strong> 连接 other_str 到 str。</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><strong>str.count(str, …)</strong> 给一个或多个字符集计数。如果有多个字符集，则给这些集合的交集计数。</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><strong>str.crypt(other_str)</strong> 对 str 应用单向加密哈希。参数是两个字符长的字符串，每个字符的范围为 a.z、 A.Z、 0.9、 . 或 /。</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><strong>str.delete(other_str, …)</strong>返回 str 的副本，参数交集中的所有字符会被删除。</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">str.delete!(other_str, …) 与 delete 相同，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">str.downcase 返回 str 的副本，所有的大写字母会被替换为小写字母。</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">str.downcase!与 downcase 相同，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">str.dump 返回 str 的版本，所有的非打印字符被替换为 \nnn 符号，所有的特殊字符被转义。</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center">str.each(separator=$/) { &#166;    substr&#166;     block } 使用参数作为记录分隔符（默认是 $/）分隔 str，传递每个子字符串给被提供的块。</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center">str.each_byte { &#166;    fixnum &#166;     block } 传递 str 的每个字节给 block，以字节的十进制表示法返回每个字节。</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center">str.each_line(separator=$/) { &#166;    substr&#166;     block } 使用参数作为记录分隔符（默认是 $/）分隔 str，传递每个子字符串给被提供的 block。</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center">str.empty? 如果 str 为空（即长度为 0），则返回 true。</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">str.eql?(other)如果两个字符串有相同的长度和内容，则这两个字符串相等。</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">str.gsub(pattern, replacement) [or] str.gsub(pattern) { &#166;    match&#166;     block } 返回 str 的副本，pattern 的所有出现都替换为 replacement 或 block 的值。pattern 通常是一个正则表达式 Regexp；如果是一个字符串 String，则没有正则表达式元字符被解释（即，/\d/ 将匹配一个数字，但 ‘\d’ 将匹配一个反斜杠后跟一个 ‘d’）。</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">str[fixnum] [or] str[fixnum,fixnum] [or] str[range] [or] str[regexp] [or] str[regexp, fixnum] [or] str[other_str] 使用下列的参数引用 str：参数为一个 Fixnum，则返回 fixnum 的字符编码；参数为两个 Fixnum，则返回一个从偏移（第一个 fixnum）开始截至到长度（第二个 fixnum）为止的子字符串；参数为 range，则返回该范围内的一个子字符串；参数为 regexp，则返回匹配字符串的部分；参数为带有 fixnum 的 regexp，则返回 fixnum 位置的匹配数据；参数为 other_str，则返回匹配 other_str 的子字符串。一个负数的 Fixnum 从字符串的末尾 -1 开始。</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center">str[fixnum] = fixnum [or] str[fixnum] = new_str [or] str[fixnum, fixnum] = new_str [or] str[range] = aString [or] str[regexp] =new_str [or] str[regexp, fixnum] =new_str [or] str[other_str] = new_str ] 替换整个字符串或部分字符串。与 slice! 同义。</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center">str.gsub!(pattern, replacement) [or] str.gsub!(pattern) { &#166;    match &#166;     block } 执行 String#gsub 的替换，返回 str，如果没有替换被执行则返回 nil。</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center">str.hash 返回一个基于字符串长度和内容的哈希。</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center">str.hex 把 str 的前导字符当作十六进制数字的字符串（一个可选的符号和一个可选的 0x），并返回相对应的数字。如果错误则返回零。</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center">str.include? other_str [or] str.include? fixnum  如果 str 包含给定的字符串或字符，则返回 true。</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center">str.index(substring [, offset]) [or] str.index(fixnum [, offset]) [or] str.index(regexp [, offset]) 返回给定子字符串、字符（fixnum）或模式（regexp）在 str 中第一次出现的索引。如果未找到则返回 nil。如果提供了第二个参数，则指定在字符串中开始搜索的位置。</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center">str.insert(index, other_str)在给定索引的字符前插入 other_str，修改 str。负值索引从字符串的末尾开始计数，并在给定字符后插入。其意图是在给定的索引处开始插入一个字符串。</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center">str.inspect返回 str 的可打印版本，带有转义的特殊字符。</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center">str.intern [or] str.to_sym 返回与 str 相对应的符号，如果之前不存在，则创建符号。</td></tr><tr><td style="text-align:center">41</td><td style="text-align:center">str.length 返回 str 的长度。把它与 size 进行比较</td></tr><tr><td style="text-align:center">42</td><td style="text-align:center">str.ljust(integer, padstr=’ ‘)如果 integer 大于 str 的长度，则返回长度为 integer 的新字符串，新字符串以 str 左对齐，并以 padstr 作为填充。否则，返回 str。</td></tr><tr><td style="text-align:center">43</td><td style="text-align:center">str.lstrip返回 str 的副本，移除了前导的空格。</td></tr><tr><td style="text-align:center">44</td><td style="text-align:center">str.lstrip!从 str 中移除前导的空格，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">45</td><td style="text-align:center">str.match(pattern) 如果 pattern 不是正则表达式，则把 pattern 转换为正则表达式 Regexp，然后在 str 上调用它的匹配方法。</td></tr><tr><td style="text-align:center">46</td><td style="text-align:center">str.oct把 str 的前导字符当作十进制数字的字符串（一个可选的符号），并返回相对应的数字。如果转换失败，则返回 0。</td></tr><tr><td style="text-align:center">47</td><td style="text-align:center">str.replace(other_str)把 str 中的内容替换为 other_str 中的相对应的值。</td></tr><tr><td style="text-align:center">48</td><td style="text-align:center">str.reverse返回一个新字符串，新字符串是 str 的倒序。</td></tr><tr><td style="text-align:center">49</td><td style="text-align:center">str.reverse! 逆转 str，str 会发生变化并返回。</td></tr><tr><td style="text-align:center">50</td><td style="text-align:center">str.rindex(substring [, fixnum]) [or] str.rindex(fixnum [, fixnum]) [or] str.rindex(regexp [, fixnum])返回给定子字符串、字符（fixnum）或模式（regexp）在 str 中最后一次出现的索引。如果未找到则返回 nil。如果提供了第二个参数，则指定在字符串中结束搜索的位置。超出该点的字符将不被考虑。</td></tr><tr><td style="text-align:center">51</td><td style="text-align:center">str.rjust(integer, padstr=’ ‘) 如果 integer 大于 str 的长度，则返回长度为 integer 的新字符串，新字符串以 str 右对齐，并以 padstr 作为填充。否则，返回 str。</td></tr><tr><td style="text-align:center">52</td><td style="text-align:center">str.rstrip返回 str 的副本，移除了尾随的空格。</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">str.rstrip!从 str 中移除尾随的空格，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">54</td><td style="text-align:center">str.scan(pattern) [or]str.scan(pattern) { &#166;match, …&#166; block } 两种形式匹配 pattern（可以是一个正则表达式 Regexp 或一个字符串 String）遍历 str。针对每个匹配，会生成一个结果，结果会添加到结果数组中或传递给 block。如果 pattern 不包含分组，则每个独立的结果由匹配的字符串、$&amp; 组成。如果 pattern 包含分组，每个独立的结果是一个包含每个分组入口的数组。</td></tr><tr><td style="text-align:center">55</td><td style="text-align:center">str.slice(fixnum) [or] str.slice(fixnum, fixnum) [or] str.slice(range) [or] str.slice(regexp) [or] str.slice(regexp, fixnum) [or] str.slice(other_str) See str[fixnum], etc.str.slice!(fixnum) [or] str.slice!(fixnum, fixnum) [or] str.slice!(range) [or] str.slice!(regexp) [or] str.slice!(other_str)从 str 中删除指定的部分，并返回删除的部分。如果值超出范围，参数带有 Fixnum 的形式，将生成一个 IndexError。参数为 range 的形式，将生成一个 RangeError，参数为 Regexp 和 String 的形式，将忽略执行动作。</td></tr><tr><td style="text-align:center">56</td><td style="text-align:center">str.split(pattern=$;, [limit]) 基于分隔符，把 str 分成子字符串，并返回这些子字符串的数组。如果 pattern 是一个字符串 String，那么在分割 str 时，它将作为分隔符使用。如果 pattern 是一个单一的空格，那么 str 是基于空格进行分割，会忽略前导空格和连续空格字符。如果 pattern 是一个正则表达式 Regexp，则 str 在 pattern 匹配的地方被分割。当 pattern 匹配一个零长度的字符串时，str 被分割成单个字符.如果省略了 pattern 参数，则使用 $; 的值。如果 $; 为 nil（默认的），str 基于空格进行分割，就像是指定了 <code></code> 作为分隔符一样。如果省略了 limit 参数，会抑制尾随的 null 字段。如果 limit 是一个正数，则最多返回该数量的字段（如果 limit 为 1，则返回整个字符串作为数组中的唯一入口）。如果 limit 是一个负数，则返回的字段数量不限制，且不抑制尾随的 null 字段。</td></tr><tr><td style="text-align:center">57</td><td style="text-align:center">str.squeeze([other_str]*)使用为 String#count 描述的程序从 other_str 参数建立一系列字符。返回一个新的字符串，其中集合中出现的相同的字符会被替换为单个字符。如果没有给出参数，则所有相同的字符都被替换为单个字符。</td></tr><tr><td style="text-align:center">58</td><td style="text-align:center">str.squeeze!([other_str]*)与 squeeze 相同，但是 str 会发生变化并返回，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">59</td><td style="text-align:center">str.strip返回 str 的副本，移除了前导的空格和尾随的空格。</td></tr><tr><td style="text-align:center">60</td><td style="text-align:center">str.strip!从 str 中移除前导的空格和尾随的空格，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">61</td><td style="text-align:center">str.sub(pattern, replacement) [or]str.sub(pattern) { &#166;match&#166; block }返回 str 的副本，pattern 的第一次出现会替换为 replacement 或 block 的值。pattern 通常是一个正则表达式 Regexp；如果是一个字符串 String，则没有正则表达式元字符被解释。</td></tr><tr><td style="text-align:center">62</td><td style="text-align:center">str.sub!(pattern, replacement) [or]str.sub!(pattern) { &#166;match&#166; block }执行 String#sub 替换，并返回 str，如果没有替换执行，则返回 nil。</td></tr><tr><td style="text-align:center">63</td><td style="text-align:center">str.succ [or] str.next 返回 str 的继承。</td></tr><tr><td style="text-align:center">64</td><td style="text-align:center">str.succ! [or] str.next!相当于 String#succ，但是 str 会发生变化并返回。</td></tr><tr><td style="text-align:center">65</td><td style="text-align:center">str.sum(n=16)返回 str 中字符的 n-bit 校验和，其中 n 是可选的 Fixnum 参数，默认为 16。结果是简单地把 str 中每个字符的二进制值的总和，以 2n - 1 为模。这不是一个特别好的校验和。</td></tr><tr><td style="text-align:center">66</td><td style="text-align:center">str.swapcase返回 str 的副本，所有的大写字母转换为小写字母，所有的小写字母转换为大写字母。</td></tr><tr><td style="text-align:center">67</td><td style="text-align:center">str.swapcase!相当于 String#swapcase，但是 str 会发生变化并返回，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">68</td><td style="text-align:center">str.to_f返回把 str 中的前导字符解释为浮点数的结果。超出有效数字的末尾的多余字符会被忽略。如果在 str 的开头没有有效数字，则返回 0.0。该方法不会生成异常。</td></tr><tr><td style="text-align:center">69</td><td style="text-align:center">str.to_i(base=10)返回把 str 中的前导字符解释为整数基数（基数为 2、 8、 10 或 16）的结果。超出有效数字的末尾的多余字符会被忽略。如果在 str 的开头没有有效数字，则返回 0。该方法不会生成异常。</td></tr><tr><td style="text-align:center">70</td><td style="text-align:center">str.to_s [or] str.to_str返回接收的值。</td></tr><tr><td style="text-align:center">71</td><td style="text-align:center">str.tr(from_str, to_str)返回 str 的副本，把 from_str 中的字符替换为 to_str 中相对应的字符。如果 to_str 比 from_str 短，那么它会以最后一个字符进行填充。两个字符串都可以使用 c1.c2 符号表示字符的范围。如果 from_str 以 ^ 开头，则表示除了所列出的字符以外的所有字符。</td></tr><tr><td style="text-align:center">72</td><td style="text-align:center">str.tr!(from_str, to_str)相当于 String#tr，但是 str 会发生变化并返回，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">73</td><td style="text-align:center">str.tr_s(from_str, to_str)把 str 按照 String#tr 描述的规则进行处理，然后移除会影响翻译的重复字符。</td></tr><tr><td style="text-align:center">74</td><td style="text-align:center">str.tr_s!(from_str, to_str)相当于 String#tr_s，但是 str 会发生变化并返回，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">75</td><td style="text-align:center">str.unpack(format)根据 format 字符串解码 str（可能包含二进制数据），返回被提取的每个值的数组。format 字符由一系列单字符指令组成。每个指令后可以跟着一个数字，表示重复该指令的次数。星号（*）将使用所有剩余的元素。指令 sSiIlL 每个后可能都跟着一个下划线（_），为指定类型使用底层平台的本地尺寸大小，否则使用独立于平台的一致的尺寸大小。format 字符串中的空格会被忽略。</td></tr><tr><td style="text-align:center">76</td><td style="text-align:center">str.upcase返回 str 的副本，所有的小写字母会被替换为大写字母。操作是环境不敏感的，只有字符 a 到 z 会受影响。</td></tr><tr><td style="text-align:center">77</td><td style="text-align:center">str.upcase!改变 str 的内容为大写，如果没有变化则返回 nil。</td></tr><tr><td style="text-align:center">78</td><td style="text-align:center">str.upto(other_str) { &#166;s&#166; block }遍历连续值，以 str 开始，以 other_str 结束（包含），轮流传递每个值给 block。String#succ 方法用于生成每个值。</td></tr></tbody></table><h3 id="字符串-unpack-指令"><a href="#字符串-unpack-指令" class="headerlink" title="字符串 unpack 指令"></a>字符串 unpack 指令</h3><p>下表列出了方法 String#unpack 的解压指令。</p><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">返回</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">String</td><td style="text-align:center">移除尾随的 null 和空格。</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">String</td><td style="text-align:center">字符串。</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">String</td><td style="text-align:center">从每个字符中提取位（首先是最高有效位）。</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">String</td><td style="text-align:center">从每个字符中提取位（首先是最低有效位）。</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">Fixnum</td><td style="text-align:center">提取一个字符作为无符号整数。</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">Fixnum</td><td style="text-align:center">提取一个字符作为整数。</td></tr><tr><td style="text-align:center">D, d</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(double) 长度的字符当作原生的 double。</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(double) 长度的字符当作 littleendian 字节顺序的 double。</td></tr><tr><td style="text-align:center">e</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(float) 长度的字符当作 littleendian 字节顺序的 float。</td></tr><tr><td style="text-align:center">F, f</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(float) 长度的字符当作原生的 float。</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(double) 长度的字符当作 network 字节顺序的 double。</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">Float</td><td style="text-align:center">把 sizeof(float) 长度的字符当作 network 字节顺序的 float。</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">String</td><td style="text-align:center">从每个字符中提取十六进制（首先是最高有效位）。</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center">String</td><td style="text-align:center">从每个字符中提取十六进制（首先是最低有效位）。</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">Integer</td><td style="text-align:center">把 sizeof(int) 长度（通过 _ 修改）的连续字符当作原生的 integer。</td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">Integer</td><td style="text-align:center">把 sizeof(int) 长度（通过 _ 修改）的连续字符当作有符号的原生的 integer。</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">Integer</td><td style="text-align:center">把四个（通过 _ 修改）连续字符当作无符号的原生的 long integer。</td></tr><tr><td style="text-align:center">l</td><td style="text-align:center">Integer</td><td style="text-align:center">把四个（通过 _ 修改）连续字符当作有符号的原生的 long integer。</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">String</td><td style="text-align:center">引用可打印的。</td></tr><tr><td style="text-align:center">m</td><td style="text-align:center">String</td><td style="text-align:center">Base64 编码。</td></tr><tr><td style="text-align:center">N</td><td style="text-align:center">Integer</td><td style="text-align:center">把四个字符当作 network 字节顺序的无符号的 long。</td></tr><tr><td style="text-align:center">n</td><td style="text-align:center">Fixnum</td><td style="text-align:center">把两个字符当作 network 字节顺序的无符号的 short。</td></tr><tr><td style="text-align:center">P</td><td style="text-align:center">String</td><td style="text-align:center">把 sizeof(char *) 长度的字符当作指针，并从引用的位置返回 \emph{len} 字符。</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">String</td><td style="text-align:center">把 sizeof(char *) 长度的字符当作一个空结束字符的指针。</td></tr><tr><td style="text-align:center">Q</td><td style="text-align:center">Integer</td><td style="text-align:center">把八个字符当作无符号的 quad word（64 位）。</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">Integer</td><td style="text-align:center">把八个字符当作有符号的 quad word（64 位）。</td></tr><tr><td style="text-align:center">S</td><td style="text-align:center">Fixnum</td><td style="text-align:center">把两个（如果使用 _ 则不同）连续字符当作 native 字节顺序的无符号的 short。</td></tr><tr><td style="text-align:center">s</td><td style="text-align:center">Fixnum</td><td style="text-align:center">把两个（如果使用 _ 则不同）连续字符当作 native 字节顺序的有符号的 short。</td></tr><tr><td style="text-align:center">U</td><td style="text-align:center">Integer</td><td style="text-align:center">UTF-8 字符，作为无符号整数。</td></tr><tr><td style="text-align:center">u</td><td style="text-align:center">String</td><td style="text-align:center">UU 编码。</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">Fixnum</td><td style="text-align:center">把四个字符当作 little-endian 字节顺序的无符号的 long。</td></tr><tr><td style="text-align:center">v</td><td style="text-align:center">Fixnum</td><td style="text-align:center">把两个字符当作 little-endian 字节顺序的无符号的 short。</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">Integer</td><td style="text-align:center">BER 压缩的整数。</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center"></td><td style="text-align:center">向后跳过一个字符。</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center"></td><td style="text-align:center">向前跳过一个字符。</td></tr><tr><td style="text-align:center">Z</td><td style="text-align:center">String</td><td style="text-align:center">和 * 一起使用，移除尾随的 null 直到第一个 null。</td></tr><tr><td style="text-align:center">@</td><td style="text-align:center"></td><td style="text-align:center">跳过 length 参数给定的偏移量。</td></tr></tbody></table><p><strong>实例</strong><br>尝试下面的实例，解压各种数据。</p><pre><code>&quot;abc \0\0abc \0\0&quot;.unpack(&#39;A6Z6&#39;)   #=&gt; [&quot;abc&quot;, &quot;abc &quot;]&quot;abc \0\0&quot;.unpack(&#39;a3a3&#39;)           #=&gt; [&quot;abc&quot;, &quot; \000\000&quot;]&quot;abc \0abc \0&quot;.unpack(&#39;Z*Z*&#39;)       #=&gt; [&quot;abc &quot;, &quot;abc &quot;]&quot;aa&quot;.unpack(&#39;b8B8&#39;)                 #=&gt; [&quot;10000110&quot;, &quot;01100001&quot;]&quot;aaa&quot;.unpack(&#39;h2H2c&#39;)               #=&gt; [&quot;16&quot;, &quot;61&quot;, 97]&quot;\xfe\xff\xfe\xff&quot;.unpack(&#39;sS&#39;)     #=&gt; [-2, 65534]&quot;now=20is&quot;.unpack(&#39;M*&#39;)             #=&gt; [&quot;now is&quot;]&quot;whole&quot;.unpack(&#39;xax2aX2aX1aX2a&#39;)    #=&gt; [&quot;h&quot;, &quot;e&quot;, &quot;l&quot;, &quot;l&quot;, &quot;o&quot;]</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  Module</title>
      <link href="/2019/09/09/ruby-13/"/>
      <url>/2019/09/09/ruby-13/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-模块（Module）"><a href="#Ruby-模块（Module）" class="headerlink" title="Ruby 模块（Module）"></a>Ruby 模块（Module）</h3><p><strong>模块（Module）是一种把方法、类和常量组合在一起的方式。模块（Module）为您提供了两大好处。</strong></p><ul><li>模块提供了一个命名空间和避免名字冲突。</li><li>模块实现了 mixin 装置。</li></ul><p><strong>模块（Module）定义了一个命名空间，相当于一个沙盒，在里边您的方法和常量不会与其他地方的方法常量冲突。</strong><br><strong>模块类似与类，但有一下不同：</strong></p><ul><li>模块不能实例化</li><li>模块没有子类</li><li>模块只能被另一个模块定义</li></ul><p><strong>语法</strong></p><pre><code>module Identifier   statement1   statement2   ...........end</code></pre><p>模块常量命名与类常量命名类似，以大写字母开头。方法定义看起来也相似：模块方法定义与类方法定义类似。</p><p>通过类方法，您可以在类方法名称前面放置模块名称和一个点号来调用模块方法，您可以使用模块名称和两个冒号来引用一个常量。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 定义在 trig.rb 文件中的模块module Trig   PI = 3.141592654   def Trig.sin(x)   # ..   end   def Trig.cos(x)   # ..   endend</code></pre><p>我们可以定义多个函数名称相同但是功能不同的模块：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# 定义在 moral.rb 文件中的模块module Moral   VERY_BAD = 0   BAD = 1   def Moral.sin(badness)   # ...   endend</code></pre><p>就像类方法，当您在模块中定义一个方法时，您可以指定在模块名称后跟着一个点号，点号后跟着方法名。</p><hr><h3 id="Ruby-require-语句"><a href="#Ruby-require-语句" class="headerlink" title="Ruby require 语句"></a>Ruby require 语句</h3><p>require 语句类似于 C 和 C++ 中的 include 语句以及 Java 中的 import 语句。如果一个第三方的程序想要使用任何已定义的模块，则可以简单地使用 Ruby require 语句来加载模块文件：</p><p><strong>语法</strong></p><p><code>require filename</code></p><p>在这里，文件扩展名 .rb 不是必需的。</p><p><strong>实例</strong></p><pre><code>$LOAD_PATH &lt;&lt; &#39;.&#39;require &#39;trig.rb&#39;require &#39;moral&#39;y = Trig.sin(Trig::PI/4)wrongdoing = Moral.sin(Moral::VERY_BAD)</code></pre><p>在这里，我们使用 <strong>$LOAD_PATH &lt;&lt; ‘.’</strong> 让 Ruby 知道必须在当前目录中搜索被引用的文件。如果您不想使用 <strong>$LOAD_PATH</strong>，那么您可以使用 <strong>require_relative</strong> 来从一个相对目录引用文件。</p><p><code>注意：在这里，文件包含相同的函数名称。所以，这会在引用调用程序时导致代码模糊，但是模块避免了这种代码模糊，而且我们可以使用模块的名称调用适当的函数。</code></p><h3 id="Ruby-include-语句"><a href="#Ruby-include-语句" class="headerlink" title="Ruby include 语句"></a>Ruby include 语句</h3><p>您可以在类中嵌入模块。为了在类中嵌入模块，您可以在类中使用 include 语句：</p><p><strong>语法</strong></p><pre><code>include modulename</code></pre><p>如果模块是定义在一个单独的文件中，那么在嵌入模块之前就需要使用 require 语句引用该文件。</p><p><strong>实例</strong><br>假设下面的模块写在 support.rb 文件中。</p><pre><code>module Week   FIRST_DAY = &quot;Sunday&quot;   def Week.weeks_in_month      puts &quot;You have four weeks in a month&quot;   end   def Week.weeks_in_year      puts &quot;You have 52 weeks in a year&quot;   endend</code></pre><p>现在，您可以在类中引用该模块，如下所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby$LOAD_PATH &lt;&lt; &#39;.&#39;require &quot;support&quot;class Decadeinclude Week   no_of_yrs=10   def no_of_months      puts Week::FIRST_DAY      number=10*12      puts number   endendd1=Decade.newputs Week::FIRST_DAYWeek.weeks_in_monthWeek.weeks_in_yeard1.no_of_months</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Sunday<br>You have four weeks in a month<br>You have 52 weeks in a year<br>Sunday<br>120</p></blockquote></div></div><h3 id="Ruby-中的-Mixins"><a href="#Ruby-中的-Mixins" class="headerlink" title="Ruby 中的 Mixins"></a>Ruby 中的 Mixins</h3><p>当一个类可以从多个父类继承类的特性时，该类显示为多重继承。</p><p>Ruby 不直接支持多重继承，但是 Ruby 的模块（Module）有另一个神奇的功能。它几乎消除了多重继承的需要，提供了一种名为 mixin 的装置。</p><p>Ruby 没有真正实现多重继承机制，而是采用成为mixin技术作为替代品。将模块include到类定义中，模块中的方法就mix进了类中。</p><p>让我们看看下面的示例代码，深入了解 mixin：</p><p><strong>实例</strong></p><pre><code>module A   def a1   end   def a2   endendmodule B   def b1   end   def b2   endendclass Sampleinclude Ainclude B   def s1   endendsamp=Sample.newsamp.a1samp.a2samp.b1samp.b2samp.s1</code></pre><ul><li>模块 A 由方法 a1 和 a2 组成。</li><li>模块 B 由方法 b1 和 b2 组成。</li><li>类 Sample 包含了模块 A 和 B。</li><li>类 Sample 可以访问所有四个方法，即 a1、a2、b1 和 b2。</li></ul><p>因此，您可以看到类 Sample 继承了两个模块，您可以说类 Sample 使用了多重继承或 mixin 。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby  块</title>
      <link href="/2019/09/09/ruby-12/"/>
      <url>/2019/09/09/ruby-12/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-块"><a href="#Ruby-块" class="headerlink" title="Ruby 块"></a>Ruby 块</h3><ul><li>块由大量的代码组成。</li><li>您需要给块取个名称。</li><li>块中的代码总是包含在大括号 {} 内。</li><li>块总是从与其具有相同名称的函数调用。这意味着如果您的块名称为 test，那么您要使用函数 test 来调用这个块。</li><li>您可以使用 yield 语句来调用块。</li></ul><p><strong>语法</strong></p><pre><code>block_name{   statement1   statement2   ..........}</code></pre><p>在这里，您将学到如何使用一个简单的 yield 语句来调用块。您也将学到如何使用带有参数的 yield 语句来调用块。在实例中，您将看到这两种类型的 yield 语句。</p><h3 id="yield-语句"><a href="#yield-语句" class="headerlink" title="yield 语句"></a>yield 语句</h3><p>让我们看一个 yield 语句的实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-def test   puts &quot;在 test 方法内&quot;   yield   puts &quot;你又回到了 test 方法内&quot;   yieldendtest {puts &quot;你在块内&quot;}</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>在 test 方法内<br>你在块内<br>你又回到了 test 方法内<br>你在块内</p></blockquote></div></div><p>您也可以传递带有参数的 yield 语句。下面是一个实例：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-def test   yield 5   puts &quot;在 test 方法内&quot;   yield 100endtest {|i| puts &quot;你在块 #{i} 内&quot;}</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>你在块 5 内<br>在 test 方法内<br>你在块 100 内</p></blockquote></div></div><p>在这里，yield 语句后跟着参数。您甚至可以传递多个参数。在块中，您可以在两个竖线之间放置一个变量来接受参数。因此，在上面的代码中，yield 5 语句向 test 块传递值 5 作为参数。</p><p>现在，看下面的语句：</p><pre><code>test {|i| puts &quot;你在块 #{i} 内&quot;}</code></pre><p>在这里，值 5 会在变量 i 中收到。现在，观察下面的 puts 语句：</p><pre><code>puts &quot;你在块 #{i} 内&quot;</code></pre><p>这个 puts 语句的输出是：</p><p><code>你在块5 内</code></p><p>如果您想要传递多个参数，那么 yield 语句如下所示：</p><p><code>yield a, b</code></p><p>此时，块如下所示：</p><p><code>test {|a, b| statement}</code></p><p>参数使用逗号分隔。</p><h3 id="块和方法"><a href="#块和方法" class="headerlink" title="块和方法"></a>块和方法</h3><p>您已经看到块和方法之间是如何相互关联的。您通常使用 yield 语句从与其具有相同名称的方法调用块。因此，代码如下所示：</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubydef test  yieldendtest{ puts &quot;Hello world&quot;}</code></pre><p>本实例是实现块的最简单的方式。您使用 yield 语句调用 test 块。</p><p>但是如果方法的最后一个参数前带有 &amp;，那么您可以向该方法传递一个块，且这个块可被赋给最后一个参数。如果 * 和 &amp; 同时出现在参数列表中，&amp; 应放在后面。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubydef test(&amp;block)   block.callendtest { puts &quot;Hello World!&quot;}</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Hello World!</p></blockquote></div></div><h3 id="BEGIN-和-END-块"><a href="#BEGIN-和-END-块" class="headerlink" title="BEGIN 和 END 块"></a>BEGIN 和 END 块</h3><p>每个 Ruby 源文件可以声明当文件被加载时要运行的代码块（BEGIN 块），以及程序完成执行后要运行的代码块（END 块）。</p><p><strong>实例</strong></p><pre><code>#!/usr/bin/rubyBEGIN {   # BEGIN 代码块  puts &quot;BEGIN 代码块&quot;} END {   # END 代码块  puts &quot;END 代码块&quot;}  # MAIN 代码块puts &quot;MAIN 代码块&quot;</code></pre><p>一个程序可以包含多个 BEGIN 和 END 块。BEGIN 块按照它们出现的顺序执行。END 块按照它们出现的相反顺序执行。当执行时，<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>BEGIN 代码块<br>MAIN 代码块<br>END 代码块</p></blockquote></div></div></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 方法</title>
      <link href="/2019/09/05/ruby-11/"/>
      <url>/2019/09/05/ruby-11/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-方法"><a href="#Ruby-方法" class="headerlink" title="Ruby 方法"></a>Ruby 方法</h3><ul><li>Ruby 方法与其他编程语言中的函数类似。Ruby 方法用于捆绑一个或多个重复的语句到一个单元中。</li><li>方法名应以小写字母开头。如果您以大写字母作为方法名的开头，Ruby 可能会把它当作常量，从而导致不正确地解析调用。</li><li>方法应在调用之前定义，否则 Ruby 会产生未定义的方法调用异常。</li></ul><blockquote><p>语法</p><pre><code>def method_name [( [arg [= default]]...[, * arg [, &amp;expr ]])]   expr..end</code></pre></blockquote><p>所以，您可以定义一个简单的方法，如下所示：</p><pre><code>def method_name    expr..end</code></pre><p>您可以定义一个接受参数的方法，如下所示：</p><pre><code>def method_name (var1, var2)   expr..end</code></pre><p>您可以为参数设置默认值，如果方法调用时未传递必需的参数则使用默认值：</p><pre><code>def method_name (var1=value1, var2=value2)   expr..end</code></pre><p>当您要调用方法时，只需要使用方法名即可，如下所示：</p><pre><code>method_name</code></pre><p>但是，当您调用带参数的方法时，您在写方法名时还要带上参数，例如：</p><pre><code>method_name 25, 30</code></pre><p>使用带参数方法最大的缺点是调用方法时需要记住参数个数。例如，如果您向一个接受三个参数的方法只传递了两个参数，Ruby 会显示错误。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-def test(a1=&quot;Ruby&quot;, a2=&quot;Perl&quot;)   puts &quot;编程语言为 #{a1}&quot;   puts &quot;编程语言为 #{a2}&quot;endtest &quot;C&quot;, &quot;C++&quot;test</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>编程语言为 C<br>编程语言为 C++<br>编程语言为 Ruby<br>编程语言为 Perl</p></blockquote></div></div><h3 id="从方法返回值"><a href="#从方法返回值" class="headerlink" title="从方法返回值"></a>从方法返回值</h3><p>Ruby 中的每个方法默认都会返回一个值。这个返回的值是最后一个语句的值。例如：</p><blockquote><p>实例</p><pre><code>def test   i = 100   j = 10   k = 0end</code></pre><p>在调用这个方法时，将返回最后一个声明的变量 k。</p></blockquote><h3 id="Ruby-return-语句"><a href="#Ruby-return-语句" class="headerlink" title="Ruby return 语句"></a>Ruby return 语句</h3><p>Ruby 中的 return 语句用于从 Ruby 方法中返回一个或多个值。</p><blockquote><p>语法</p><pre><code>  return [expr[`,&quot;&#39;&quot; expr...]]</code></pre></blockquote><p>如果给出超过两个的表达式，包含这些值的数组将是返回值。如果未给出表达式，nil 将是返回值。</p><p>实例</p><pre><code>return</code></pre><p>或</p><pre><code>return 12</code></pre><p>或</p><pre><code>return 1,2,3</code></pre><p>看看下面的实例：</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-def test   i = 100   j = 200   k = 300return i, j, kendvar = testputs var</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>100<br>200<br>300</p></blockquote></div></div><h3 id="可变数量的参数"><a href="#可变数量的参数" class="headerlink" title="可变数量的参数"></a>可变数量的参数</h3><p>假设您声明了一个带有两个参数的方法，当您调用该方法时，您同时还需要传递两个参数。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-def sample (*test)   puts &quot;参数个数为 #{test.length}&quot;   for i in 0...test.length      puts &quot;参数值为 #{test[i]}&quot;   endendsample &quot;Zara&quot;, &quot;6&quot;, &quot;F&quot;sample &quot;Mac&quot;, &quot;36&quot;, &quot;M&quot;, &quot;MCA&quot;</code></pre><p>在这段代码中，您已经声明了一个方法 sample，接受一个参数 test。但是，这个参数是一个变量参数。这意味着参数可以带有不同数量的变量。<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>参数个数为 3<br>参数值为 Zara<br>参数值为 6<br>参数值为 F<br>参数个数为 4<br>参数值为 Mac<br>参数值为 36<br>参数值为 M<br>参数值为 MCA</p></blockquote></div></div></p><h3 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h3><ul><li>当方法定义在类的外部，方法默认标记为 private。另一方面，如果方法定义在类中的，则默认标记为 public。</li><li>方法默认的可见性和 private 标记可通过模块（Module）的 public 或 private 改变。</li><li>当你想要访问类的方法时，您首先需要实例化类。然后，使用对象，您可以访问类的任何成员。</li></ul><p>Ruby 提供了一种不用实例化即可访问方法的方式。让我们看看如何声明并访问类方法：</p><pre><code>class Accounts   def reading_charge   end   def Accounts.return_date   endend</code></pre><p>我们已经知道方法 return_date 是如何声明的。它是通过在类名后跟着一个点号，点号后跟着方法名来声明的。您可以直接访问类方法，如下所示：</p><pre><code>Accounts.return_date</code></pre><p>如需访问该方法，您不需要创建类 Accounts 的对象。</p><hr><h3 id="Ruby-alias-语句"><a href="#Ruby-alias-语句" class="headerlink" title="Ruby alias 语句"></a>Ruby alias 语句</h3><p>这个语句用于为方法或全局变量起别名。别名不能在方法主体内定义。即使方法被重写，方法的别名也保持方法的当前定义。</p><p>为编号的全局变量（$1, $2,…）起别名是被禁止的。重写内置的全局变量可能会导致严重的问题。</p><blockquote><p>语法</p><pre><code>alias 方法名 方法名alias 全局变量 全局变量</code></pre></blockquote><p>实例</p><pre><code>alias foo baralias $MATCH $&amp;</code></pre><p>在这里，我们已经为 bar 定义了别名为 foo，为 $&amp; 定义了别名为 $MATCH。</p><h3 id="Ruby-undef-语句"><a href="#Ruby-undef-语句" class="headerlink" title="Ruby undef 语句"></a>Ruby undef 语句</h3><p>这个语句用于取消方法定义。undef 不能出现在方法主体内。</p><p>通过使用 undef 和 alias，类的接口可以从父类独立修改，但请注意，在自身内部方法调用时，它可能会破坏程序。</p><pre><code>undef 方法名</code></pre><blockquote><p>实例<br>下面的实例取消名为 bar的方法定义：</p><pre><code>undef bar</code></pre></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby 循环</title>
      <link href="/2019/09/05/ruby-10/"/>
      <url>/2019/09/05/ruby-10/</url>
      
        <content type="html"><![CDATA[<h2 id="Ruby-循环"><a href="#Ruby-循环" class="headerlink" title="Ruby 循环"></a>Ruby 循环</h2><p>Ruby 中的循环用于执行相同的代码块若干次。本章节将详细介绍 Ruby 支持的所有循环语句。</p><hr><h3 id="Ruby-while-语句"><a href="#Ruby-while-语句" class="headerlink" title="Ruby while 语句"></a>Ruby while 语句</h3><blockquote><p>语法</p><pre><code>while conditional [do]   codeend</code></pre></blockquote><p>或者</p><blockquote><p>语法</p><pre><code>while conditional [:]   codeend</code></pre></blockquote><p>当 conditional 为真时，执行 code。</p><p>语法中 do 或 : 可以省略不写。但若要在一行内写出 while 式，则必须以 do 或 : 隔开条件式或程式区块。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$i = 0$num = 5while $i &lt; $num  do   puts(&quot;在循环语句中 i = #$i&quot; )   $i +=1end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>在循环语句中 i = 0<br>在循环语句中 i = 1<br>在循环语句中 i = 2<br>在循环语句中 i = 3<br>在循环语句中 i = 4</p></div></div><h3 id="Ruby-while-修饰符"><a href="#Ruby-while-修饰符" class="headerlink" title="Ruby while 修饰符"></a>Ruby while 修饰符</h3><blockquote><p>语法</p><pre><code>code while condition</code></pre></blockquote><p>或者</p><pre><code>begin   code end while conditional</code></pre><p>当 conditional 为真时，执行 code。</p><p>如果 while 修饰符跟在一个没有 rescue 或 ensure 子句的 begin 语句后面，code 会在 conditional 判断之前执行一次。</p><blockquote><p>实例 </p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$i = 0$num = 5begin   puts(&quot;在循环语句中 i = #$i&quot; )   $i +=1end while $i &lt; $num</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>在循环语句中 i = 0<br>在循环语句中 i = 1<br>在循环语句中 i = 2<br>在循环语句中 i = 3<br>在循环语句中 i = 4</p></blockquote></div></div><h3 id="Ruby-until-语句"><a href="#Ruby-until-语句" class="headerlink" title="Ruby until 语句"></a>Ruby until 语句</h3><blockquote><p>语法</p><pre><code>until conditional [do]   codeend</code></pre></blockquote><p>当 conditional 为假时，执行 code。</p><p>语法中 do 可以省略不写。但若要在一行内写出 until 式，则必须以 do 隔开条件式或程式区块。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$i = 0$num = 5until $i &gt; $num  do   puts(&quot;在循环语句中 i = #$i&quot; )   $i +=1;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>在循环语句中 i = 0<br>在循环语句中 i = 1<br>在循环语句中 i = 2<br>在循环语句中 i = 3<br>在循环语句中 i = 4<br>在循环语句中 i = 5</p></blockquote></div></div><h3 id="Ruby-until-修饰符"><a href="#Ruby-until-修饰符" class="headerlink" title="Ruby until 修饰符"></a>Ruby until 修饰符</h3><blockquote><p>语法</p><pre><code>code until conditional</code></pre></blockquote><p>或者</p><pre><code>begin   codeend until conditional</code></pre><p>当 conditional 为 false 时，执行 code。</p><p>如果 until 修饰符跟在一个没有 rescue 或 ensure 子句的 begin 语句后面，code 会在 conditional 判断之前执行一次。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$i = 0$num = 5begin   puts(&quot;在循环语句中 i = #$i&quot; )   $i +=1;end until $i &gt; $num</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>在循环语句中 i = 0<br>在循环语句中 i = 1<br>在循环语句中 i = 2<br>在循环语句中 i = 3<br>在循环语句中 i = 4<br>在循环语句中 i = 5</p></blockquote></div></div><h3 id="Ruby-for-语句"><a href="#Ruby-for-语句" class="headerlink" title="Ruby for 语句"></a>Ruby for 语句</h3><blockquote><p>语法</p><pre><code>for variable [, variable ...] in expression [do]   codeend</code></pre></blockquote><p>先计算表达式得到一个对象，然后针对 expression 中的每个元素分别执行一次 code。</p><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-for i in 0..5   puts &quot;局部变量的值为 #{i}&quot;end</code></pre><p>在这里，我们已经定义了范围 0..5。语句 for i in 0..5 允许 i 的值从 0 到 5（包含 5）。</p><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 0<br>局部变量的值为 1<br>局部变量的值为 2<br>局部变量的值为 3<br>局部变量的值为 4<br>局部变量的值为 5</p></blockquote></div></div><p>for…in 循环几乎是完全等价于：</p><pre><code>(expression).each do |variable[, variable...]| code end</code></pre><p>但是，for 循环不会为局部变量创建一个新的作用域。</p><p>语法中 do 可以省略不写。但若要在一行内写出 for 式，则必须以 do 隔开条件式或程式区块。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-(0..5).each do |i|   puts &quot;局部变量的值为 #{i}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 0<br>局部变量的值为 1<br>局部变量的值为 2<br>局部变量的值为 3<br>局部变量的值为 4<br>局部变量的值为 5</p></blockquote></div></div><h3 id="Ruby-break-语句"><a href="#Ruby-break-语句" class="headerlink" title="Ruby break 语句"></a>Ruby break 语句</h3><blockquote><p>语法</p><pre><code>break</code></pre></blockquote><p>终止最内部的循环。如果在块内调用，则终止相关块的方法（方法返回 nil）。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-for i in 0..5   if i &gt; 2 then      break   end   puts &quot;局部变量的值为 #{i}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 0<br>局部变量的值为 1<br>局部变量的值为 2</p></blockquote></div></div><h3 id="Ruby-next-语句"><a href="#Ruby-next-语句" class="headerlink" title="Ruby next 语句"></a>Ruby next 语句</h3><blockquote><p>语法</p><pre><code>next</code></pre></blockquote><p>跳到循环的下一个迭代。如果在块内调用，则终止块的执行（yield 表达式返回 nil）。</p><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-for i in 0..5   if i &lt; 2 then      next   end   puts &quot;局部变量的值为 #{i}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 2<br>局部变量的值为 3<br>局部变量的值为 4<br>局部变量的值为 5</p></blockquote></div></div><h3 id="Ruby-redo-语句"><a href="#Ruby-redo-语句" class="headerlink" title="Ruby redo 语句"></a>Ruby redo 语句</h3><blockquote><p>语法</p><pre><code>redo</code></pre><p>重新开始最内部循环的该次迭代，不检查循环条件。如果在块内调用，则重新开始 yield 或 call。</p></blockquote><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-for i in 0..5   if i &lt; 2 then      puts &quot;局部变量的值为 #{i}&quot;      redo   endend</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 0<br>局部变量的值为 0<br>……………………….</p></blockquote></div></div><h3 id="Ruby-retry-语句"><a href="#Ruby-retry-语句" class="headerlink" title="Ruby retry 语句"></a>Ruby retry 语句</h3><blockquote><blockquote><p>注意：1.9以及之后的版本不支持在循环中使用retry。</p></blockquote></blockquote><blockquote><p>语法</p></blockquote><pre><code>retry</code></pre><p>如果 retry 出现在 begin 表达式的 rescue 子句中，则从 begin 主体的开头重新开始。</p><pre><code>begin   do_something   # 抛出的异常rescue   # 处理错误   retry          # 重新从 begin 开始end</code></pre><p>如果 retry 出现在迭代内、块内或者 for 表达式的主体内，则重新开始迭代调用。迭代的参数会重新评估。</p><pre><code>for i in 1..5   retry if some_condition # 重新从 i == 1 开始end</code></pre><blockquote><p>实例</p></blockquote><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-for i in 1..5   retry if  i &gt; 2   puts &quot;局部变量的值为 #{i}&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>局部变量的值为 1<br>局部变量的值为 2<br>局部变量的值为 1<br>局部变量的值为 2<br>局部变量的值为 1<br>局部变量的值为 2<br>……………………….</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 表达式</title>
      <link href="/2019/09/05/ruby-9/"/>
      <url>/2019/09/05/ruby-9/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-表达式"><a href="#Ruby-表达式" class="headerlink" title="Ruby 表达式"></a>Ruby 表达式</h3><ul><li>Ruby 提供了几种很常见的条件结构。在这里，我们将解释所有的条件语句和 Ruby 中可用的修饰符。</li></ul><h4 id="Ruby-if…else-语句"><a href="#Ruby-if…else-语句" class="headerlink" title="Ruby if…else 语句"></a>Ruby if…else 语句</h4><blockquote><p>语法</p><pre><code>if conditional [then]      code...[elsif conditional [then]      code...]...[else      code...]end</code></pre></blockquote><ul><li><p>if 表达式用于条件执行。值 false 和 nil 为假，其他值都为真。请注意，Ruby 使用 elsif，不是使用 else if 和 elif。</p></li><li><p>如果 conditional 为真，则执行 code。如果 conditional 不为真，则执行 else 子句中指定的 code。</p></li><li><p>通常我们省略保留字 then 。若想在一行内写出完整的 if 式，则必须以 then 隔开条件式和程式区块。如下所示:</p></li></ul><blockquote><p>if a == 4 then a = 7 end</p></blockquote><hr><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-x=1if x &gt; 2   puts &quot;x 大于 2&quot;elsif x &lt;= 2 and x!=0   puts &quot;x 是 1&quot;else   puts &quot;无法得知 x 的值&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p> x 是 1</p></blockquote></div></div><h3 id="Ruby-if-修饰符"><a href="#Ruby-if-修饰符" class="headerlink" title="Ruby if 修饰符"></a>Ruby if 修饰符</h3><blockquote><p>语法</p><pre><code>code if condition</code></pre></blockquote><p>if修饰词组表示当 if 右边之条件成立时才执行 if 左边的式子。即如果 conditional 为真，则执行 code。<br>实例</p><pre><code>#!/usr/bin/ruby$debug=1print &quot;debug\n&quot; if $debug</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>debug</p></blockquote></div></div><h3 id="Ruby-unless-语句"><a href="#Ruby-unless-语句" class="headerlink" title="Ruby unless 语句"></a>Ruby unless 语句</h3><blockquote><p>语法</p><pre><code>unless conditional [then]   code[else   code ]end</code></pre></blockquote><p>unless式和 if式作用相反，即如果 conditional 为假，则执行 code。如果 conditional 为真，则执行 else 子句中指定的 code。</p><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-x=1unless x&gt;2   puts &quot;x 小于 2&quot; else  puts &quot;x 大于 2&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>x 小于 2</p></blockquote></div></div><h3 id="Ruby-unless-修饰符"><a href="#Ruby-unless-修饰符" class="headerlink" title="Ruby unless 修饰符"></a>Ruby unless 修饰符</h3><p>语法</p><blockquote><p>code unless conditional</p></blockquote><p>如果 conditional 为假，则执行 code。</p><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$var =  1print &quot;1 -- 这一行输出\n&quot; if $varprint &quot;2 -- 这一行不输出\n&quot; unless $var$var = falseprint &quot;3 -- 这一行输出\n&quot; unless $var</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>1 – 这一行输出<br>3 – 这一行输出</p></div></div><h3 id="Ruby-case-语句"><a href="#Ruby-case-语句" class="headerlink" title="Ruby case 语句"></a>Ruby case 语句</h3><p>语法</p><blockquote><p>case expression</p><pre><code>[when expression [, expression ...] [then]   code ]...[else   code ]end</code></pre></blockquote><p>case先对一个 expression 进行匹配判断，然后根据匹配结果进行分支选择。</p><p>它使用 ===运算符比较 when 指定的 expression，若一致的话就执行 when 部分的内容。</p><p>通常我们省略保留字 then 。若想在一行内写出完整的 when 式，则必须以 then 隔开条件式和程式区块。如下所示:</p><blockquote><p>when a == 4 then a = 7 end</p></blockquote><p>因此：</p><pre><code>case expr0when expr1, expr2   stmt1when expr3, expr4   stmt2else   stmt3end</code></pre><p>基本上类似于：</p><pre><code>_tmp = expr0if expr1 === _tmp || expr2 === _tmp   stmt1elsif expr3 === _tmp || expr4 === _tmp   stmt2else   stmt3end</code></pre><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$age =  5case $agewhen 0 .. 2    puts &quot;婴儿&quot;when 3 .. 6    puts &quot;小孩&quot;when 7 .. 12    puts &quot;child&quot;when 13 .. 18    puts &quot;少年&quot;else    puts &quot;其他年龄段的&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>小孩</p></blockquote></div></div><p>当case的”表达式”部分被省略时，将计算第一个when条件部分为真的表达式。</p><pre><code>foo = falsebar = truequu = falsecasewhen foo then puts &#39;foo is true&#39;when bar then puts &#39;bar is true&#39;when quu then puts &#39;quu is true&#39;end# 显示 &quot;bar is true&quot;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby 注释</title>
      <link href="/2019/08/23/ruby-8/"/>
      <url>/2019/08/23/ruby-8/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-注释"><a href="#Ruby-注释" class="headerlink" title="Ruby 注释"></a>Ruby 注释</h3><p>注释是在运行时会被忽略的 Ruby 代码内的注释行。单行注释以 # 字符开始，直到该行结束，如下所示：</p><h4 id="Ruby-单行注解"><a href="#Ruby-单行注解" class="headerlink" title="Ruby 单行注解"></a>Ruby 单行注解</h4><p>实例</p><pre><code>#!/usr/bin/ruby -w# 这是一个单行注释。puts &quot;Hello, Ruby!&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Hello, Ruby!</p></blockquote></div></div><h4 id="Ruby-多行注释"><a href="#Ruby-多行注释" class="headerlink" title="Ruby 多行注释"></a>Ruby 多行注释</h4><p>您可以使用 =begin 和 =end 语法注释多行，如下所示：</p><p>实例</p><pre><code>#!/usr/bin/ruby -wputs &quot;Hello, Ruby!&quot;=begin这是一个多行注释。可扩展至任意数量的行。但 =begin 和 =end 只能出现在第一行和最后一行。 =end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><p>Hello, Ruby!</p></div></div><p>请确保尾部的注释离代码有足够的距离，以便容易区分注释和代码。如果尾部超过一条注释，请将它们对齐。例如：</p><p>实例</p><pre><code>@counter      # 跟踪页面被点击的次数@siteCounter  # 跟踪所有页面被点击的次数</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby 运算符</title>
      <link href="/2019/08/23/ruby-7/"/>
      <url>/2019/08/23/ruby-7/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-运算符"><a href="#Ruby-运算符" class="headerlink" title="Ruby 运算符"></a>Ruby 运算符</h3><p>Ruby 支持一套丰富的运算符。大多数运算符实际上是方法调用。例如，a + b 被解释为 a.+(b)，其中指向变量 a 的 + 方法被调用，b 作为方法调用的参数。</p><p>对于每个运算符（+ - * / % ** &amp; | ^ &lt;&lt; &gt;&gt; &amp;&amp; ||），都有一个相对应的缩写赋值运算符（+= -= 等等）。</p><h4 id="Ruby-算术运算符"><a href="#Ruby-算术运算符" class="headerlink" title="Ruby 算术运算符"></a>Ruby 算术运算符</h4><p>假设变量 a 的值为 10，变量 b 的值为 20，那么：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法 - 把运算符两边的操作数相加</td><td style="text-align:center">a + b 将得到 30</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法 - 把左操作数减去右操作数</td><td style="text-align:center">a - b 将得到 -10</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法 - 把运算符两边的操作数相乘</td><td style="text-align:center">a * b 将得到 200</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法 - 把左操作数除以右操作数</td><td style="text-align:center">b / a 将得到 2</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">求模 - 把左操作数除以右操作数， 返回余数</td><td style="text-align:center">b % a 将得到 0</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">指数 - 执行指数计算</td><td style="text-align:center">a**b 将得到 10 的 20 次方</td></tr></tbody></table><h4 id="Ruby-比较运算符"><a href="#Ruby-比较运算符" class="headerlink" title="Ruby 比较运算符"></a>Ruby 比较运算符</h4><p>假设变量 a 的值为 10，变量 b 的值为 20，那么：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">==</td><td style="text-align:center">检查两个操作数的值是否相等，如果相等则条件为真。</td><td style="text-align:center">(a == b) 不为真。</td></tr><tr><td style="text-align:center">!=</td><td style="text-align:center">检查两个操作数的值是否相等，如果不相等则条件为真。</td><td style="text-align:center">(a != b) 为真。</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td><td style="text-align:center">(a &gt; b) 不为真。</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td><td style="text-align:center">(a &lt; b) 为真。</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td><td style="text-align:center">(a &gt;= b) 不为真。</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td><td style="text-align:center">(a &lt;= b) 为真。</td></tr><tr><td style="text-align:center">&lt;=&gt;</td><td style="text-align:center">联合比较运算符。如果第一个操作数等于第二个操作数则返回 0，如果第一个操作数大于第二个操作数则返回 1，如果第一个操作数小于第二个操作数则返回 -1。</td><td style="text-align:center">(a &lt;=&gt; b) 返回 -1。</td></tr><tr><td style="text-align:center">===</td><td style="text-align:center">用于测试 case 语句的 when 子句内的相等。</td><td style="text-align:center">(1…10) === 5 返回 true。</td></tr><tr><td style="text-align:center">.eql?</td><td style="text-align:center">如果接收器和参数具有相同的类型和相等的值，则返回 true。</td><td style="text-align:center">1 == 1.0 返回 true，但是 1.eql?(1.0) 返回 false。</td></tr><tr><td style="text-align:center">equal?</td><td style="text-align:center">如果接收器和参数具有相同的对象 id，则返回 true。</td><td style="text-align:center">如果 aObj 是 bObj 的副本，那么 aObj == bObj 返回 true，a.equal?bObj 返回 false，但是 a.equal?aObj 返回 true。</td></tr></tbody></table><h4 id="Ruby-赋值运算符"><a href="#Ruby-赋值运算符" class="headerlink" title="Ruby 赋值运算符"></a>Ruby 赋值运算符</h4><p>假设变量 a 的值为 10，变量 b 的值为 20，那么：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">简单的赋值运算符，把右操作数的值赋给左操作数</td><td style="text-align:center">c = a + b 将把 a + b 的值赋给 c</td></tr><tr><td style="text-align:center">+=</td><td style="text-align:center">加且赋值运算符，把右操作数加上左操作数的结果赋值给左操作数</td><td style="text-align:center">c += a 相当于 c = c + a</td></tr><tr><td style="text-align:center">-=</td><td style="text-align:center">减且赋值运算符，把左操作数减去右操作数的结果赋值给左操作数</td><td style="text-align:center">c -= a 相当于 c = c - a</td></tr><tr><td style="text-align:center">*=</td><td style="text-align:center">乘且赋值运算符，把右操作数乘以左操作数的结果赋值给左操作数</td><td style="text-align:center">c <em>= a 相当于 c = c </em> a</td></tr><tr><td style="text-align:center">/=</td><td style="text-align:center">除且赋值运算符，把左操作数除以右操作数的结果赋值给左操作数</td><td style="text-align:center">c /= a 相当于 c = c / a</td></tr><tr><td style="text-align:center">%=</td><td style="text-align:center">求模且赋值运算符，求两个操作数的模赋值给左操作数</td><td style="text-align:center">c %= a 相当于 c = c % a</td></tr><tr><td style="text-align:center">**=</td><td style="text-align:center">指数且赋值运算符，执行指数计算，并赋值给左操作数</td><td style="text-align:center">c **= a 相当于 c = c ** a</td></tr></tbody></table><h4 id="Ruby-并行赋值"><a href="#Ruby-并行赋值" class="headerlink" title="Ruby 并行赋值"></a>Ruby 并行赋值</h4><p>Ruby 也支持变量的并行赋值。这使得多个变量可以通过一行的 Ruby 代码进行初始化。例如：</p><pre><code>a = 10b = 20c = 30</code></pre><p>使用并行赋值可以更快地声明：</p><pre><code>a, b, c = 10, 20, 30</code></pre><p>并行赋值在交换两个变量的值时也很有用：</p><pre><code>a, b = b, c</code></pre><h4 id="Ruby-位运算符"><a href="#Ruby-位运算符" class="headerlink" title="Ruby 位运算符"></a>Ruby 位运算符</h4><p>位运算符作用于位，并逐位执行操作。</p><p>假设如果 a = 60，且 b = 13，现在以二进制格式，它们如下所示：</p><pre><code>a = 0011 1100b = 0000 1101#-----------------a&amp;b = 0000 1100a|b = 0011 1101a^b = 0011 0001~a  = 1100 0011</code></pre><p>下表列出了 Ruby 支持的位运算符。</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">&amp;</td><td style="text-align:center">如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。</td><td style="text-align:center">(a &amp; b) 将得到 12，即为 0000 1100</td></tr><tr><td style="text-align:center">&brvbar;</td><td style="text-align:center">如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。</td><td style="text-align:center">(a &#166;     b) 将得到 61，即为 0011 1101</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">如果存在于其中一个操作数中但不同时存在于两个操作数中，二进制异或运算符复制一位到结果中。</td><td style="text-align:center">(a ^ b) 将得到 49，即为 0011 0001</td></tr><tr><td style="text-align:center">~</td><td style="text-align:center">二进制补码运算符是一元运算符，具有”翻转”位效果，即0变成1，1变成0。</td><td style="text-align:center">(~a ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center">二进制左移运算符。左操作数的值向左移动右操作数指定的位数。</td><td style="text-align:center">a &lt;&lt; 2 将得到 240，即为 1111 0000</td></tr><tr><td style="text-align:center">&gt;&gt;</td><td style="text-align:center">二进制右移运算符。左操作数的值向右移动右操作数指定的位数。</td><td style="text-align:center">a &gt;&gt; 2 将得到 15，即为 0000 1111</td></tr></tbody></table><h4 id="Ruby-逻辑运算符"><a href="#Ruby-逻辑运算符" class="headerlink" title="Ruby 逻辑运算符"></a>Ruby 逻辑运算符</h4><p>下表列出了 Ruby 支持的逻辑运算符。</p><p>假设变量 a 的值为 10，变量 b 的值为 20，那么：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">and</td><td style="text-align:center">称为逻辑与运算符。如果两个操作数都为真，则条件为真。</td><td style="text-align:center">(a and b) 为真。</td></tr><tr><td style="text-align:center">or</td><td style="text-align:center">称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td><td style="text-align:center">(a or b) 为真。</td></tr><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td><td style="text-align:center">(a &amp;&amp; b) 为真。</td></tr><tr><td style="text-align:center">&brvbar;&brvbar;</td><td style="text-align:center">称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td><td style="text-align:center">(a &brvbar;&brvbar;     b) 为真。</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td><td style="text-align:center">!(a &amp;&amp; b) 为假。</td></tr><tr><td style="text-align:center">not</td><td style="text-align:center">称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td><td style="text-align:center">not(a &amp;&amp; b) 为假。</td></tr></tbody></table><h4 id="Ruby-三元运算符"><a href="#Ruby-三元运算符" class="headerlink" title="Ruby 三元运算符"></a>Ruby 三元运算符</h4><p>有一个以上的操作称为三元运算符。第一个计算表达式的真假值，然后根据这个结果决定执行后边两个语句中的一个。条件运算符的语法如下：</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">? :</td><td style="text-align:center">条件表达式</td><td style="text-align:center">如果条件为真 ? 则值为 X : 否则值为 Y</td></tr></tbody></table><h4 id="Ruby-范围运算符"><a href="#Ruby-范围运算符" class="headerlink" title="Ruby 范围运算符"></a>Ruby 范围运算符</h4><p>在 Ruby 中，序列范围用于创建一系列连续的值 - 包含起始值、结束值（视情况而定）和它们之间的值。</p><p>在 Ruby 中，这些序列是使用 “..” 和 “…” 范围运算符来创建的。两点形式创建的范围包含起始值和结束值，三点形式创建的范围只包含起始值不包含结束值。</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">..</td><td style="text-align:center">创建一个从开始点到结束点的范围（包含结束点）</td><td style="text-align:center">1..10 创建从 1 到 10 的范围</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">创建一个从开始点到结束点的范围（不包含结束点）</td><td style="text-align:center">1…10 创建从 1 到 9 的范围</td></tr></tbody></table><h4 id="Ruby-defined-运算符"><a href="#Ruby-defined-运算符" class="headerlink" title="Ruby defined? 运算符"></a>Ruby defined? 运算符</h4><p>defined? 是一个特殊的运算符，以方法调用的形式来判断传递的表达式是否已定义。它返回表达式的描述字符串，如果表达式未定义则返回 nil。</p><p>下面是 defined? 运算符的各种用法：</p><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法 1"></a>用法 1</h5><p>defined? variable # 如果 variable 已经初始化，则为 True<br>例如：</p><pre><code>foo = 42defined? foo    # =&gt; &quot;local-variable&quot;defined? $_     # =&gt; &quot;global-variable&quot;defined? bar    # =&gt; nil（未定义）</code></pre><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法 2"></a>用法 2</h5><p>defined? method_call # 如果方法已经定义，则为 True<br>例如：</p><pre><code>defined? puts        # =&gt; &quot;method&quot;defined? puts(bar)   # =&gt; nil（在这里 bar 未定义）defined? unpack      # =&gt; nil（在这里未定义）</code></pre><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法 3"></a>用法 3</h5><h1 id="如果存在可被-super-用户调用的方法，则为-True"><a href="#如果存在可被-super-用户调用的方法，则为-True" class="headerlink" title="如果存在可被 super 用户调用的方法，则为 True"></a>如果存在可被 super 用户调用的方法，则为 True</h1><p>defined? super<br>例如：</p><pre><code>defined? super     # =&gt; &quot;super&quot;（如果可被调用）defined? super     # =&gt; nil（如果不可被调用）</code></pre><h5 id="用法-4"><a href="#用法-4" class="headerlink" title="用法 4"></a>用法 4</h5><p>defined? yield   # 如果已传递代码块，则为 True<br>例如：</p><pre><code>defined? yield    # =&gt; &quot;yield&quot;（如果已传递块）defined? yield    # =&gt; nil（如果未传递块）</code></pre><h4 id="Ruby-点运算符-“-”-和双冒号运算符-“-”"><a href="#Ruby-点运算符-“-”-和双冒号运算符-“-”" class="headerlink" title="Ruby 点运算符 “.” 和双冒号运算符 “::”"></a>Ruby 点运算符 “.” 和双冒号运算符 “::”</h4><ul><li><p>你可以通过在方法名称前加上类或模块名称和 . 来调用类或模块中的方法。你可以使用类或模块名称和两个冒号 :: 来引用类或模块中的常量。</p></li><li><p>:: 是一元运算符，允许在类或模块内定义常量、实例方法和类方法，可以从类或模块外的任何地方进行访问。</p></li><li><p><strong>请记住：</strong>在 Ruby 中，类和方法也可以被当作常量。</p></li><li><p>你只需要在表达式的常量名前加上 :: 前缀，即可返回适当的类或模块对象。</p></li><li><p>如果 :: 前的表达式为类或模块名称，则返回该类或模块内对应的常量值；如果 :: 前未没有前缀表达式，则返回主Object类中对应的常量值。 。</p></li></ul><p>下面是两个实例：</p><pre><code>MR_COUNT = 0        # 定义在主 Object 类上的常量module Foo  MR_COUNT = 0  ::MR_COUNT = 1    # 设置全局计数为 1  MR_COUNT = 2      # 设置局部计数为 2endputs MR_COUNT       # 这是全局常量puts Foo::MR_COUNT  # 这是 &quot;Foo&quot; 的局部常量</code></pre><p>第二个实例：</p><pre><code>CONST = &#39; out there&#39;class Inside_one   CONST = proc {&#39; in there&#39;}   def where_is_my_CONST      ::CONST + &#39; inside one&#39;   endendclass Inside_two   CONST = &#39; inside two&#39;   def where_is_my_CONST      CONST   endendputs Inside_one.new.where_is_my_CONSTputs Inside_two.new.where_is_my_CONSTputs Object::CONST + Inside_two::CONSTputs Inside_two::CONST + CONSTputs Inside_one::CONSTputs Inside_one::CONST.call + Inside_two::CONST</code></pre><h4 id="Ruby-运算符的优先级"><a href="#Ruby-运算符的优先级" class="headerlink" title="Ruby 运算符的优先级"></a>Ruby 运算符的优先级</h4><p>下表按照运算符的优先级从高到低列出了所有的运算符。</p><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">运算符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">是</td><td style="text-align:center">::</td><td style="text-align:center">常量解析运算符</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">[ ] [ ]=</td><td style="text-align:center">元素引用、元素集合</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">**</td><td style="text-align:center">指数</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">! ~ + -</td><td style="text-align:center">非、补、一元加、一元减（最后两个的方法名为 +@ 和 -@）</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">* / %</td><td style="text-align:center">乘法、除法、求模</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">+ -</td><td style="text-align:center">加法和减法</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">&gt;&gt; &lt;&lt;</td><td style="text-align:center">位右移、位左移</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">&amp;</td><td style="text-align:center">位与</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">^ &#166;</td><td style="text-align:center">位异或、位或</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">&lt;= &lt; &gt; &gt;=</td><td style="text-align:center">比较运算符</td></tr><tr><td style="text-align:center">是</td><td style="text-align:center">&lt;=&gt; == === != =~ !~</td><td style="text-align:center">相等和模式匹配运算符（!= 和 !~ 不能被定义为方法）</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">逻辑与</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&#166;&#166;</td><td style="text-align:center">逻辑或</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">.. …</td><td style="text-align:center">范围（包含、不包含）</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">? :</td><td style="text-align:center">三元 if-then-else</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">= %= { /= -= += &#166;= &amp;= &gt;&gt;= &lt;&lt;= *= &amp;&amp;= &#166;&#166;= **=</td><td style="text-align:center">赋值</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">defined?</td><td style="text-align:center">检查指定符号是否已定义</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">not</td><td style="text-align:center">逻辑否定</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">or and</td><td style="text-align:center">逻辑组成</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 变量</title>
      <link href="/2019/08/23/ruby-6/"/>
      <url>/2019/08/23/ruby-6/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-变量"><a href="#Ruby-变量" class="headerlink" title="Ruby 变量"></a>Ruby 变量</h3><p>变量是持有可被任何程序使用的任何数据的存储位置。</p><p>Ruby 支持五种类型的变量。</p><ul><li>一般小写字母、下划线开头：变量（Variable）。</li><li>$开头：全局变量（Global variable）。</li><li>@开头：实例变量（Instance variable）。</li><li>@@开头：类变量（Class variable）类变量被共享在整个继承链中</li><li>大写字母开头：常数（Constant）。</li></ul><h4 id="Ruby-全局变量"><a href="#Ruby-全局变量" class="headerlink" title="Ruby 全局变量"></a>Ruby 全局变量</h4><ul><li><p>全局变量以 $ 开头。未初始化的全局变量的值为 nil，在使用 -w 选项后，会产生警告。</p></li><li><p>给全局变量赋值会改变全局状态，所以不建议使用全局变量。</p></li></ul><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-$global_variable = 10class Class1  def print_global      puts &quot;全局变量在 Class1 中输出为 #$global_variable&quot;  endendclass Class2  def print_global      puts &quot;全局变量在 Class2 中输出为 #$global_variable&quot;  endendclass1obj = Class1.newclass1obj.print_globalclass2obj = Class2.newclass2obj.print_global</code></pre><p>在这里，$global_variable 是全局变量。<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>注意：在 Ruby 中，您可以通过在变量或常量前面放置 # 字符，来访问任何变量或常量的值。<br>全局变量在 Class1 中输出为 10<br>全局变量在 Class2 中输出为 10</p></blockquote></div></div></p><h4 id="Ruby-实例变量"><a href="#Ruby-实例变量" class="headerlink" title="Ruby 实例变量"></a>Ruby 实例变量</h4><ul><li>实例变量以 @ 开头。未初始化的实例变量的值为 nil，在使用 -w 选项后，会产生警告。</li></ul><p>实例</p><pre><code>#!/usr/bin/rubyclass Customer   def initialize(id, name, addr)      @cust_id=id      @cust_name=name      @cust_addr=addr   end   def display_details()      puts &quot;Customer id #@cust_id&quot;      puts &quot;Customer name #@cust_name&quot;      puts &quot;Customer address #@cust_addr&quot;    endend# 创建对象cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)# 调用方法cust1.display_details()cust2.display_details()</code></pre><p>在这里，@cust_id、@cust_name 和 @cust_addr 是实例变量<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Customer id 1<br>Customer name John<br>Customer address Wisdom Apartments, Ludhiya<br>Customer id 2<br>Customer name Poul<br>Customer address New Empire road, Khandala</p></blockquote></div></div></p><h4 id="Ruby-类变量"><a href="#Ruby-类变量" class="headerlink" title="Ruby 类变量"></a>Ruby 类变量</h4><ul><li><p>类变量以 @@ 开头，且必须初始化后才能在方法定义中使用。</p></li><li><p>引用一个未初始化的类变量会产生错误。类变量在定义它的类或模块的子类或子模块中可共享使用。</p></li><li><p>在使用 -w 选项后，重载类变量会产生警告。</p></li></ul><pre><code>实例#!/usr/bin/rubyclass Customer   @@no_of_customers=0   def initialize(id, name, addr)      @cust_id=id      @cust_name=name      @cust_addr=addr   end   def display_details()      puts &quot;Customer id #@cust_id&quot;      puts &quot;Customer name #@cust_name&quot;      puts &quot;Customer address #@cust_addr&quot;    end    def total_no_of_customers()       @@no_of_customers += 1       puts &quot;Total number of customers: #@@no_of_customers&quot;    endend# 创建对象cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)# 调用方法cust1.total_no_of_customers()cust2.total_no_of_customers()</code></pre><p>在这里，@@no_of_customers 是类变量。<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Total number of customers: 1<br>Total number of customers: 2</p></blockquote></div></div></p><h4 id="Ruby-局部变量"><a href="#Ruby-局部变量" class="headerlink" title="Ruby 局部变量"></a>Ruby 局部变量</h4><ul><li><p>局部变量以小写字母或下划线 _ 开头。局部变量的作用域从 class、module、def 或 do 到相对应的结尾或者从左大括号到右大括号 {}。</p></li><li><p>当调用一个未初始化的局部变量时，它被解释为调用一个不带参数的方法。</p></li><li><p>对未初始化的局部变量赋值也可以当作是变量声明。变量会一直存在，直到当前域结束为止。局部变量的生命周期在 Ruby 解析程序时确定。</p></li></ul><h4 id="Ruby-常量"><a href="#Ruby-常量" class="headerlink" title="Ruby 常量"></a>Ruby 常量</h4><ul><li><p>常量以大写字母开头。定义在类或模块内的常量可以从类或模块的内部访问，定义在类或模块外的常量可以被全局访问。</p></li><li><p>常量不能定义在方法内。引用一个未初始化的常量会产生错误。对已经初始化的常量赋值会产生警告。</p></li></ul><p>实例</p><pre><code>#!/usr/bin/ruby# -*- coding: UTF-8 -*-class Example   VAR1 = 100   VAR2 = 200   def show       puts &quot;第一个常量的值为 #{VAR1}&quot;       puts &quot;第二个常量的值为 #{VAR2}&quot;   endend# 创建对象object=Example.new()object.show</code></pre><p>在这里，VAR1 和 VAR2 是常量<br><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>第一个常量的值为 100<br>第二个常量的值为 200</p></blockquote></div></div></p><h4 id="Ruby-伪变量"><a href="#Ruby-伪变量" class="headerlink" title="Ruby 伪变量"></a>Ruby 伪变量</h4><ul><li><p>它们是特殊的变量，有着局部变量的外观，但行为却像常量。您不能给这些变量赋任何值。</p></li><li><p>self: 当前方法的接收器对象。</p></li><li>true: 代表 true 的值。</li><li>false: 代表 false 的值。</li><li>nil: 代表 undefined 的值。</li><li>__FILE__: 当前源文件的名称。</li><li>__LINE__: 当前行在源文件中的编号。</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby 类案例</title>
      <link href="/2019/08/23/ruby-5/"/>
      <url>/2019/08/23/ruby-5/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-类案例"><a href="#Ruby-类案例" class="headerlink" title="Ruby 类案例"></a>Ruby 类案例</h3><h4 id="面将创建一个名为-Customer-的-Ruby-类，声明两个方法："><a href="#面将创建一个名为-Customer-的-Ruby-类，声明两个方法：" class="headerlink" title="面将创建一个名为 Customer 的 Ruby 类，声明两个方法："></a>面将创建一个名为 Customer 的 Ruby 类，声明两个方法：</h4><ul><li>display_details：该方法用于显示客户的详细信息。</li><li>total_no_of_customers：该方法用于显示在系统中创建的客户总数量。</li></ul><p>实例</p><pre><code>#!/usr/bin/rubyclass Customer   @@no_of_customers=0   def initialize(id, name, addr)      @cust_id=id      @cust_name=name      @cust_addr=addr   end   def display_details()      puts &quot;Customer id #@cust_id&quot;      puts &quot;Customer name #@cust_name&quot;      puts &quot;Customer address #@cust_addr&quot;    end    def total_no_of_customers()       @@no_of_customers += 1       puts &quot;Total number of customers: #@@no_of_customers&quot;    endend</code></pre><p>display_details 方法包含了三个 puts 语句，显示了客户 ID、客户名字和客户地址。其中，puts 语句：</p><blockquote><p>puts “Customer id #@cust_id”</p></blockquote><p>将在一个单行上显示文本 Customer id 和变量 @cust_id 的值。</p><p>当您想要在一个单行上显示实例变量的文本和值时，您需要在 puts 语句的变量名前面放置符号（#）。文本和带有符号（#）的实例变量应使用双引号标记。</p><p>第二个方法，total_no_of_customers，包含了类变量 @@no_of_customers。表达式 @@no_of_ customers+=1 在每次调用方法 total_no_of_customers 时，把变量 no_of_customers 加 1。通过这种方式，您将得到类变量中的客户总数量。</p><p>现在创建两个客户，如下所示：</p><pre><code>cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)</code></pre><p>在这里，我们创建了 Customer 类的两个对象，cust1 和 cust2，并向 new 方法传递必要的参数。当 initialize 方法被调用时，对象的必要属性被初始化。</p><p>一旦对象被创建，您需要使用两个对象来调用类的方法。如果您想要调用方法或任何数据成员，您可以编写代码，如下所示：</p><pre><code>cust1.display_details()cust1.total_no_of_customers()</code></pre><p>对象名称后总是跟着一个点号，接着是方法名称或数据成员。我们已经看到如何使用 cust1 对象调用两个方法。使用 cust2 对象，您也可以调用两个方法，如下所示：</p><pre><code>cust2.display_details()cust2.total_no_of_customers()</code></pre><h4 id="保存并执行代码"><a href="#保存并执行代码" class="headerlink" title="保存并执行代码"></a>保存并执行代码</h4><p>现在，把所有的源代码放在 main.rb 文件中，如下所示：</p><p>实例</p><pre><code>#!/usr/bin/rubyclass Customer   @@no_of_customers=0   def initialize(id, name, addr)      @cust_id=id      @cust_name=name      @cust_addr=addr   end   def display_details()      puts &quot;Customer id #@cust_id&quot;      puts &quot;Customer name #@cust_name&quot;      puts &quot;Customer address #@cust_addr&quot;   end   def total_no_of_customers()      @@no_of_customers += 1      puts &quot;Total number of customers: #@@no_of_customers&quot;   endend# 创建对象cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)# 调用方法cust1.display_details()cust1.total_no_of_customers()cust2.display_details()cust2.total_no_of_customers()</code></pre><p>运行程序，如下所示：</p><pre><code>$ ruby main.rb</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Customer id 1<br>Customer name John<br>Customer address Wisdom Apartments, Ludhiya<br>Total number of customers: 1<br>Customer id 2<br>Customer name Poul<br>Customer address New Empire road, Khandala<br>Total number of customers: 2</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 类和对象</title>
      <link href="/2019/08/23/ruby-4/"/>
      <url>/2019/08/23/ruby-4/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-类和对象"><a href="#Ruby-类和对象" class="headerlink" title="Ruby 类和对象"></a>Ruby 类和对象</h3><p>Ruby 是一种完美的面向对象编程语言。面向对象编程语言的特性包括：</p><ul><li>数据封装</li><li>数据抽象</li><li>多态性</li><li>继承</li></ul><p>一个面向对象的程序，涉及到的类和对象。类是个别对象创建的蓝图。在面向对象的术语中，您的自行车是自行车类的一个实例。</p><p>以车辆为例，它包括车轮（wheels）、马力（horsepower）、燃油或燃气罐容量（fuel or gas tank capacity）。这些属性形成了车辆（Vehicle）类的数据成员。借助这些属性您能把一个车辆从其他车辆中区分出来。</p><p>车辆也能包含特定的函数，比如暂停（halting）、驾驶（driving）、超速（speeding）。这些函数形成了车辆（Vehicle）类的数据成员。因此，您可以定义类为属性和函数的组合。</p><p>类 Vehicle 的定义如下：</p><p>实例</p><pre><code>Class Vehicle{   Number no_of_wheels   Number horsepower   Characters type_of_tank   Number Capacity   Function speeding   {   }   Function driving   {   }   Function halting   {   }}</code></pre><p>通过给这些数据成员分配不同的值，您可以创建类 Vehicle 的不同实例。例如，一架飞机有三个轮子，马力 1,000，燃油罐容量为 100 升。以同样的方式，一辆汽车有四个轮子，马力 200，煤气罐容量为 25 升。</p><h4 id="在-Ruby-中定义类"><a href="#在-Ruby-中定义类" class="headerlink" title="在 Ruby 中定义类"></a>在 Ruby 中定义类</h4><p>为了使用 Ruby 实现面向对象编程，您需要先学习如何在 Ruby 中创建对象和类。</p><p>在 Ruby 中，类总是以关键字 class 开始，后跟类的名称。类名的首字母应该大写。类 Customer 如下所示：</p><pre><code>class Customerend</code></pre><p>您可以使用关键字 end 终止一个类。类 中的所有数据成员都是介于类定义和 end 关键字之间。</p><h4 id="Ruby-类中的变量"><a href="#Ruby-类中的变量" class="headerlink" title="Ruby 类中的变量"></a>Ruby 类中的变量</h4><p>Ruby 提供了四种类型的变量：</p><ul><li>局部变量：局部变量是在方法中定义的变量。局部变量在方法外是不可用的。在后续的章节中，您将看到有关方法的更多细节。局部变量以小写字母或 _ 开始。</li><li>实例变量：实例变量可以跨任何特定的实例或对象中的方法使用。这意味着，实例变量可以从对象到对象的改变。实例变量在变量名之前放置符号（@）。</li><li>类变量：类变量可以跨不同的对象使用。类变量属于类，且是类的一个属性。类变量在变量名之前放置符号（@@）。</li><li>全局变量：类变量不能跨类使用。如果您想要有一个可以跨类使用的变量，您需要定义全局变量。全局变量总是以美元符号（$）开始。<br>实例<br>使用类变量 @@no_of_customers，您可以判断被创建的对象数量，这样可以确定客户数量。</li></ul><p>实例</p><pre><code>class Customer   @@no_of_customers=0end</code></pre><h5 id="在-Ruby-中使用-new-方法创建对象"><a href="#在-Ruby-中使用-new-方法创建对象" class="headerlink" title="在 Ruby 中使用 new 方法创建对象"></a>在 Ruby 中使用 new 方法创建对象</h5><p>对象是类的实例。现在您将学习如何在 Ruby 中创建类的对象。在 Ruby 中，您可以使用类的方法 new 创建对象。</p><p>方法 new 是一种独特的方法，在 Ruby 库中预定义。new 方法属于类方法。</p><p>下面的实例创建了类 Customer 的两个对象 cust1 和 cust2：</p><pre><code>cust1 = Customer. newcust2 = Customer. new</code></pre><p>在这里，cust1 和 cust2 是两个对象的名称。对象名称后跟着等号（=），等号后跟着类名，然后是点运算符和关键字 new。</p><h5 id="自定义方法来创建-Ruby-对象"><a href="#自定义方法来创建-Ruby-对象" class="headerlink" title="自定义方法来创建 Ruby 对象"></a>自定义方法来创建 Ruby 对象</h5><p>您可以给方法 new 传递参数，这些参数可用于初始化类变量。</p><p>当您想要声明带参数的 new 方法时，您需要在创建类的同时声明方法 initialize。</p><p>initialize 方法是一种特殊类型的方法，将在调用带参数的类的 new 方法时执行。</p><p>下面的实例创建了 initialize 方法：</p><p>实例</p><pre><code>class Customer   @@no_of_customers=0   def initialize(id, name, addr)      @cust_id=id      @cust_name=name      @cust_addr=addr   endend</code></pre><p>在本实例中，您可以声明带有 id、name、addr 作为局部变量的 initialize方法。在这里，def 和 end 用于定义 Ruby 方法 initialize。在后续的章节中，您将学习有关方法的更多细节。</p><p>在 initialize 方法中，把这些局部变量的值传给实例变量 @cust_id、@cust_name 和 @cust_addr。在这里，局部变量的值是随着 new 方法进行传递的。</p><p>现在，您可以创建对象，如下所示：</p><pre><code>cust1=Customer.new(&quot;1&quot;, &quot;John&quot;, &quot;Wisdom Apartments, Ludhiya&quot;)cust2=Customer.new(&quot;2&quot;, &quot;Poul&quot;, &quot;New Empire road, Khandala&quot;)</code></pre><h4 id="Ruby-类中的成员函数"><a href="#Ruby-类中的成员函数" class="headerlink" title="Ruby 类中的成员函数"></a>Ruby 类中的成员函数</h4><p>在 Ruby 中，函数被称为方法。类中的每个方法是以关键字 def 开始，后跟方法名。</p><p>方法名总是以小写字母开头。在 Ruby 中，您可以使用关键字 end 来结束一个方法。</p><p>下面的实例定义了一个 Ruby 方法：</p><pre><code>class Sample   def function      statement 1      statement 2   endend</code></pre><p>在这里，statement 1 和 statement 2 是类 Sample 内的方法 function 的主体的组成部分。这些语句可以是任何有效的 Ruby 语句。例如，我们可以使用方法 puts 来输出 Hello Ruby，如下所示：</p><pre><code>class Sample   def hello      puts &quot;Hello Ruby!&quot;   endend</code></pre><p>下面的实例将创建类 Sample 的一个对象，并调用 hello 方法：</p><pre><code>#!/usr/bin/rubyclass Sample   def hello      puts &quot;Hello Ruby!&quot;   endend</code></pre><p>使用上面的类来创建对象</p><pre><code>object = Sample. newobject.hello</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Hello Ruby!</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 数据类型</title>
      <link href="/2019/08/23/ruby-3/"/>
      <url>/2019/08/23/ruby-3/</url>
      
        <content type="html"><![CDATA[<h2 id="Ruby-数据类型"><a href="#Ruby-数据类型" class="headerlink" title="Ruby 数据类型"></a>Ruby 数据类型</h2><h3 id="数值类型-Number"><a href="#数值类型-Number" class="headerlink" title="数值类型(Number)"></a>数值类型(Number)</h3><h4 id="整型-Integer"><a href="#整型-Integer" class="headerlink" title="整型(Integer)"></a>整型(Integer)</h4><ul><li><p>整型分两种，如果在31位以内（四字节），那为Fixnum实例。如果超过，即为Bignum实例。</p></li><li><p>整数范围从 -230 到 230-1，在这个范围内的整数是类 Fixnum 的对象， 当整数值大于或等于2的30次方时（ -262 到 262-1），会自动转化为 Bignum 类型。</p></li></ul><p>您可以在整数前使用一个可选的前导符号，一个可选的基础指标（0 对应 octal，0x 对应 hex，0b 对应 binary），后跟一串数字。下划线字符在数字字符串中被忽略。</p><p>您可以获取一个 ASCII 字符或一个用问号标记的转义序列的整数值。</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><pre><code>123                  # Fixnum 十进制1_234                # Fixnum 带有下划线的十进制-500                 # 负的 Fixnum0377                 # 八进制0xff                 # 十六进制0b1011               # 二进制&quot;a&quot;.ord              # &quot;a&quot; 的字符编码?\n                  # 换行符（0x0a）的编码12345678901234567890 # 大数#整型 Integer 以下是一些整型字面量 #字面量（literal）：代码中能见到的值，数值，bool值，字符串等都叫字面量 #如以下的0,1_000_000,0xa等 a1=0 #带千分符的整型 a2=1_000_000 #其它进制的表示 a3=0xa puts a1,a2 puts a3 #puts print 都是向控制台打印字符，其中puts带回车换行符 =begin 这是注释，称作：嵌入式文档注释 类似C#中的/**/ =end</code></pre><h4 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h4><ul><li>Ruby 支持浮点数。它们是带有小数的数字。浮点数是类 Float 的对象，且可以是下列中任意一个。</li></ul><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><pre><code>123.4                # 浮点值1.0e6                # 科学记数法4E20                 # 不是必需的4e+20                # 指数前的符号#浮点型 f1=0.0 f2=2.1 f3=1000000.1 puts f3</code></pre><h5 id="算术操作"><a href="#算术操作" class="headerlink" title="算术操作"></a>算术操作</h5><ul><li><p>加减乘除操作符：+-*/；指数操作符为**</p></li><li><p>指数不必是整数，例如</p></li></ul><pre><code>#指数算术 puts 2**(1/4)#1与4的商为0，然后2的0次方为1 puts 16**(1/4.0)#1与4.0的商为0.25（四分之一），然后开四次方根</code></pre><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><ul><li><p>Ruby 字符串简单地说是一个 8 位字节序列，它们是类 String 的对象。</p></li><li><p>双引号标记的字符串允许替换和使用反斜线符号，单引号标记的字符串不允许替换，且只允许使用 \ 和 \’ 两个反斜线符号。</p></li></ul><pre><code>实例#!/usr/bin/ruby -wputs &#39;escape using &quot;\\&quot;&#39;;puts &#39;That\&#39;s right&#39;;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>escape using “\”<br>That’s right</p></blockquote></div></div><p>您可以使用序列 #{ expr } 替换任意 Ruby 表达式的值为一个字符串。在这里，expr 可以是任意的 Ruby 表达式。</p><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/ruby -wputs &quot;相乘 : #{24*60*60}&quot;;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>相乘 : 86400</p></blockquote></div></div><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/ruby -wname=&quot;Ruby&quot; puts name puts &quot;#{name+&quot;,ok&quot;}&quot;</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Ruby<br>Ruby,ok</p></blockquote></div></div><h4 id="反斜线符号"><a href="#反斜线符号" class="headerlink" title="反斜线符号"></a>反斜线符号</h4><p>下表列出了 Ruby 支持的反斜线符号：</p><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">表示的字符</th></tr></thead><tbody><tr><td style="text-align:center">\n</td><td style="text-align:center">换行符 (0x0a)</td></tr><tr><td style="text-align:center">\r</td><td style="text-align:center">回车符 (0x0d)</td></tr><tr><td style="text-align:center">\f</td><td style="text-align:center">换页符 (0x0c)</td></tr><tr><td style="text-align:center">\b</td><td style="text-align:center">退格键 (0x08)</td></tr><tr><td style="text-align:center">\a</td><td style="text-align:center">报警符 Bell (0x07)</td></tr><tr><td style="text-align:center">\e</td><td style="text-align:center">转义符 (0x1b)</td></tr><tr><td style="text-align:center">\s</td><td style="text-align:center">空格符 (0x20)</td></tr><tr><td style="text-align:center">\nnn</td><td style="text-align:center">八进制表示法 (n 是 0-7)</td></tr><tr><td style="text-align:center">\xnn</td><td style="text-align:center">十六进制表示法 (n 是 0-9、a-f 或 A-F)</td></tr><tr><td style="text-align:center">\cx, \C-x</td><td style="text-align:center">Control-x</td></tr><tr><td style="text-align:center">\M-x</td><td style="text-align:center">Meta-x (c or 0x80)</td></tr><tr><td style="text-align:center">\M-\C-x</td><td style="text-align:center">Meta-Control-x</td></tr><tr><td style="text-align:center">\x</td><td style="text-align:center">字符 x</td></tr></tbody></table><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>数组字面量通过[]中以逗号分隔定义，且支持range定义。</p><ul><li>（1）数组通过[]索引访问</li><li>（2）通过赋值操作插入、删除、替换元素</li><li>（3）通过+，－号进行合并和删除元素，且集合做为新集合出现</li><li>（4）通过&lt;&lt;号向原数据追加元素</li><li>（5）通过*号重复数组元素</li><li>（6）通过｜和&amp;符号做并集和交集操作（注意顺序）</li></ul><h4 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/rubyary = [ &quot;fred&quot;, 10, 3.14, &quot;This is a string&quot;, &quot;last element&quot;, ]ary.each do |i|    puts iend</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>fred<br>10<br>3.14<br>This is a string<br>last element</p></blockquote></div></div><h4 id="哈希类型"><a href="#哈希类型" class="headerlink" title="哈希类型"></a>哈希类型</h4><ul><li>Ruby 哈希是在大括号内放置一系列键/值对，键和值之间使用逗号和序列 =&gt; 分隔。尾部的逗号会被忽略。</li></ul><h5 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h5><pre><code>#!/usr/bin/rubyhsh = colors = { &quot;red&quot; =&gt; 0xf00, &quot;green&quot; =&gt; 0x0f0, &quot;blue&quot; =&gt; 0x00f }hsh.each do |key, value|    print key, &quot; is &quot;, value, &quot;\n&quot;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>red is 3840<br>green is 240<br>blue is 15</p></blockquote></div></div><h4 id="范围类型"><a href="#范围类型" class="headerlink" title="范围类型"></a>范围类型</h4><ul><li><p>一个范围表示一个区间。</p></li><li><p>范围是通过设置一个开始值和一个结束值来表示。范围可使用 s..e 和 s…e 来构造，或者通过 Range.new 来构造。</p></li><li><p>使用 .. 构造的范围从开始值运行到结束值（包含结束值）。使用 … 构造的范围从开始值运行到结束值（不包含结束值）。当作为一个迭代器使用时，范围会返回序列中的每个值。</p></li><li><p>范围 (1..5) 意味着它包含值 1, 2, 3, 4, 5，范围 (1…5) 意味着它包含值 1, 2, 3, 4 。</p></li></ul><h4 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/ruby(10..15).each do |n|    print n, &#39; &#39;end</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>10 11 12 13 14 15</p></blockquote></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 语法基础</title>
      <link href="/2019/05/22/ruby-2/"/>
      <url>/2019/05/22/ruby-2/</url>
      
        <content type="html"><![CDATA[<h3 id="Ruby-语法"><a href="#Ruby-语法" class="headerlink" title="Ruby 语法"></a>Ruby 语法</h3><ul><li>让我们编写一个简单的 Ruby 程序。所有的 Ruby 文件扩展名都是 .rb。所以，把下面的源代码放在 test.rb 文件中。</li></ul><pre><code>#!/usr/bin/ruby -wputs &quot;Hello, Ruby!&quot;;</code></pre><p>在这里，假设您的 /usr/bin 目录下已经有可用的 Ruby 解释器。现在，尝试运行这个程序，如下所示：</p><pre><code>&gt; $ ruby test.rb</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>Hello, Ruby!</p></blockquote></div></div><p>您已经看到了一个简单的 Ruby 程序，现在让我们看看一些 Ruby 语法相关的基本概念：</p><h3 id="Ruby-程序中的空白"><a href="#Ruby-程序中的空白" class="headerlink" title="Ruby 程序中的空白"></a>Ruby 程序中的空白</h3><ul><li>在 Ruby 代码中的空白字符，如空格和制表符一般会被忽略，除非当它们出现在字符串中时才不会被忽略。然而，有时候它们用于解释模棱两可的语句。当启用 -w 选项时，这种解释会产生警告。</li></ul><p>实例：</p><blockquote><p>a + b 被解释为 a+b （这是一个局部变量）<br>a  +b 被解释为 a(+b) （这是一个方法调用）</p></blockquote><h3 id="Ruby-程序中的行尾"><a href="#Ruby-程序中的行尾" class="headerlink" title="Ruby 程序中的行尾"></a>Ruby 程序中的行尾</h3><ul><li>Ruby 把分号和换行符解释为语句的结尾。但是，如果 Ruby 在行尾遇到运算符，比如 +、- 或反斜杠，它们表示一个语句的延续。</li></ul><h3 id="Ruby-标识符"><a href="#Ruby-标识符" class="headerlink" title="Ruby 标识符"></a>Ruby 标识符</h3><ul><li>标识符是变量、常量和方法的名称。Ruby 标识符是大小写敏感的。这意味着 Ram 和 RAM 在 Ruby 中是两个不同的标识符。</li><li>Ruby 标识符的名称可以包含字母、数字和下划线</li></ul><h3 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h3><ul><li>下表列出了 Ruby 中的保留字。这些保留字不能作为常量或变量的名称。但是，它们可以作为方法名。</li></ul><table><thead><tr><th style="text-align:center">BEGIN</th><th style="text-align:center">do</th><th style="text-align:center">next</th><th style="text-align:center">then</th></tr></thead><tbody><tr><td style="text-align:center">END</td><td style="text-align:center">else</td><td style="text-align:center">nil</td><td style="text-align:center">true</td></tr><tr><td style="text-align:center">alias</td><td style="text-align:center">elsif</td><td style="text-align:center">not</td><td style="text-align:center">undef</td></tr><tr><td style="text-align:center">and</td><td style="text-align:center">end</td><td style="text-align:center">or</td><td style="text-align:center">unless</td></tr><tr><td style="text-align:center">begin</td><td style="text-align:center">ensure</td><td style="text-align:center">redo</td><td style="text-align:center">until</td></tr><tr><td style="text-align:center">break</td><td style="text-align:center">false</td><td style="text-align:center">rescue</td><td style="text-align:center">when</td></tr><tr><td style="text-align:center">case</td><td style="text-align:center">for</td><td style="text-align:center">retry</td><td style="text-align:center">while</td></tr><tr><td style="text-align:center">class</td><td style="text-align:center">if</td><td style="text-align:center">return</td><td style="text-align:center">while</td></tr><tr><td style="text-align:center">def</td><td style="text-align:center">in</td><td style="text-align:center">self</td><td style="text-align:center">__FILE__</td></tr><tr><td style="text-align:center">defined?</td><td style="text-align:center">module</td><td style="text-align:center">super</td><td style="text-align:center">__LINE__</td></tr></tbody></table><h3 id="Ruby-程序中的空白-1"><a href="#Ruby-程序中的空白-1" class="headerlink" title="Ruby 程序中的空白"></a>Ruby 程序中的空白</h3><ul><li>在 Ruby 代码中的空白字符，如空格和制表符一般会被忽略，除非当它们出现在字符串中时才不会被忽略。然而，有时候它们用于解释模棱两可的语句。当启用 -w 选项时，这种解释会产生警告。</li></ul><h3 id="Ruby-中的-Here-Document"><a href="#Ruby-中的-Here-Document" class="headerlink" title="Ruby 中的 Here Document"></a>Ruby 中的 Here Document</h3><ul><li><p>“Here Document” 是指建立多行字符串。在 &lt;&lt; 之后，您可以指定一个字符串或标识符来终止字符串，且当前行之后直到终止符为止的所有行是字符串的值。</p></li><li><p>如果终止符用引号括起，引号的类型决定了面向行的字符串类型。请注意&lt;&lt; 和终止符之间必须没有空格。</p></li></ul><p>下面是不同的实例：</p><pre><code>#!/usr/bin/ruby -w# -*- coding : utf-8 -*-print &lt;&lt;EOF    这是第一种方式创建here document 。    多行字符串。EOFprint &lt;&lt;&quot;EOF&quot;;                # 与上面相同    这是第二种方式创建here document 。    多行字符串。EOFprint &lt;&lt;`EOC`                 # 执行命令    echo hi there    echo lo thereEOCprint &lt;&lt;&quot;foo&quot;, &lt;&lt;&quot;bar&quot;          # 您可以把它们进行堆叠    I said foo.foo    I said bar.bar</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>这是第一种方式创建here document 。<br>多行字符串。<br>这是第二种方式创建here document 。<br>多行字符串。<br>hi there<br>lo there<br>I said foo.<br>I said bar.</p></blockquote></div></div><h3 id="Ruby-BEGIN-语句"><a href="#Ruby-BEGIN-语句" class="headerlink" title="Ruby BEGIN 语句"></a>Ruby BEGIN 语句</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><pre><code>BEGIN {   code}</code></pre><p>声明 code 会在程序运行之前被调用。</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/rubyputs &quot;这是主 Ruby 程序&quot;BEGIN {   puts &quot;初始化 Ruby 程序&quot;}</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>初始化 Ruby 程序<br>这是主 Ruby 程序</p></blockquote></div></div><h3 id="Ruby-END-语句"><a href="#Ruby-END-语句" class="headerlink" title="Ruby END 语句"></a>Ruby END 语句</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><pre><code>END {   code}</code></pre><p>声明 code 会在程序的结尾被调用。</p><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><pre><code>#!/usr/bin/rubyputs &quot;这是主 Ruby 程序&quot;END {   puts &quot;停止 Ruby 程序&quot;}BEGIN {   puts &quot;初始化 Ruby 程序&quot;}</code></pre><div class="spoiler collapsed"><div class="spoiler-title">以上实例输出结果为：</div><div class="spoiler-content"><blockquote><p>初始化 Ruby 程序<br>这是主 Ruby 程序<br>停止 Ruby 程序<br>Ruby 注释</p></blockquote></div></div><h3 id="注释会对-Ruby"><a href="#注释会对-Ruby" class="headerlink" title="注释会对 Ruby"></a>注释会对 Ruby</h3><ul><li>解释器隐藏一行，或者一行的一部分，或者若干行。您可以在行首使用字符（ # ）：<pre><code># 我是注释，请忽略我。</code></pre>或者，注释可以跟着语句或表达式的同一行的后面：<pre><code>name = &quot;Madisetti&quot; # 这也是注释</code></pre>您可以注释多行，如下所示：<pre><code># 这是注释。# 这也是注释。# 这也是注释。# 这还是注释。</code></pre>下面是另一种形式。这种块注释会对解释器隐藏 =begin/=end 之间的行：<pre><code>=begin这是注释。这也是注释。这也是注释。这还是注释。=end</code></pre></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby rvm 安装</title>
      <link href="/2019/05/22/ruby/"/>
      <url>/2019/05/22/ruby/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装rvm"><a href="#安装rvm" class="headerlink" title="安装rvm"></a>安装rvm</h4><h5 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h5><ul><li>gpg –keyserver hkp://keys.gnupg.net –recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</li><li>curl -sSL <a href="https://get.rvm.io" target="_blank" rel="noopener">https://get.rvm.io</a> | bash -s stable</li></ul><h5 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h5><ul><li>wget <a href="https://codeload.github.com/rvm/rvm/tar.gz/1.29.9" target="_blank" rel="noopener">https://codeload.github.com/rvm/rvm/tar.gz/1.29.9</a></li><li>tar -xf </li><li>cd tar_folder</li><li>sh install</li></ul><h4 id="安装ruby"><a href="#安装ruby" class="headerlink" title="安装ruby"></a>安装ruby</h4><ul><li>rvm install 2.4.5</li></ul><h4 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h4><pre><code>[root@autotest-ruby-agent ~]# rvm use 2.4.5Using /usr/local/rvm/gems/ruby-2.4.5[root@autotest-ruby-agent ~]# [root@autotest-ruby-agent ~]# ruby --versionruby 2.4.5p335 (2018-10-18 revision 65137) [x86_64-linux]</code></pre><h3 id="ri-安装说明"><a href="#ri-安装说明" class="headerlink" title="ri 安装说明"></a>ri 安装说明</h3><ul><li>不安装 api 文档</li></ul><blockquote><p> rvm docs generate 安装api 文档</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ruby 第一个程序</title>
      <link href="/2019/05/22/ruby-1/"/>
      <url>/2019/05/22/ruby-1/</url>
      
        <content type="html"><![CDATA[<h3 id="交互式ruby"><a href="#交互式ruby" class="headerlink" title="交互式ruby"></a>交互式ruby</h3><ul><li>irb</li></ul><pre><code>[root@autotest-ruby-agent ~]# irb2.4.5 :001 &gt; </code></pre><ul><li>最简单的ruby程序</li></ul><pre><code>2.4.5 :001 &gt; puts &quot;hello world&quot;hello world =&gt; nil 2.4.5 :002 &gt; </code></pre><ul><li>函数</li></ul><pre><code>2.4.5 :002 &gt; def s 2.4.5 :003?&gt;   return &quot;ssss&quot;2.4.5 :004?&gt;   end =&gt; :s 2.4.5 :005 &gt; puts sssss =&gt; nil </code></pre><ul><li>离开 irb</li></ul><pre><code>2.4.5 :006 &gt; exit[root@autotest-ruby-agent ~]# </code></pre><h3 id="命令行执行"><a href="#命令行执行" class="headerlink" title="命令行执行"></a>命令行执行</h3><pre><code>ruby hello_world.rb</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spirent 测试</title>
      <link href="/2019/05/21/ops-8/"/>
      <url>/2019/05/21/ops-8/</url>
      
        <content type="html"><![CDATA[<h3 id="spirent-流量测试"><a href="#spirent-流量测试" class="headerlink" title="spirent 流量测试"></a>spirent 流量测试</h3><h4 id="spirent-主流程"><a href="#spirent-主流程" class="headerlink" title="spirent 主流程"></a>spirent 主流程</h4><ul><li>step up a communication between your pc and your spirent testcenter chassis</li><li>prepare DUT/SUT</li><li>connect spirent testcenter chassis to DUT/SUT</li><li>initialize spirent testcenter api to establish the object set context</li><li>create project objects and set project attributes</li><li>create port objects and set port attributes</li><li>create streamblock objects and set streamblock attributes</li><li>setup spirent generator and analyzer  for traffic support</li><li>establish the software connection from your pc to the spirent testcase chassis</li><li>start test</li><li>review/retrive the test results</li><li>cleanup  after finish</li></ul><h4 id="监控项"><a href="#监控项" class="headerlink" title="监控项"></a>监控项</h4><ul><li>吞吐量</li><li>frame lost</li><li>延时时间</li></ul><h4 id="tcl-demo"><a href="#tcl-demo" class="headerlink" title="tcl demo"></a>tcl demo</h4><pre><code>#################################################################################                     2544 Spirent TestCenter Lingo Example#                         by Spirent Communications##   Date: May 11, 2011# Author: Matthew Jefferson - matt.jefferson@spirent.com## Description: An example of how to create and execute an RFC2544 throughput#              test using Spirent TestCenter Lingo.### Topology:#   There are three ports (IPv4) in a full mesh.#   The IP addressing is:#       UUT        STCPort#   192.85.10.1 - 192.85.10.2   Port1#   192.85.11.1 - 192.85.11.2   Port2#   192.85.12.1 - 192.85.12.2   Port3################################################################################################################################################################ Copyright (c) 2011 SPIRENT COMMUNICATIONS OF CALABASAS, INC.# All Rights Reserved##                SPIRENT COMMUNICATIONS OF CALABASAS, INC.#                            LICENSE AGREEMENT##  By accessing or executing this software, you agree to be bound by the terms#  of this agreement.## Redistribution and use of this software in source and binary forms, with or# without modification, are permitted provided that the following conditions# are met:#  1. Redistribution of source code must retain the above copyright notice,#     this list of conditions and the following disclaimer.#  2. Redistribution&#39;s in binary form must reproduce the above copyright notice.#     This list of conditions and the following disclaimer in the documentation#     and/or other materials provided with the distribution.#  3. Neither the name SPIRENT, SPIRENT COMMUNICATIONS, SMARTBITS, nor the names#     of its contributors may be used to endorse or promote products derived#     from this software without specific prior written permission.## This software is provided by the copyright holders and contributors [as is]# and any express or implied warranties, including, but not limited to, the# implied warranties of merchantability and fitness for a particular purpose# are disclaimed. In no event shall the Spirent Communications of Calabasas,# Inc. Or its contributors be liable for any direct, indirect, incidental,# special, exemplary, or consequential damages (including, but not limited to,# procurement of substitute goods or services; loss of use, data, or profits;# or business interruption) however caused and on any theory of liability,# whether in contract, strict liability, or tort (including negligence or# otherwise) arising in any way out of the use of this software, even if# advised of the possibility of such damage.################################################################################set ::env(STC_LOG_OUTPUT_DIRECTORY) [pwd]set api_path /opt/tools/Spirent_TestCenter_4.81/Spirent_TestCenter_Application_Linuxlappend ::auto_path $api_pathpackage require SpirentTestCenter#######################################################################################    Global Variables###################################################################################set trafficduration   10            ;# In seconds.set startingipaddress 10.1.1.2      ;# This IP address will be given to the first port in the &quot;locationlist&quot;.                                    ;# Each additional port will be incremented by 0.0.1.0.set startinggateway   10.1.1.1   ;# This Gateway address will be given to the first port in the &quot;locationlist&quot;.                                    ;# Each additional port will be incremented by 0.0.1.0.# The mapping of STC ports to the actual hardware locations.set locationlist {//192.168.230.220/2/7                  //192.168.230.220/2/8}set framesizelist &quot;64 1518&quot;#######################################################################################    Procedures###################################################################################proc debugGUI { } {    # This procedure displays a Tk-based object browser, allowing the user to    # view the API&#39;s entire object tree.    package require stclib    stclib::gdbg::stcdebug on    stclib::gdbg::stchelp on    stclib::gdbg::start    stclib::gdbg::update -pause true -label 1    stclib::gdbg::stop    return}#==============================================================================proc createReport { databasefilename reportfilename template } {    # Use the CLI interface for the results reporter to generate the desired report.    set rrpath [file join $::api_path &quot;results_reporter&quot;]    if { $::tcl_platform(platform) eq &quot;unix&quot; } {        set rrexecutable &quot;ResultsReporterCLI.sh&quot;    } else {        set rrexecutable &quot;ResultsReporterCLI.bat&quot;    }    # The results reporter needs to be lauched from its own directory.    set currentpath [pwd]    cd $rrpath    # Try and automatically determine the report type (pdf, csv or html) from the    # report filename extension.    # Get the extension and strip off the leading &quot;.&quot;.    set reporttype [string range [file extension $reportfilename] 1 end]    # This switch really only makes sure that the reporttype is valid.    switch [string tolower $reporttype] {        csv      -        csv-tree { set extension &quot;csv&quot; }        html     { set extension &quot;html&quot; }        pdf-tree { set extension &quot;pdf&quot; }        jpeg     { set extension &quot;jpeg&quot; }        default {            set reporttype &quot;pdf&quot;            set extension  &quot;pdf&quot;        }    }    set template       &quot;[file rootname $template].rtp&quot;    set templatepath   [file join $rrpath templates/$template]    set database       [file normalize [file join $currentpath $databasefilename]]    set outputfilename [file normalize [file join $currentpath $reportfilename]]    exec &gt;&amp;@ stdout [file join $rrpath $rrexecutable] -f $reporttype \                                                      -o $database \                                                      -d $outputfilename \                                                      -t $templatepath    cd $currentpath    return}#######################################################################################    Main#################################################################################### Create the root project objectputs &quot;Creating project ...&quot;set project [stc::create project]       ;# Storing the project handle isn&#39;t necessary, but I&#39;ll do it here.stc::config automationoptions -logTo             &quot;stcapi.log&quot; \                              -logLevel          INFO         \                              -suppresstclerrors false## Construct a list of ports in the config array.#foreach name [array names config] {#    regexp {//[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}/[0-9]{1,2}} $name port#    lappend config(port.list) $port#}# Create the ports and assign them a hardware location.foreach port $locationlist {    set config($port) [stc::create port -under          [stc::get system1 -children-project] \                                        -location       $port                                \                                        -usedefaulthost false]    # If you want to create a host for each port indiviually, you can do it here.} ;# End foreach port# You have the option to create the hosts individually, or by using the &quot;wizard&quot; (DeviceGenConfigExpand).# If you create the hosts individually, you have more flexibility in assigning the addressing to the hosts.# However, my emulated host addresses are in a single, contiguous sequence, so I&#39;m going to use the wizard.# The following code will create a &quot;Host&quot; object on each port in the configuration.stc::perform DeviceGenConfigExpand -DeleteExisting yes                                     \                                   -HostGenParams [list                                    \                                        -Count 1                                           \                                        -Port  [stc::get system1.project -children-port]   \                                        -DeviceGenEthIIIfParams.SrcMac &quot;00:10:95:00:00:01&quot; \                                        -DeviceGenIpv4IfParams [list                       \                                            Addr        $startingipaddress                 \                                            Gateway     $startinggateway                   \                                            AddrStep    0.0.1.0                            \                                            GatewayStep 0.0.1.0]]# This is an alternate way of specifying the same values.#stc::perform DeviceGenConfigExpand -DeleteExisting      yes \#                                   -HostGenParams.Count 1 \#                                   -HostGenParams.Port  [stc::get system1.project -children-port]   \#                                   -HostGenParams.DeviceGenEthIIIfParams.SrcMac &quot;00:10:95:00:00:01&quot; \#                                   -HostGenParams.DeviceGenIpv4IfParams.Addr    $startingipaddress# This is the Lingo command to set up the 2544 throughput test.puts &quot;Set up the RFC2544 throughput test...&quot;stc::perform Rfc2544SetupThroughputTestCommand -TrafficPattern MESH      \                                               -NumOfTrials    1         \                                               -Duration       10        \                                               -FrameSizeList  $framesizelist \                                               -SearchMode     BINARY    \                                               -RateLowerLimit 50        \                                               -RateUpperLimit 100       \                                               -RateInitial    100       \                                               -Resolution     1         \                                               -LearningMode   NONE# Save this configuration to a file. This can be loaded into the GUI if needed.stc::perform SaveToTcc -config system1 -filename [file normalize &quot;currentconfig.tcc&quot;]# Connect to the hardware...stc::perform attachPorts -portList    [stc::get system1.project -children-port] \                         -autoConnect TRUE# Apply configuration.puts &quot;Apply configuration...&quot;stc::applyputs &quot;Starting the sequencer...&quot;stc::perform SequencerStart# Wait for sequencer to finishputs &quot;Waiting for the sequencer to complete...this may take a little while.&quot;stc::waituntilcompleteputs &quot;The test has completed...Saving results...&quot;# Determine what the results database filename is...set resultsdb [stc::get system1.project.TestResultSetting -CurrentResultFileName]puts &quot;The results database is &#39;$resultsdb&#39;&quot;if {0} {    puts &quot;Exporting the results to CSV...the file will be in the same location as the results database.&quot;    stc::perform ExportDbResults -TemplateUri    &quot;templates/Rfc2544ThroughputStats.rtp&quot; \                                 -ResultDbFile   $resultsdb                             \                                 -Format         &quot;BINARY&quot;                               \                                 -ResultFileName &quot;Demo&quot;} else {    createReport $resultsdb test_report.pdf Rfc2544ThroughputStats}puts &quot;Done!&quot;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> spirent </category>
          
          <category> tcl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sse events in nginx</title>
      <link href="/2019/05/05/ops-7/"/>
      <url>/2019/05/05/ops-7/</url>
      
        <content type="html"><![CDATA[<h3 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h3><ul><li>proxy_set_header Connection ‘’;</li><li>proxy_buffering off;</li><li>proxy_cache off;</li><li>proxy_http_version 1.1;</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
          <category> rails </category>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>haxproxy keepalived</title>
      <link href="/2019/04/22/ops-6/"/>
      <url>/2019/04/22/ops-6/</url>
      
        <content type="html"><![CDATA[<pre><code># controller 1 , controller 2 做loadbalanceyum -y install haproxy keepalived192.168.224.181 master! Configuration File for keepalivedglobal_defs {   notification_email {     acassen@firewall.loc     failover@firewall.loc     sysadmin@firewall.loc   }   notification_email_from Alexandre.Cassen@firewall.loc   smtp_server 192.168.200.1   smtp_connect_timeout 30   router_id LVS_DEVEL01   vrrp_skip_check_adv_addr   vrrp_strict   vrrp_garp_interval 0   vrrp_gna_interval 0}vrrp_instance VI_1 {    state MASTER    interface eth0    virtual_router_id 51    priority 100    advert_int 1    authentication {        auth_type PASS        auth_pass 1111    }    virtual_ipaddress {        192.168.224.188    }}192.168.224.182 backup! Configuration File for keepalivedglobal_defs {   notification_email {     acassen@firewall.loc     failover@firewall.loc     sysadmin@firewall.loc   }   notification_email_from Alexandre.Cassen@firewall.loc   smtp_server 192.168.200.1   smtp_connect_timeout 30   router_id LVS_DEVEL02   vrrp_skip_check_adv_addr   vrrp_strict   vrrp_garp_interval 0   vrrp_gna_interval 0}vrrp_instance VI_1 {    state BACKUP        interface eth0    virtual_router_id 61    priority 90    advert_int 1    authentication {        auth_type PASS        auth_pass 1111    }    virtual_ipaddress {        192.168.224.188    }}vi /etc/sysctl.conf 添加net.ipv4.ip_nonlocal_bind = 1  忽略监听ip的检查 sysctl -p  访问方式1. 如果应用在机器上，可以直接用vip访问2.haproxy 配置代理#---------------------------------------------------------------------# Example configuration for a possible web application.  See the# full configuration options online.##   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt##---------------------------------------------------------------------#---------------------------------------------------------------------# Global settings#---------------------------------------------------------------------global    # to have these messages end up in /var/log/haproxy.log you will    # need to:    #    # 1) configure syslog to accept network log events.  This is done    #    by adding the &#39;-r&#39; option to the SYSLOGD_OPTIONS in    #    /etc/sysconfig/syslog    #    # 2) configure local2 events to go to the /var/log/haproxy.log    #   file. A line like the following can be added to    #   /etc/sysconfig/syslog    #    #    local2.*                       /var/log/haproxy.log    #    log         127.0.0.1 local2    chroot      /var/lib/haproxy    pidfile     /var/run/haproxy.pid    maxconn     4000    user        haproxy    group       haproxy    daemon    # turn on stats unix socket    stats socket /var/lib/haproxy/stats#---------------------------------------------------------------------# common defaults that all the &#39;listen&#39; and &#39;backend&#39; sections will# use if not designated in their block#---------------------------------------------------------------------defaults    mode                    http    log                     global    option                  httplog    option                  dontlognull    option http-server-close    option forwardfor       except 127.0.0.0/8    option                  redispatch    retries                 3    timeout http-request    10s    timeout queue           1m    timeout connect         10s    timeout client          1m    timeout server          1m    timeout http-keep-alive 10s    timeout check           10s    maxconn                 3000#---------------------------------------------------------------------# main frontend which proxys to the backends#---------------------------------------------------------------------frontend  main *:5000    acl url_static       path_beg       -i /static /images /javascript /stylesheets    acl url_static       path_end       -i .jpg .gif .png .css .js    use_backend static          if url_static    default_backend             app#---------------------------------------------------------------------# static backend for serving up images, stylesheets and such#---------------------------------------------------------------------backend static    balance     roundrobin    server      static 127.0.0.1:4331 check#---------------------------------------------------------------------# round robin balancing between the various backends#---------------------------------------------------------------------backend app    balance     roundrobin    server  app1 127.0.0.1:5001 check    server  app2 127.0.0.1:5002 check    server  app3 127.0.0.1:5003 check    server  app4 127.0.0.1:5004 check</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> haxproxy </category>
          
          <category> keepalived </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pacemaker haxproxy loadbalance</title>
      <link href="/2019/04/22/ops-5/"/>
      <url>/2019/04/22/ops-5/</url>
      
        <content type="html"><![CDATA[<h3 id="hosts"><a href="#hosts" class="headerlink" title="hosts"></a>hosts</h3><ul><li>192.168.224.181 controller1  terminaldevice-1</li><li>192.168.224.182 controller2  terminaldevice-2</li><li>192.168.224.183 controller3  terminaldevice-3</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>all node yum install -y pacemaker pcs psmisc policycoreutils-pythonsystemctl start pcsd.servicesystemctl enable pcsd.serviceecho hacluster | passwd hacluster --stdin192.168.224.181 pcs cluster auth 192.168.224.181 192.168.224.182 192.168.224.183#输入用户名密码haclusterpcs cluster setup --name lb_cluster  192.168.224.181 192.168.224.182 192.168.224.183# 在所有lb节点，启动corosync &amp; pacemaker服务systemctl start corosync.servicesystemctl enable corosync.servicesystemctl start pacemaker.servicesystemctl enable pacemaker.service# 3个节点   ssh-keygen  ssh-copy-id # 配置lb集群的特性pcs property set stonith-enabled=falsepcs property set no-quorum-policy=ignorepcs property set start-failure-is-fatal=falsepcs resource defaults resource-stickiness=10# 创建vip与haproxy资源，并添加限制，确保p_vip运行在haproxy服务正常的节点pcs resource create p_vip ocf:heartbeat:IPaddr2 ip=192.168.224.189 cidr_netmask=24 op monitor interval=2spcs resource create p_haproxy systemd:haproxy op monitor interval=2s --clonepcs constraint colocation add p_vip with p_haproxy-clone --forcepcs resource meta p_vip migration-threshold=3 failure-timeout=60s</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> haxproxy </category>
          
          <category> pacemaker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq集群安装</title>
      <link href="/2019/04/22/ops-4/"/>
      <url>/2019/04/22/ops-4/</url>
      
        <content type="html"><![CDATA[<h3 id="机器准备-centos7"><a href="#机器准备-centos7" class="headerlink" title="机器准备 (centos7)"></a>机器准备 (centos7)</h3><ul><li>192.168.224.181 controller1  terminaldevice-1</li><li>192.168.224.182 controller2  terminaldevice-2</li><li>192.168.224.183 controller3  terminaldevice-3</li></ul><pre><code>yum -y install epel-releaseyum install -y erlang rabbitmq-server# in  controller1rabbitmqctl add_user openstack openstackrabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot; /usr/lib/rabbitmq/bin/rabbitmq-plugins enable rabbitmq_management mochiweb webmachine rabbitmq_web_dispatch amqp_client rabbitmq_management_agentscp /var/lib/rabbitmq/.erlang.cookie controller2:/var/lib/rabbitmq/.erlang.cookiescp /var/lib/rabbitmq/.erlang.cookie controller3:/var/lib/rabbitmq/.erlang.cookie# controller2, controller3chown -R rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie  systemctl restart rabbitmq-server.servicerabbitmqctl stop_apprabbitmqctl join_cluster --ram rabbit@terminaldevice-1rabbitmqctl start_app#controller 1[root@terminaldevice-1 mysql]#  rabbitmqctl cluster_statusCluster status of node &#39;rabbit@terminaldevice-1&#39; ...[{nodes,[{disc,[&#39;rabbit@terminaldevice-1&#39;]}]}, {running_nodes,[&#39;rabbit@terminaldevice-1&#39;]}, {cluster_name,&lt;&lt;&quot;rabbit@controller1&quot;&gt;&gt;}, {partitions,[]}]...done.</code></pre><h3 id="RABBITMQ退出集群"><a href="#RABBITMQ退出集群" class="headerlink" title="RABBITMQ退出集群"></a>RABBITMQ退出集群</h3><h4 id="rabbit-node"><a href="#rabbit-node" class="headerlink" title="rabbit node"></a>rabbit node</h4><ul><li><p>rabbitmqctl stop_app</p></li><li><p>rabbitmqctl reset</p></li><li><p>rabbitmqctl start_app</p></li></ul><h4 id="master-node"><a href="#master-node" class="headerlink" title="master node"></a>master node</h4><ul><li>rabbitmqctl forget_cluster_node rabbit@rabbitmq2</li></ul><h3 id="RABBITMQ集群重启"><a href="#RABBITMQ集群重启" class="headerlink" title="RABBITMQ集群重启"></a>RABBITMQ集群重启</h3><h4 id="先在一个节点上执行"><a href="#先在一个节点上执行" class="headerlink" title="先在一个节点上执行"></a>先在一个节点上执行</h4><ul><li><p>rabbitmqctl force_boot</p></li><li><p>service rabbitmq-server start</p></li></ul><h4 id="在其他节点上执行"><a href="#在其他节点上执行" class="headerlink" title="在其他节点上执行"></a>在其他节点上执行</h4><ul><li>service rabbitmq-server start</li></ul><p>#查看cluster状态是否正常（要在所有节点上查询）。</p><ul><li>rabbitmqctl cluster_status</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> rabbitmq </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mariadb galera 集群安装</title>
      <link href="/2019/04/19/ops-3/"/>
      <url>/2019/04/19/ops-3/</url>
      
        <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ul><li>192.168.224.181    controller1 </li><li>192.168.224.182   controller2 </li><li>192.168.224.183   controller3 </li></ul><h4 id="yum-源"><a href="#yum-源" class="headerlink" title="yum 源"></a>yum 源</h4><pre><code># 163源测试,找不到wsrepvim Mariadb.repo[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.1/centos7-amd64enabled = 1gpgcheck = 0</code></pre><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>在所有机器执行<pre><code>yum install mariadb-server mariadb-client galera xinetd rsync -ysystemctl start mariadbsystemctl status mariadbmysql_secure_installation</code></pre></li></ul><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ul><li>192.168.224.181</li></ul><pre><code>vim /etc/my.cnf.d/server.cnf vim /etc/my.cnf.d/server.cnf# Galera Cluster Configuration[galera]# Mysql Configurationbinlog_format = ROWmax_connections = 10000bind-address = 192.168.224.181# Galera Cluster Configurationwsrep_provider = /usr/lib64/galera/libgalera_smm.sowsrep_cluster_name = &quot;OpenStack&quot;wsrep_cluster_address = &quot;gcomm://192.168.224.182,192.168.224.181,192.168.224.183&quot;wsrep_node_name = controller1wsrep_node_address = 192.168.224.181wsrep_sst_method = rsyncwsrep_on = ONwsrep_slave_threads = 1# InnoDB Configurationdefault_storage_engine = InnoDBinnodb_autoinc_lock_mode = 2innodb_flush_log_at_trx_commit = 0innodb_buffer_pool_size = 122M# systemctl 参数vim /usr/lib/systemd/system/mariadb.service# add to serviceLimitNOFILE=10000LimitNPROC=10000systemctl daemon-reload启动 /usr/sbin/mysqld --wsrep-new-cluster --user=root &amp;</code></pre><ul><li>其他机器配置</li></ul><pre><code>拷贝机器  server.cnf文件 ,修改机器ip启动# service mariadb start /usr/sbin/mysqld  --user=root查看show status like &#39;wsrep%&#39;;#集群size是不是3# | wsrep_incoming_addresses     | 192.168.17.132:3306,192.168.17.138:3306,192.168.17.151:3306</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
          <category> mariadb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opentsdb api使用常见问题</title>
      <link href="/2019/04/19/ops-2/"/>
      <url>/2019/04/19/ops-2/</url>
      
        <content type="html"><![CDATA[<h3 id="openstsdb使用问题"><a href="#openstsdb使用问题" class="headerlink" title="openstsdb使用问题"></a>openstsdb使用问题</h3><h4 id="opentsdb-api-查找lastdata-返回空"><a href="#opentsdb-api-查找lastdata-返回空" class="headerlink" title="opentsdb api 查找lastdata 返回空"></a>opentsdb api 查找lastdata 返回空</h4><pre><code>解决方法opentsdb.conftsd.core.auto_create_metrics = truetsd.core.meta.enable_realtime_ts = truetsd.core.meta.enable_tsuid_tracking = truetsd.core.meta.enable_realtime_uid = truetsd.core.meta.enable_tsuid_incrementing = true    同步数据tsdb  uid  metasync</code></pre><h4 id="opentsdb-api-查找提示用重复数据"><a href="#opentsdb-api-查找提示用重复数据" class="headerlink" title="opentsdb api 查找提示用重复数据"></a>opentsdb api 查找提示用重复数据</h4><pre><code>fsck --full-scan --threads=8 --fix --resolve-duplicates --compact查询api      data = {      metric: &quot;device.heart.data.new&quot;,      timestamp: timestamp,      value: currentstatuscode,      tags: {        mac: mac,        signal: signal,        key: key,        keyvalue: value,  #如果字段是value ,会产生       },    }</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opentsdb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper 集群安装</title>
      <link href="/2019/04/18/ops-1/"/>
      <url>/2019/04/18/ops-1/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>server1  192.168.213.58</li><li>server2  192.168.213.59</li><li>server3  192.168.213.65</li></ul><pre><code>1. github download https://github.com/apache/zookeeper/releases/tag/release-3.4.14/zookeeper*.zip2. unzip3. 安装 java ant #用oracle java, openjdk 不行4. ant 5. 修改配置文件 zoo.cfg# The number of milliseconds of each ticktickTime=2000# The number of ticks that the initial # synchronization phase can takeinitLimit=10# The number of ticks that can pass between # sending a request and getting an acknowledgementsyncLimit=5# the directory where the snapshot is stored.# do not use /tmp for storage, /tmp here is just # example sakes.dataDir=/opt/data/zookeeper# the port at which the clients will connectclientPort=2181# the maximum number of client connections.# increase this if you need to handle more clients#maxClientCnxns=60## Be sure to read the maintenance section of the # administrator guide before turning on autopurge.## http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance## The number of snapshots to retain in dataDir#autopurge.snapRetainCount=3# Purge task interval in hours# Set to &quot;0&quot; to disable auto purge feature#autopurge.purgeInterval=1#多个ip需要修改quorumListenOnAllIPs=trueserver.1=192.168.213.58:2888:3888server.2=192.168.213.59:2888:3888server.3=192.168.213.65:2888:38883888 选举端口, 2888业务端口</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> zookeeper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小幺鸡安装</title>
      <link href="/2019/04/15/ops/"/>
      <url>/2019/04/15/ops/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>下载war包(<a href="https://github.com/zhoujingjie/xiaoyaoji/releases" target="_blank" rel="noopener">https://github.com/zhoujingjie/xiaoyaoji/releases</a>)</li><li>安装JDK7, tomcat7</li></ul><pre><code>git clone https://github.com/zhoujingjie/xiaoyaoji.gityum -y install mariadb mariadb-server yum -y instal java mavencd xiaoyaojimvn clean package#创建数据库CREATE DATABASE `xiaoyaoji` CHARACTER SET utf8;use xiaoyaoji;source xiaoyaoji.sql#修改数据库配置文件/project/apache-tomcat-7.0.65/webapps/ROOT/WEB-INF/classes/config.properties </code></pre><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul><li>启动pending</li></ul><pre><code>用JDK7编译, tomcat7 部署</code></pre><ul><li>api测试  csrf</li></ul><pre><code>手动修改xhr 认证[root@autotestwebagent WEB-INF]# find ./ -name view.js./plugins/cn.xiaoyaoji.plugin/web/websocket/view.js./plugins/cn.xiaoyaoji.plugin/web/http/view.js157             dataType: this.content.contentType,158             crossDomain: true,159             xhrFields: {160                 withCredentials: false161             },</code></pre><ul><li>导出pdf乱码</li></ul><pre><code>系统自动的ttl, otf 文件不支持在,找一个支持中文的ttl/service/apache-tomcat-7.0.90/webapps/ROOT/WEB-INF/plugins/cn.xiaoyaoji.pdf/classesFZLTCXHJW.TTFNotoSansCJKsc-Regular.otf![FZLTCXHJW.TTF](/medias/ops/xiaoyaoji/FZLTCXHJW.TTF)![NotoSansCJKsc-Regular.otf](/medias/ops/xiaoyaoji/NotoSansCJKsc-Regular.otf)</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> xiaoyaoji </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ops </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula sunstone development</title>
      <link href="/2019/04/04/opennebula-17/"/>
      <url>/2019/04/04/opennebula-17/</url>
      
        <content type="html"><![CDATA[<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><pre><code>requirejs allows you to define blocks of functionality in different modules/files and then load and reuse them in other modulesnpm install -g requirejsHandlebars #模板handlerbar for requirejssudo npm install -g bowersudo npm install -g gruntsudo npm install -g grunt-cli</code></pre><h4 id="Adding-Custom-Tabs"><a href="#Adding-Custom-Tabs" class="headerlink" title="Adding Custom Tabs"></a>Adding Custom Tabs</h4><pre><code>app/main.jsshim: {  &#39;app&#39;: {    deps: [      &#39;tabs/provision-tab&#39;,      &#39;tabs/dashboard-tab&#39;,      &#39;tabs/system-tab&#39;,      ...      &#39;tabs/mycustom-tab&#39;    ]  },/etc/one/sunstone-views/(admin|user|...).yamlenabled_tabs:  - dashboard-tab  - system-tab  ...  - mycustom-tab</code></pre><h3 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h3><h4 id="routes-配置"><a href="#routes-配置" class="headerlink" title="routes 配置"></a>routes 配置</h4><pre><code>/usr/lib/one/sunstone/routes , add route folder/etc/one/sunstone-server.conf:routes:    - custom    - other</code></pre><h4 id="Creating-Sunstone-Server-Plugins"><a href="#Creating-Sunstone-Server-Plugins" class="headerlink" title="Creating Sunstone Server Plugins"></a>Creating Sunstone Server Plugins</h4><pre><code>get &#39;/myplugin/myresource/:id&#39; do    resource_id = params[:id]    # code...endpost &#39;/myplugin/myresource&#39; do    # codeendput &#39;/myplugin/myresource/:id&#39; do    # codeenddel &#39;/myplugin/myresource/:id&#39; do    # codeend</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 源码编译</title>
      <link href="/2019/04/04/opennebula-16/"/>
      <url>/2019/04/04/opennebula-16/</url>
      
        <content type="html"><![CDATA[<h3 id="dependency"><a href="#dependency" class="headerlink" title="dependency"></a>dependency</h3><ul><li>g++ compiler (&gt;= 4.0)</li><li>xmlrpc-c development libraries (&gt;= 1.06)</li><li>scons build tool (&gt;= 0.98)</li><li>sqlite3 development libraries (if compiling with sqlite support) (&gt;= 3.6)</li><li>mysql client development libraries (if compiling with mysql support) (&gt;= 5.1)</li><li>libxml2 development libraries (&gt;= 2.7)</li><li>libvncserver development libraries (&gt;= 0.9)</li><li>openssl development libraries (&gt;= 0.9.8)</li><li>ruby interpreter (&gt;= 1.8.7)</li></ul><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><ul><li>gcc-c++</li><li>java-1.7.0-openjdk-devel</li><li>libcurl-devel</li><li>libxml2-devel</li><li>mysql-devel</li><li>openssh</li><li>openssl-devel</li><li>pkgconfig</li><li>ruby</li><li>scons</li><li>sqlite-devel</li><li>sqlite-devel</li><li>systemd-devel</li><li>xmlrpc-c</li><li>xmlrpc-c-devel</li><li>libvncserver-devel</li></ul><h3 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h3><pre><code>scons [OPTION=VALUE]</code></pre><table><thead><tr><th>OPTION</th><th style="text-align:center">VALUE</th></tr></thead><tbody><tr><td>sqlite_db</td><td style="text-align:center">path-to-sqlite-install</td></tr><tr><td>sqlite</td><td style="text-align:center">no if you don’t want to build sqlite support</td></tr><tr><td>mysql</td><td style="text-align:center">yes if you want to build mysql support</td></tr><tr><td>xmlrpc</td><td style="text-align:center">path-to-xmlrpc-install</td></tr><tr><td>parsers</td><td style="text-align:center">yes if you want to rebuild flex/bison files</td></tr><tr><td>new_xmlrpc</td><td style="text-align:center">yes if you have an xmlrpc-c version &gt;= 1.31</td></tr><tr><td>sunstone</td><td style="text-align:center">yes if you want to build sunstone minified files</td></tr><tr><td>systemd</td><td style="text-align:center">yes if you want to build systemd support</td></tr><tr><td>docker_machine</td><td style="text-align:center">yes if you want to build the docker-machine driver</td></tr><tr><td>svncterm</td><td style="text-align:center">no to skip building vnc support for LXD drivers</td></tr></tbody></table><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula onegate</title>
      <link href="/2019/04/04/opennebula-15/"/>
      <url>/2019/04/04/opennebula-15/</url>
      
        <content type="html"><![CDATA[<h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><h4 id="cofig-file-etc-one-onegate-server-conf"><a href="#cofig-file-etc-one-onegate-server-conf" class="headerlink" title="cofig file  /etc/one/onegate-server.conf"></a>cofig file  /etc/one/onegate-server.conf</h4><pre><code>################################################################################# Server Configuration################################################################################# OpenNebula sever contact information#:one_xmlrpc: http://localhost:2633/RPC2# Server Configuration#:host: 127.0.0.1:port: 5030:oneflow_server: http://localhost:2474</code></pre><h4 id="Start-OneGate"><a href="#Start-OneGate" class="headerlink" title="Start OneGate"></a>Start OneGate</h4><pre><code>systemctl start opennebula-gate</code></pre><h4 id="use-update-etc-one-oned-conf"><a href="#use-update-etc-one-oned-conf" class="headerlink" title="use , update /etc/one/oned.conf"></a>use , update /etc/one/oned.conf</h4><pre><code>ONEGATE_ENDPOINT = &quot;http://192.168.0.5:5030&quot;</code></pre><h3 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h3><h4 id="vm-template"><a href="#vm-template" class="headerlink" title="vm template"></a>vm template</h4><pre><code>CPU     = &quot;0.5&quot;MEMORY  = &quot;1024&quot;DISK = [  IMAGE_ID = &quot;0&quot; ]NIC = [  NETWORK_ID = &quot;0&quot; ]CONTEXT = [  TOKEN = &quot;YES&quot; ]</code></pre><h4 id="OneGate-Client-Usage"><a href="#OneGate-Client-Usage" class="headerlink" title="OneGate Client Usage"></a>OneGate Client Usage</h4><pre><code> onegate vm show</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 第三方接口,rest api</title>
      <link href="/2019/04/04/opennebula-19/"/>
      <url>/2019/04/04/opennebula-19/</url>
      
        <content type="html"><![CDATA[<h3 id="ruby-xml-prc"><a href="#ruby-xml-prc" class="headerlink" title="ruby xml prc"></a>ruby xml prc</h3><pre><code>require &#39;xmlrpc/client&#39;server = XMLRPC::Client.new(&quot;opennebulaserver&quot;, &quot;/RPC2&quot;, 2633)server.call(&quot;one.system.version&quot;, &quot;oneadmin:oneadmin&quot;)</code></pre><blockquote><p>java ruby sdk  ,command line 需要在master机器运行 </p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 公有云扩展</title>
      <link href="/2019/04/04/opennebula-18/"/>
      <url>/2019/04/04/opennebula-18/</url>
      
        <content type="html"><![CDATA[<h4 id="Add-provider"><a href="#Add-provider" class="headerlink" title="Add provider"></a>Add provider</h4><pre><code> onehost create remote_provider im_provider vmm_provider</code></pre><h4 id="Adding-the-Information-Manager"><a href="#Adding-the-Information-Manager" class="headerlink" title="Adding the Information Manager"></a>Adding the Information Manager</h4><pre><code>vi /etc/one/oned.confIM_MAD = [      name       = &quot;im_provider&quot;,      executable = &quot;one_im_sh&quot;,      arguments  = &quot;-t 1 -r 0 provider_name&quot; ]</code></pre><h4 id="Populating-the-Probes"><a href="#Populating-the-Probes" class="headerlink" title="Populating the Probes"></a>Populating the Probes</h4><pre><code>/var/lib/one/remotes/im/&lt;provider_name&gt;.d</code></pre><h3 id="Adding-the-Virtual-Machine-Manager"><a href="#Adding-the-Virtual-Machine-Manager" class="headerlink" title="Adding the Virtual Machine Manager"></a>Adding the Virtual Machine Manager</h3><pre><code>VM_MAD = [    name       = &quot;vmm_provider&quot;,    executable = &quot;one_vmm_sh&quot;,    arguments  = &quot;-t 15 -r 0 provider_name&quot;,    type       = &quot;xml&quot; ]</code></pre><p>###</p><pre><code>/var/lib/one/remotes/vmm/provier_name implement</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula datacenter federation</title>
      <link href="/2019/04/04/opennebula-14/"/>
      <url>/2019/04/04/opennebula-14/</url>
      
        <content type="html"><![CDATA[<h3 id="Configure-the-OpenNebula-Federation-Master-Zone"><a href="#Configure-the-OpenNebula-Federation-Master-Zone" class="headerlink" title="Configure the OpenNebula Federation Master Zone"></a>Configure the OpenNebula Federation Master Zone</h3><pre><code>vi /etc/one/oned.confonezone update 0FEDERATION = [    MODE    = &quot;MASTER&quot;,    ZONE_ID = 0]</code></pre><h3 id="Adding-a-New-Federation-Slave-Zone"><a href="#Adding-a-New-Federation-Slave-Zone" class="headerlink" title="Adding a New Federation Slave Zone"></a>Adding a New Federation Slave Zone</h3><ul><li>Slave: Install OpenNebula on the slave as usual following the installation guide. Start OpenNebula at least once to bootstrap the zone database.</li><li>Slave: Stop OpenNebula.</li><li>Master: Create a zone for the slave, and write down the new Zone ID. This can be done via Sunstone, or with the onezone command.<pre><code>vim /tmp/zone.tmplNAME     = slave-nameENDPOINT = http://&lt;slave-zone-ip&gt;:2633/RPC2onezone create /tmp/zone.tmplID: 100onezone list ID NAME  0 OpenNebula100 slave-name</code></pre></li><li>Master: backup db<pre><code>onedb backup --federated -s /var/lib/one/one.db</code></pre></li><li>Slave: restore db<pre><code>onedb restore --federated -s /var/lib/one/one.db /var/lib/one/one.db_federated_2017-6-14_16:0:36.bck</code></pre></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula public cloud</title>
      <link href="/2019/04/04/opennebula-13/"/>
      <url>/2019/04/04/opennebula-13/</url>
      
        <content type="html"><![CDATA[<h3 id="AWS"><a href="#AWS" class="headerlink" title="AWS"></a>AWS</h3><pre><code>/etc/one/ec2_driver.confproxy_uri:state_wait_timeout_seconds: 300instance_types:    c1.medium:    cpu: 2    memory: 1.7    ...onehost create ec2 -t ec2 --im ec2 --vm ec2echo &#39;EC2_ACCESS = &quot;xXxXXxx&quot;&#39; &gt;  ec2host.tplecho &#39;EC2_SECRET = &quot;xXXxxXx&quot;&#39; &gt;&gt; ec2host.tplecho &#39;REGION_NAME= &quot;xXXxxXx&quot;&#39; &gt;&gt; ec2host.tplonehost create ec2 -t ec2 ec2host.tpl --im ec2 --vm ec2CPU      = 0.5MEMORY   = 128# KVM template machine, this will be use when submitting this VM to local resourcesDISK     = [ IMAGE_ID = 3 ]NIC      = [ NETWORK_ID = 7 ]# PUBLIC_CLOUD template, this will be use wen submitting this VM to EC2PUBLIC_CLOUD = [ TYPE=&quot;EC2&quot;,                 AMI=&quot;ami-00bafcb5&quot;,                 KEYPAIR=&quot;gsg-keypair&quot;,                 INSTANCETYPE=m1.small]#Add this if you want to use only EC2 cloud#SCHED_REQUIREMENTS = &#39;HOSTNAME = &quot;ec2&quot;&#39;</code></pre><h3 id="AZURE"><a href="#AZURE" class="headerlink" title="AZURE"></a>AZURE</h3><pre><code>IM_MAD = [      name       = &quot;az&quot;,      executable = &quot;one_im_sh&quot;,      arguments  = &quot;-c -t 1 -r 0 az&quot; ]VM_MAD = [    name       = &quot;az&quot;,    executable = &quot;one_vmm_sh&quot;,    arguments  = &quot;-t 15 -r 0 az&quot;,    type       = &quot;xml&quot; ]onehost create azure_host -t az -i az -v azCPU      = 0.5MEMORY   = 128# KVM template machine, this will be use when submitting this VM to local resourcesDISK     = [ IMAGE_ID = 3 ]NIC      = [ NETWORK_ID = 7 ]# Azure template machine, this will be use wen submitting this VM to AzurePUBLIC_CLOUD = [  TYPE=AZURE,  INSTANCE_TYPE=ExtraSmall,  IMAGE=b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04-LTS-amd64-server-20140606.1-en-us-30GB,  VM_USER=&quot;azuser&quot;,  VM_PASSWORD=&quot;myr@nd0mPass9&quot;,  WIN_RM=&quot;https&quot;,  TCP_ENDPOINTS=&quot;80&quot;,  SSHPORT=2222]</code></pre><h1 id="opennebula"><a href="#opennebula" class="headerlink" title="opennebula"></a>opennebula</h1><pre><code>enableIM_MAD = [    NAME          = &quot;one&quot;,    SUNSTONE_NAME = &quot;OpenNebula&quot;,    EXECUTABLE    = &quot;one_im_sh&quot;,    ARGUMENTS     = &quot;-c -t 1 -r 0 one&quot; ]VM_MAD = [    NAME           = &quot;one&quot;,    SUNSTONE_NAME  = &quot;OpenNebula&quot;,    EXECUTABLE     = &quot;one_vmm_sh&quot;,    ARGUMENTS      = &quot;-t 15 -r 0 one&quot;,    TYPE           = &quot;xml&quot;,    KEEP_SNAPSHOTS = &quot;no&quot;]onehost create &lt;name&gt; -i one -v oneonehost update &lt;hostid&gt;ONE_USER = &lt;remote_username&gt;ONE_PASSWORD = &lt;remote_password&gt;ONE_ENDPOINT = &lt;remote_endpoint&gt;ONE_CAPACITY = [    CPU    = 0,    MEMORY = 0]onetemplate list --endpoint http://&lt;hybrid_OpenNebula_cloud&gt;:2633/RPC2 --user &lt;username&gt; --password &lt;pass&gt;cat template.txtNAME = &quot;hybrid-template&quot;CPU    = 0.1MEMORY = 128PUBLIC_CLOUD = [    TEMPLATE_ID = &quot;0&quot;,    TYPE        = &quot;opennebula&quot;]CONTEXT=[    NETWORK=&quot;yes&quot;]</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula marketplace</title>
      <link href="/2019/04/04/opennebula-12/"/>
      <url>/2019/04/04/opennebula-12/</url>
      
        <content type="html"><![CDATA[<h3 id="public"><a href="#public" class="headerlink" title="public"></a>public</h3><ul><li>默认安装</li></ul><h3 id="private"><a href="#private" class="headerlink" title="private"></a>private</h3><h4 id="Systems-marketplace"><a href="#Systems-marketplace" class="headerlink" title="Systems marketplace"></a>Systems marketplace</h4><pre><code>cat market.confNAME = PrivateMarketMARKET_MAD = oneENDPOINT = &quot;http://privatemarket.opennebula.org&quot;</code></pre><h4 id="http-marketplace"><a href="#http-marketplace" class="headerlink" title="http marketplace"></a>http marketplace</h4><pre><code>cat market.confNAME = PrivateMarketMARKET_MAD = httpBASE_URL = &quot;http://frontend.opennebula.org/&quot;PUBLIC_DIR = &quot;/var/loca/market-http&quot;BRIDGE_LIST = &quot;web-server.opennebula.org&quot;onemarket create market.conf</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 虚拟机管理</title>
      <link href="/2019/04/04/opennebula-11/"/>
      <url>/2019/04/04/opennebula-11/</url>
      
        <content type="html"><![CDATA[<h3 id="image"><a href="#image" class="headerlink" title="image"></a>image</h3><pre><code>需要安装one-context</code></pre><h3 id="Set-Up-the-Virtual-Machine-Template"><a href="#Set-Up-the-Virtual-Machine-Template" class="headerlink" title="Set Up the Virtual Machine Template"></a>Set Up the Virtual Machine Template</h3><pre><code>CONTEXT = [    TOKEN = &quot;YES&quot;,    NETWORK = &quot;YES&quot;,    SSH_PUBLIC_KEY = &quot;$USER[SSH_PUBLIC_KEY]&quot;,    START_SCRIPT = &quot;yum install -y ntpdate&quot;]</code></pre><blockquote><ul><li>Set OneGate token and onegate information in the context</li><li>Add network configuration to the Virtual Machine</li><li>Enable login into the Virtual Machine using ssh with the value of the user’s parameter SSH_PUBLIC_KEY</li><li>On Virtual Machine boot execute the command yum install -y ntpdate</li></ul></blockquote><h3 id="OneGate-Token"><a href="#OneGate-Token" class="headerlink" title="OneGate Token"></a>OneGate Token</h3><ul><li>Token: vm rest 接口认证<blockquote><p>需要在oned.conf 配置endpoint</p></blockquote></li></ul><h3 id="Network-Configuration"><a href="#Network-Configuration" class="headerlink" title="Network Configuration"></a>Network Configuration</h3><pre><code>CONTEXT = [  NIC = [ NETWORK = &quot;Network&quot;, IP = 10.0.0.153 ]]</code></pre><h3 id="User-Credentials"><a href="#User-Credentials" class="headerlink" title="User Credentials"></a>User Credentials</h3><pre><code>ssh-keygen 手动在template copy公钥 orCONTEXT = [  SSH_PUBLIC_KEY=&quot;ssh-rsa MYPUBLICKEY...&quot;]</code></pre><h3 id="Execute-Scripts-on-Boot"><a href="#Execute-Scripts-on-Boot" class="headerlink" title="Execute Scripts on Boot"></a>Execute Scripts on Boot</h3><pre><code>CONTEXT = [    START_SCRIPT = &quot;#!/bin/bashyum updateyum install -y ntpdatentpdate 0.pool.ntp.org&quot;]</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 镜像管理</title>
      <link href="/2019/04/04/opennebula-10/"/>
      <url>/2019/04/04/opennebula-10/</url>
      
        <content type="html"><![CDATA[<h3 id="disk类型"><a href="#disk类型" class="headerlink" title="disk类型"></a>disk类型</h3><ul><li>os ,可以启动的镜像</li><li>cd-rom , read only data 通常是iso文件</li><li>datalock, 数据文件, 通常是empty drive</li></ul><h3 id="file类型"><a href="#file类型" class="headerlink" title="file类型"></a>file类型</h3><ul><li>kernel A plain file to be used as kernel (VM attribute OS/KERNEL_DS)</li><li>ramdisk  A plain file to be used as ramdisk (VM attribute OS/INITRD_DS)</li><li>context A plain file to be included in the context CD-ROM (VM attribute CONTEXT/FILES_DS)</li></ul><p>生命周期<br><img src="/medias/opennebula/image-persistent.png" alt="persistent"><br><img src="/medias/opennebula/image-nonpersistent.png" alt="nopersistent"></p><blockquote><p>只能在file datastore注册</p></blockquote><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><pre><code>cat ubuntu_img.oneNAME          = &quot;Ubuntu&quot;PATH          = &quot;/home/cloud/images/ubuntu-desktop/disk.0&quot;TYPE          = &quot;OS&quot;DESCRIPTION   = &quot;Ubuntu desktop for students.&quot;oneimage create ubuntu_img.one --datastore defaultoneimage clone Ubuntu new_image#share imageoneimage chmod 0 664</code></pre><h3 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h3><ul><li>boot a vm instance</li><li>安装 one context</li><li>onevm disk-saveas centos-installation 0 centos-contextualized</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 网络管理</title>
      <link href="/2019/04/04/opennebula-9/"/>
      <url>/2019/04/04/opennebula-9/</url>
      
        <content type="html"><![CDATA[<h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><h4 id="桥接"><a href="#桥接" class="headerlink" title="桥接"></a>桥接</h4><pre><code>cat private.txtNAME    = &quot;bridged_net&quot;VN_MAD  = &quot;fw&quot;BRIDGE  = vbr1# 网桥需要手动配置#ebtables # Drop packets that don&#39;t match the network&#39;s MAC Address-s ! &lt;mac_address&gt;/ff:ff:ff:ff:ff:0 -o &lt;tap_device&gt; -j DROP# Prevent MAC spoofing-s ! &lt;mac_address&gt; -i &lt;tap_device&gt; -j DROP</code></pre><h4 id="8021q"><a href="#8021q" class="headerlink" title="8021q"></a>8021q</h4><pre><code>NAME    = &quot;Private&quot;VN_MAD  = &quot;802.1Q&quot;PHYDEV  = &quot;eth0&quot;AR=[    TYPE = &quot;IP4&quot;,    IP   = &quot;10.0.0.150&quot;,    SIZE = &quot;51&quot;]DNS     = &quot;10.0.0.23&quot;GATEWAY = &quot;10.0.0.1&quot;#网卡限速OUTBOUND_AVG_BW = &quot;1000&quot; OUTBOUND_PEAK_BW = &quot;1500&quot;OUTBOUND_PEAK_KB = &quot;2048&quot;DESCRIPTION = &quot;A private network for VM inter-communication&quot;</code></pre><h4 id="vxlan"><a href="#vxlan" class="headerlink" title="vxlan"></a>vxlan</h4><pre><code>NAME    = &quot;vxlan_net&quot;VN_MAD  = &quot;vxlan&quot;PHYDEV  = &quot;eth0&quot;VLAN_ID = 50        # optionalBRIDGE  = &quot;vxlan50&quot; # optional#在centos测试，多租户隔离不起作用?</code></pre><h4 id="openvswitch"><a href="#openvswitch" class="headerlink" title="openvswitch"></a>openvswitch</h4><pre><code>NAME    = &quot;ovswitch_net&quot;VN_MAD  = &quot;ovswitch&quot;BRIDGE  = vbr1VLAN_ID = 50 # optional#VLAN ID 做多租户网络隔离 ,桥接需要strip vlan id</code></pre><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre><code>onevnet create config.fileonevnet delete  name_or_idonevnet show id#Adding and Removing Address Rangesonevnet addar Private --ip 10.0.0.200 --size 20onevnet rmar Private 2#Hold and Release Leasesonevnet hold &quot;Private Network&quot; 10.0.0.120</code></pre><h3 id="定义路由器"><a href="#定义路由器" class="headerlink" title="定义路由器"></a>定义路由器</h3><pre><code>onemarketapp export &#39;alpine-vrouter (KVM)&#39; vrouter_alpine --datastore default --vmname vrouter_alpinecat myvr.txtNAME = my-vrNIC = [  NETWORK=&quot;blue-net&quot;,  IP=&quot;192.168.30.5&quot; ]NIC = [  NETWORK=&quot;red-net&quot;,  IP=&quot;192.168.20.5&quot;  ]#路由器的ip, 虚拟机的gateway需要写成 192.168.x.5$ onevrouter create myvr.txt</code></pre><h3 id="定义安全组"><a href="#定义安全组" class="headerlink" title="定义安全组"></a>定义安全组</h3><pre><code>  $ cat ./sg.txt  NAME = test  RULE = [      PROTOCOL = TCP,      RULE_TYPE = inbound,      RANGE = 1000:2000  ]  RULE = [      PROTOCOL= TCP,      RULE_TYPE = outbound,      RANGE = 1000:2000  ]  RULE = [      PROTOCOL = ICMP,      RULE_TYPE = inbound,      NETWORK_ID = 0  ]  $ onesecgroup create ./sg.txt#默认允许全部通过</code></pre><h3 id="定义防火墙"><a href="#定义防火墙" class="headerlink" title="定义防火墙"></a>定义防火墙</h3><pre><code>vyos ,marketplace 提供的kvm image下载不了,需要手动安装</code></pre><p>参考 <a href="https://opennebula.org/create-a-context-ready-vyos-image-for-opennebula" target="_blank" rel="noopener">文章</a><br><img src="/medias/opennebula/Captura-de-pantalla-de-2015-05-04-180522.png" alt><br><img src="/medias/opennebula/Captura-de-pantalla-de-2015-05-04-201849.png" alt></p><pre><code>#只是一个demo git clone https://github.com/n40lab/vyos-onecontext.gitcd vyos-onecontextscp vyatta-vmcontext.sh vyos@192.168.4.14:/tmp/scp vyatta-postconfig-bootup.script vyos@192.168.4.14:/tmp/ssh vyos@192.168.4.14sudo mv /tmp/vyatta-postconfig-bootup.script /opt/vyatta/etc/config/scripts/vyatta-postconfig-bootup.scriptsudo mv /tmp/vyatta-vmcontext.sh /opt/vyatta/sbin/delete service sshdelete interfaces ethernet eth0</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 用户权限</title>
      <link href="/2019/04/04/opennebula-8/"/>
      <url>/2019/04/04/opennebula-8/</url>
      
        <content type="html"><![CDATA[<h2 id="User"><a href="#User" class="headerlink" title="User"></a>User</h2><h3 id="Adding-and-Deleting-Users"><a href="#Adding-and-Deleting-Users" class="headerlink" title="Adding and Deleting Users"></a>Adding and Deleting Users</h3><pre><code>oneuser create otheradmin passwordoneuser chgrp otheradmin oneadminoneuser create publicuser passwordoneuser chauth publicuser publiconeuser create serveruser passwordoneuser chauth serveruser server_cipheroneuser delete server_cipher</code></pre><h3 id="token"><a href="#token" class="headerlink" title="token"></a>token</h3><pre><code>oneuser token-createoneuser token-set --token b6export ONE_AUTH=/var/lib/one/.one/5ad20d96-964a-4e09-b550-9c29855e6457.token; export ONE_EGID=-1oneuser token-delete b6</code></pre><h2 id="Group"><a href="#Group" class="headerlink" title="Group"></a>Group</h2><h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><pre><code>onegroup create &quot;new group&quot;</code></pre><h3 id="add-user"><a href="#add-user" class="headerlink" title="add user"></a>add user</h3><pre><code>oneuser chgrp -v regularuser &quot;new group&quot;</code></pre><h3 id="manage-Virtual-Machine-Templates-images-service-instance"><a href="#manage-Virtual-Machine-Templates-images-service-instance" class="headerlink" title="manage Virtual Machine Templates ,images, service, instance"></a>manage Virtual Machine Templates ,images, service, instance</h3><pre><code>在sunstone 页面直接操作</code></pre><h2 id="permission"><a href="#permission" class="headerlink" title="permission"></a>permission</h2><p>###</p><pre><code>onetemplate chmod 0 607 -v</code></pre><h2 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><pre><code>oneacl create &quot;@106 IMAGE/#31 USE&quot;</code></pre><h2 id="quota"><a href="#quota" class="headerlink" title="quota"></a>quota</h2><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><pre><code>oneuser batchquota userA,userB,35onegroup batchquota 100..104oneuser defaultquota</code></pre><h2 id="account"><a href="#account" class="headerlink" title="account"></a>account</h2><pre><code>oneacct -s 05/01 -e 06/01</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 主机集群管理</title>
      <link href="/2019/04/04/opennebula-7/"/>
      <url>/2019/04/04/opennebula-7/</url>
      
        <content type="html"><![CDATA[<h3 id="创建-删除主机"><a href="#创建-删除主机" class="headerlink" title="创建,删除主机"></a>创建,删除主机</h3><pre><code>onehost create host01 --im kvm --vm kvmonehost delete host01</code></pre><h3 id="Showing-and-Listing-Hosts"><a href="#Showing-and-Listing-Hosts" class="headerlink" title="Showing and Listing Hosts"></a>Showing and Listing Hosts</h3><pre><code>onehost listonehost show host01</code></pre><h3 id="enable-disable-offline"><a href="#enable-disable-offline" class="headerlink" title="enable ,disable , offline"></a>enable ,disable , offline</h3><pre><code>onehost disable host01onehost enable host01onehost offline host01</code></pre><h3 id="custom-tags"><a href="#custom-tags" class="headerlink" title="custom tags"></a>custom tags</h3><pre><code>onehost update -a &quot;TYPE=\&quot;production\&quot;&quot;</code></pre><h3 id="update-driver"><a href="#update-driver" class="headerlink" title="update driver"></a>update driver</h3><pre><code>onehost sync host01</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula sunstone</title>
      <link href="/2019/04/04/opennebula-6/"/>
      <url>/2019/04/04/opennebula-6/</url>
      
        <content type="html"><![CDATA[<h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><ul><li>Admin view</li><li>Group Admin view</li><li>Cloud view</li><li>User view</li></ul><p>5.8 定义 /etc/one/sunstone-views/{kvm,vcenter,mixed}<br>vi /etc/one/sunstone-server.conf<br>:mode: ‘mixed’</p><p>5.6 /etc/one/sunstone-views/*.yaml</p><p>custom view</p><pre><code>copy  /etc/one/sunstone-views/{kvm,vcenter,mixed}/admin.yaml </code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 认证</title>
      <link href="/2019/04/04/opennebula-5/"/>
      <url>/2019/04/04/opennebula-5/</url>
      
        <content type="html"><![CDATA[<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="/medias/opennebula/auth_options_350.png" alt></p><h4 id="CLI-API-Authentication"><a href="#CLI-API-Authentication" class="headerlink" title="CLI/API Authentication"></a>CLI/API Authentication</h4><ul><li>Built-in User/Password</li><li>LDAP</li><li>SSH</li></ul><h4 id="Sunstone-Authentication"><a href="#Sunstone-Authentication" class="headerlink" title="Sunstone Authentication"></a>Sunstone Authentication</h4><ul><li>Built-in User/Password</li><li>LDAP</li><li>SSH</li><li>X509</li></ul><h4 id="Servers-Authentication"><a href="#Servers-Authentication" class="headerlink" title="Servers Authentication"></a>Servers Authentication</h4><ul><li>Built-in User/Password</li><li>LDAP</li><li>SSH</li></ul><h3 id="Built-in-User-Password-and-token-authentication"><a href="#Built-in-User-Password-and-token-authentication" class="headerlink" title="Built-in User/Password and token authentication"></a>Built-in User/Password and token authentication</h3><pre><code>cat $HOME/.one/one_authoneadmin:opennebula</code></pre><h3 id="SSH-Authentication"><a href="#SSH-Authentication" class="headerlink" title="SSH Authentication"></a>SSH Authentication</h3><pre><code>vi /etc/one/oned.conf AUTH_MAD = [    EXECUTABLE = &quot;one_auth_mad&quot;,    AUTHN = &quot;ssh,x509,ldap,server_cipher,server_x509&quot;]ssh-keygen -t rsaoneuser keyoneuser create newuser --ssh --key /home/newuser/.ssh/id_rsaoneuser chauth &lt;id|name&gt; sshoneuser passwd &lt;id|name&gt; --ssh --key /home/newuser/.ssh/id_rsaoneuser login newuser --ssh</code></pre><h3 id="X509-auth"><a href="#X509-auth" class="headerlink" title="X509 auth"></a>X509 auth</h3><ul><li>配置参考ssh认证</li><li>测试环境opensssl 成功公钥认证失败,下次有时间在测试</li></ul><h3 id="LDAP-auth"><a href="#LDAP-auth" class="headerlink" title="LDAP auth"></a>LDAP auth</h3><ul><li>配置参考ssh认证</li></ul><pre><code>vi /etc/one/auth/ldap_auth.confserver 2:    :auth_method: :simple    :host: localhost    :port: 389    :base: &#39;dc=domain&#39;    #:group: &#39;cn=cloud,ou=groups,dc=domain&#39;    :user_field: &#39;cn&#39;# List the order the servers are queried:order:    #- server 1    - server 2</code></pre><h3 id="custom-auth-xml-认证举例"><a href="#custom-auth-xml-认证举例" class="headerlink" title="custom auth (xml 认证举例)"></a>custom auth (xml 认证举例)</h3><pre><code>&lt;AUTHN&gt;    &lt;USERNAME&gt;VALUE&lt;/USERNAME&gt;    &lt;PASSWORD&gt;VALUE&lt;/PASSWORD&gt;    &lt;SECRET&gt;VALUE&lt;/SECRET&gt;&lt;/AUTHN&gt;echo &#39;&lt;AUTHN&gt;&lt;USERNAME&gt;test&lt;/USERNAME&gt;&lt;PASSWORD&gt;5&lt;/PASSWORD&gt;&lt;SECRET&gt;testpassword&lt;/SECRET&gt;&lt;/AUTHN&gt;&#39; |  authenticatevi /var/lib/one/remotes/auth/length/authenticate#!/bin/bashdata=$(cat -)username=$(echo &quot;${data}&quot; | xmllint --xpath &#39;//AUTHN/USERNAME/text()&#39; -)password=$(echo &quot;${data}&quot; | xmllint --xpath &#39;//AUTHN/PASSWORD/text()&#39; -)secret=$(echo &quot;${data}&quot; | xmllint --xpath &#39;//AUTHN/SECRET/text()&#39; -)length=$(echo -n &quot;$secret&quot; | wc -c | tr -d &#39; &#39;)if [ $length = $password ]; then    echo &quot;length $username $secret&quot;else    echo &quot;Invalid password&quot;    exit 255fiAUTH_MAD = [    executable = &quot;one_auth_mad&quot;,    authn = &quot;ssh,x509,ldap,server_cipher,server_x509,length&quot;]</code></pre><blockquote><p>可以直接集成自己开发的平台</p><blockquote><p>执行oneuser create 方法<br>扩展auth认证</p></blockquote></blockquote><pre><code>认证内部平台例子#!/usr/bin/env rubyrequire &#39;net/http&#39;user   = ARGV[0]pass   = ARGV[1]#secret = ARGV[2]uri = URI(&#39;http://192.168.2.1&#39;)params = {name:user, password: pass}res = Net::HTTP.post_form(uri, params)if res.body.to_s =~/success/exit 0elseexit -1end</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula存储</title>
      <link href="/2019/04/04/opennebula-4/"/>
      <url>/2019/04/04/opennebula-4/</url>
      
        <content type="html"><![CDATA[<h3 id="file-system"><a href="#file-system" class="headerlink" title="file system"></a>file system</h3><h4 id="Datastore-Layout"><a href="#Datastore-Layout" class="headerlink" title="Datastore Layout"></a>Datastore Layout</h4><pre><code>/var/lib/one/datastores|-- 0/|   |-- 0/|   |   |-- disk.0|   |   `-- disk.1|   |-- 2/|   |   `-- disk.0|   `-- 7/|       |-- checkpoint|       `-- disk.0`-- 1    |-- 05a38ae85311b9dbb4eb15a2010f11ce    |-- 2bbec245b382fd833be35b0b0683ed09    `-- d0e0df1fb8cfa88311ea54dfbcfc4b0c0 存放 虚拟机1 存放镜像</code></pre><blockquote><p>如果需要修改默认路径, </p><pre><code>vi /etc/one/oned.confDATASTORE_LOCATION = &quot;new location&quot;</code></pre></blockquote><h4 id="Shared-amp-Qcow2-Transfer-Mode"><a href="#Shared-amp-Qcow2-Transfer-Mode" class="headerlink" title="Shared &amp; Qcow2 Transfer Mode"></a>Shared &amp; Qcow2 Transfer Mode</h4><p><img src="/medias/opennebula/fs_shared.png" alt></p><ol><li>需要挂载共享存储</li><li>如果只是mount一个disk, disk可能出现瓶颈</li></ol><h4 id="SSH-Transfer-Mode"><a href="#SSH-Transfer-Mode" class="headerlink" title="SSH Transfer Mode"></a>SSH Transfer Mode</h4><p><img src="/medias/opennebula/fs_ssh.png" alt></p><ol><li>启动先ssh copy image 在启动</li></ol><h3 id="raw-device-mapping"><a href="#raw-device-mapping" class="headerlink" title="raw device mapping"></a>raw device mapping</h3><h3 id="ceph"><a href="#ceph" class="headerlink" title="ceph"></a>ceph</h3><ol><li><p>版本 nautilus</p></li><li><p>安装</p></li></ol><pre><code>cat &lt;&lt; EOM &gt; /etc/yum.repos.d/ceph.repo[ceph]name=cephbaseurl=http://mirrors.163.com/ceph/rpm-nautilus/el7/x86_64/gpgcheck=0[ceph-noarch]name=ceph-noarchbaseurl=http://mirrors.163.com/ceph/rpm-nautilus/el7/noarch/gpgcheck=0  EOMyum install ceph-deploy cephyum install ntp ntpdate ntp-docntpdate  cn.pool.ntp.orgssh user@ceph-serversudo useradd -d /home/{username} -m {username}sudo passwd {username}echo &quot;{username} ALL = (root) NOPASSWD:ALL&quot; | sudo tee /etc/sudoers.d/{username}sudo chmod 0440 /etc/sudoers.d/{username}ssh-keygenssh-copy-id {username}@node1,2,3mkdir my-clustercd my-clusterceph-deploy new {initial-monitor-node(s)}ceph-deploy new node1public network = 10.1.2.0/24ceph-deploy install node1 node2 node3ceph-deploy mon create-initialceph-deploy admin {ceph-node(s)}ceph-deploy mgr create node1  *Required only for luminous+ builds, i.e &gt;= 12.x builds*ceph-deploy osd create --data /dev/vdb node1ceph-deploy osd create --data /dev/vdb node2ceph-deploy osd create --data /dev/vdb node3ceph-deploy mds create node1ceph-deploy mon add node2 node3ceph-deploy mgr create node2 node3ceph-deploy rgw create node1[client]rgw frontends = civetweb port=80</code></pre><ol start="3"><li>配置</li></ol><pre><code>controller nodeceph osd pool create one 128ceph osd lspoolsceph auth get-or-create client.libvirt mon &#39;profile rbd&#39; osd &#39;profile rbd pool=one&#39;#ceph 版本升级需要run ceph auth caps client.libvirt mon &#39;profile rbd&#39; osd &#39;profile rbd pool=one&#39;ceph auth get-key client.libvirt | tee client.libvirt.keyceph auth get client.libvirt -o ceph.client.libvirt.keyringceph.conf[global]rbd_default_format = 2scp ceph.client.libvirt.keyring root@node:/etc/cephscp client.libvirt.key oneadmin@node:UUID=`uuidgen`; echo $UUIDc7bdeabf-5f2a-4094-9413-58c6a9590980cat &gt; secret.xml &lt;&lt;EOF&lt;secret ephemeral=&#39;no&#39; private=&#39;no&#39;&gt;  &lt;uuid&gt;$UUID&lt;/uuid&gt;  &lt;usage type=&#39;ceph&#39;&gt;          &lt;name&gt;client.libvirt secret&lt;/name&gt;  &lt;/usage&gt;&lt;/secret&gt;EOFscp secret.xml oneadmin@node:run in compute nodevirsh -c qemu:///system secret-define secret.xmlvirsh -c qemu:///system secret-set-value --secret $UUID --base64 $(cat client.libvirt.key)rm client.libvirt.keyssh oneadmin@noderbd ls -p one --id libvirt</code></pre><h3 id="iscsi-libvirt"><a href="#iscsi-libvirt" class="headerlink" title="iscsi libvirt"></a>iscsi libvirt</h3><pre><code>server yum -y install scsi-target-utilsdd if=/dev/zero of=storage.img bs=1M count=2000&lt;target iqn.2010-10.org.opennebula:storage&gt;    backing-store /root/storage.img    driver iscsi    incominguser root 123456    write-cache on&lt;/target&gt;systemctl enable tgtdclientyum -y install iscsi-initiator-utilsiscsiadm  -m discovery  -p 192.168.5.170:3260 --type sendtargets iscsiadm  -m node   -T iqn.2010-10.org.opennebula:storage -p 192.168.5.170:3260   -o update   -n node.session.auth.username -v rootiscsiadm  -m node   -T iqn.2010-10.org.opennebula:storage -p 192.168.5.170:3260   -o update   -n node.session.auth.password -v 123456iscsiadm  -m node   -T iqn.2010-10.org.opennebula:storage -p 192.168.5.170:3260   -liscsiadm  -m node   -T iqn.2010-10.org.opennebula:storage -p 192.168.5.170:3260   --logout</code></pre><h3 id="lvm"><a href="#lvm" class="headerlink" title="lvm"></a>lvm</h3><p><img src="/medias/opennebula/fs_shared.png" alt><br>未测试</p><h3 id="The-Kernels-amp-Files-Datastore"><a href="#The-Kernels-amp-Files-Datastore" class="headerlink" title="The Kernels &amp; Files Datastore"></a>The Kernels &amp; Files Datastore</h3><p>RESTRICTED_DIRS, 如果写错会到帐instance创建失败</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula高可用</title>
      <link href="/2019/04/04/opennebula-3/"/>
      <url>/2019/04/04/opennebula-3/</url>
      
        <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><ol><li>前台需要至少三台机器<br>192.168.150.1 leader<br>192.168.150.2 follower<br>192.168.150.3 follower</li><li>Sunstone (with or without Apache/Passenger) running on all the nodes</li><li>后台共享存储 Shared datastores must be mounted on all the nodes</li><li>数据库高可用 ,mysql galera</li></ol><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><ol><li>192.168.150.1 add zone<br>  onezone server-add 0 –name server-0 –rpc <a href="http://192.168.150.1:2633/RPC2" target="_blank" rel="noopener">http://192.168.150.1:2633/RPC2</a></li><li>192.168.150.1 修改zone</li></ol><pre><code>FEDERATION = [    MODE          = &quot;STANDALONE&quot;,    ZONE_ID       = 0,    SERVER_ID     = 0, # changed from -1 to 0 (as 0 is the server id)    MASTER_ONED   = &quot;&quot;]</code></pre><ol start="3"><li>192.168.150.2 / 192.168.150.3 修改 zone</li></ol><pre><code>FEDERATION = [        MODE          = &quot;STANDALONE&quot;,        ZONE_ID       = 0,        SERVER_ID     = 1, # changed from -1 to 0 (as 0 is the server id)        MASTER_ONED   = &quot;&quot;]</code></pre><ol start="4"><li>192.168.150.1 add zone  <pre><code>onezone server-add 0 --name server-1 --rpc http://192.168.150.2:2633/RPC2onezone server-add 0 --name server-2 --rpc http://192.168.150.3:2633/RPC2</code></pre></li><li>数据库高可用<pre><code>mysql galera</code></pre></li><li>使用vip (optional)</li></ol><pre><code># Executed when a server transits from follower-&gt;leaderRAFT_LEADER_HOOK = [     COMMAND = &quot;raft/vip.sh&quot;,     ARGUMENTS = &quot;leader eth0 10.3.3.2/24&quot;]# Executed when a server transits from leader-&gt;followerRAFT_FOLLOWER_HOOK = [    COMMAND = &quot;raft/vip.sh&quot;,    ARGUMENTS = &quot;follower eth0 10.3.3.2/24&quot;]#也可用pacemaker + corosync 实现(4.x的方式)</code></pre><blockquote><p>删除zone </p></blockquote><pre><code>onezone server-del  0 server-1</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 网络配置</title>
      <link href="/2019/04/03/opennebula-2/"/>
      <url>/2019/04/03/opennebula-2/</url>
      
        <content type="html"><![CDATA[<h3 id="8021q网络配置"><a href="#8021q网络配置" class="headerlink" title="8021q网络配置"></a>8021q网络配置</h3><blockquote><p>配置和liux vxlan类似</p><ul><li>ifcfg-eth0.192</li><li>ip link add link eth0 name eth0.8 type vlan id 8</li><li>ip -d link show eth0.8<br>需要内核支持802.1q协议<pre><code>[root@master ~]# modinfo 8021qfilename:       /lib/modules/3.10.0-862.14.4.el7.x86_64/kernel/net/8021q/8021q.ko.xzversion:        1.8license:        GPLalias:          rtnl-link-vlanretpoline:      Yrhelversion:    7.5srcversion:     A57F0AC30965A554203D4E3depends:        mrp,garpintree:         Yvermagic:       3.10.0-862.14.4.el7.x86_64 SMP mod_unload modversions signer:         CentOS Linux kernel signing keysig_key:        E4:A1:B6:8F:46:8A:CA:5C:22:84:50:53:18:FD:9D:AD:72:4B:13:03sig_hashalgo:   sha256</code></pre></li></ul></blockquote><h3 id="ovs-网络配置"><a href="#ovs-网络配置" class="headerlink" title="ovs 网络配置"></a>ovs 网络配置</h3><h1 id="opennebula-需要手动配置"><a href="#opennebula-需要手动配置" class="headerlink" title="opennebula 需要手动配置"></a>opennebula 需要手动配置</h1><ol><li>安装ovs<br>yum install centos-release-openstack-rocky<br>yum install openvswitch</li><li>ovs网桥,增加开机自动启动<ul><li>eth0 配置<pre class=" language-DEVICE=eth0"><code class="language-DEVICE=eth0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSPortOVS_BRIDGE=ovsbridge0BOOTPROTO=noneHOTPLUG=no</code></pre></li><li>gre  配置<pre class=" language-DEVICE=ovs-gre0"><code class="language-DEVICE=ovs-gre0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSTunnelOVS_BRIDGE=ovsbridge0OVS_TUNNEL_TYPE=greOVS_TUNNEL_OPTIONS="options:remote_ip=A.B.C.D"</code></pre></li><li>vxlan 配置<pre class=" language-DEVICE=ovs-gre0"><code class="language-DEVICE=ovs-gre0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSTunnelOVS_BRIDGE=ovsbridge0OVS_TUNNEL_TYPE=vxlanOVS_TUNNEL_OPTIONS="options:remote_ip=A.B.C.D"</code></pre></li><li>patch  配置<pre class=" language-DEVICE=patch-ovs-0"><code class="language-DEVICE=patch-ovs-0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSPatchPortOVS_BRIDGE=ovsbridge0OVS_PATCH_PEER=patch-ovs-1</code></pre></li><li>bound 配置<pre class=" language-DEVICE=bond0"><code class="language-DEVICE=bond0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSBondOVS_BRIDGE=ovsbridge0BOOTPROTO=noneBOND_IFACES="gige-1b-0 gige-1b-1 gige-21-0 gige-21-1"OVS_OPTIONS="bond_mode=balance-tcp lacp=active"HOTPLUG=no</code></pre></li><li>tag 配置<pre class=" language-DEVICE=vlan100"><code class="language-DEVICE=vlan100">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSIntPortBOOTPROTO=staticIPADDR=A.B.C.DNETMASK=X.Y.Z.0OVS_BRIDGE=ovsbridge0OVS_OPTIONS="tag=100"OVS_EXTRA="set Interface $DEVICE external-ids:iface-id=$(hostname -s)-$DEVICE-vif"HOTPLUG=no</code></pre></li><li>common<pre class=" language-DEVICE=intbr0"><code class="language-DEVICE=intbr0">ONBOOT=yesDEVICETYPE=ovsTYPE=OVSIntPortOVS_BRIDGE=ovsbridge0BOOTPROTO=staticIPADDR=A.B.C.DNETMASK=X.Y.Z.0HOTPLUG=no</code></pre></li></ul></li></ol><blockquote><p>需要内核支持ovs,最好升级到最新的内核<br>vxlan gre ,需要打开端口<br>临时配置</p><blockquote><p>ovs-vsctl add-br ovs01<br>ovs-vsctl add-port ovs01 eth2 tag=100<br>ovs-vsctl add-port ovs01 vxlan0 tag=100 – set interface vxlan0 type=vxlan options:key=100 options:remote_ip=172.16.100.2<br>ovs-vsctl add-port ovs01 vxlan0 tag=100 – set interface vxlan0 type=gre options:key=100 options:remote_ip=172.16.100.2<br>ovs-vsctl add-port ovs01 vxlan0 tag=100 – set interface type=internal</p></blockquote></blockquote><h3 id="linux-vxlan网络配置"><a href="#linux-vxlan网络配置" class="headerlink" title="linux vxlan网络配置"></a>linux vxlan网络配置</h3><blockquote><p>sunstone 选择vxlan 网络,br可以不用写, vlan id 做网络隔离,指定物理网卡<br>需要linux 内核支持vxlan</p></blockquote><h3 id="linux-bridge-网络配置"><a href="#linux-bridge-网络配置" class="headerlink" title="linux bridge 网络配置"></a>linux bridge 网络配置</h3><ol><li><p>centos 配置bridge网桥</p><ul><li><p>配置网卡</p><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-enp8s0 TYPE=EthernetDEVICE=enp8s0NAME=enp8s0BOOTPROTO=noneONBOOT=yesBRIDGE=br0</code></pre></li><li><p>配置网桥</p><pre><code>vim /etc/sysconfig/network-scripts/ifcfg-br0TYPE=BridgeDEVICE=br0BOOTPROTO=staticONBOOT=yesIPADDR=192.168.1.200NETMASK=255.255.255.0GATEWAY=192.168.1.1DNS1=114.114.114.114</code></pre></li></ul><blockquote><p>sunstone 选择网络bridge,DNS,network mask,gateway 现有网络存在,没有使用dnsmasq<br>linux 内核不需要升级</p></blockquote></li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula安装</title>
      <link href="/2019/04/03/opennebula-1/"/>
      <url>/2019/04/03/opennebula-1/</url>
      
        <content type="html"><![CDATA[<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><blockquote><ol><li>os centos7</li><li>存储 ceph</li><li>数据库 mysql</li><li>虚拟化 kvm</li><li>网络划分 192.168.0.0/16(业务) </li></ol></blockquote><h4 id="控制节点安装"><a href="#控制节点安装" class="headerlink" title="控制节点安装"></a>控制节点安装</h4><p>ip 192.168.20.2</p><blockquote><ol><li>SELinux on CentOS/RHEL 7</li></ol></blockquote><pre><code>vi /etc/selinux/configSELINUX=disabledsystemctl disable firewalldservice firewalld stop</code></pre><blockquote><ol start="2"><li>Add OpenNebula Repositories</li></ol></blockquote><pre><code>rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></pre><blockquote><ol start="3"><li>Installing the Software</li></ol></blockquote><pre><code>yum install epel-releaseyum install opennebula-server opennebula-sunstone opennebula-ruby opennebula-gate opennebula-flow</code></pre><blockquote><ol start="4"><li>Ruby Runtime Installation</li></ol></blockquote><pre><code>#root运行/usr/share/one/install_gems</code></pre><blockquote><ol start="5"><li>Enabling MySQL/MariaDB</li></ol></blockquote><pre><code>yum install centos-release-openstack-rocky #安装数据库yum install mariadb-server mariadbsystemctl enable mariadb.servicesystemctl start mariadb.servicemysql_secure_installation #设置密码mysql&gt; create databases oneadmin;mysql&gt; GRANT ALL PRIVILEGES ON opennebula.* TO &#39;oneadmin&#39; IDENTIFIED BY &#39;&lt;thepassword&gt;&#39;;vi /etc/my.cnf.d/openstack.cnf [mysqld]bind-address = 0.0.0.0 修改bind addressvi /etc/one/oned.confDB = [ backend = &quot;mysql&quot;,       server  = &quot;0.0.0.0&quot;,       port    = 0,       user    = &quot;oneadmin&quot;,       passwd  = &quot;&lt;thepassword&gt;&quot;,       db_name = &quot;opennebula&quot; ]</code></pre><blockquote><ol start="6"><li>Starting OpenNebula</li></ol></blockquote><pre><code>#在oneadmin用户下运行,没有密码需要手动设置密码echo &quot;oneadmin:mypassword&quot; &gt; ~/.one/one_authsystemctl start opennebulasystemctl start opennebula-sunstonesystemctl enable opennebula-sunstonesystemctl enable opennebula-sunstone</code></pre><h4 id="计算节点安装-KVM"><a href="#计算节点安装-KVM" class="headerlink" title="计算节点安装(KVM)"></a>计算节点安装(KVM)</h4><p>ip 192.168.20.3</p><blockquote><ol><li>Add OpenNebula Repositories</li></ol></blockquote><pre><code>参考控制节点做法</code></pre><blockquote><ol start="2"><li>Installing the Software</li></ol></blockquote><pre><code>yum install centos-release-qemu-evyum install qemu-kvm-evsystemctl restart libvirtd</code></pre><blockquote><ol start="3"><li>SELinux on CentOS/RHEL 7</li></ol></blockquote><pre><code>参考控制节点做法</code></pre><blockquote><ol start="4"><li>Configure Passwordless SSH</li></ol></blockquote><pre><code>#在控制节点运行ssh-keygenssh-keyscan &lt;frontend&gt; &lt;node1&gt; &lt;node2&gt; &lt;node3&gt; ... &gt;&gt; /var/lib/one/.ssh/known_hostsscp -rp /var/lib/one/.ssh &lt;node1&gt;:/var/lib/one/</code></pre><blockquote><ol start="5"><li>Networking Configuration</li></ol></blockquote><pre><code>yum -y install openvswitchsystemctl enable openvswitchsystemctl start openvswitch#临时方法,重启网卡消失ovs-vsctl add-br br0ovs-vsctl add-port br0 eth0ifconfig br0 192.168.1.2/24 upip route add default via 192.168.1.254</code></pre><blockquote><ol start="6"><li>Storage Configuration</li></ol></blockquote><pre><code>直接使用filesystem存储</code></pre><blockquote><ol start="7"><li>Adding a Host to OpenNebula</li></ol></blockquote><pre><code>onehost create &lt;node01&gt; -i kvm -v kvm</code></pre><blockquote><ol start="8"><li>Import Currently Running VMs</li></ol></blockquote><pre><code>instance不能以one-*开头one host importvm &lt;hostid&gt; &lt;name&gt;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opennebula 安装准备</title>
      <link href="/2019/04/03/opennebula/"/>
      <url>/2019/04/03/opennebula/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h4><blockquote><ol><li>lxd 支持</li><li>自动网卡选择</li><li>可扩展性改进</li><li>os支持</li></ol></blockquote><p>如果需要lxd功能,需要5.8或者使用 <a href="https://github.com/OpenNebula/addon-lxdone" target="_blank" rel="noopener">addon-lxdone</a> ,如果使用centos安装,建议使用4.x版本</p><h4 id="虚拟化选择"><a href="#虚拟化选择" class="headerlink" title="虚拟化选择"></a>虚拟化选择</h4><blockquote><ol><li>kvm</li><li>lxd</li><li>docker</li><li>xen</li><li>vcenter</li></ol></blockquote><p>kvm 兼容性最好, lxd 只能在ubuntu 1604 或者更高的版本支持, xen有插件,经过测试,不兼容5.4.x版本,不清楚最新的兼容性是否支持 ,vcenter 未测试,建议使用kvm 或者lxd</p><h4 id="网络选择"><a href="#网络选择" class="headerlink" title="网络选择"></a>网络选择</h4><blockquote><ol><li>openvswitch bridge</li><li>vxlan</li><li>dummy bridge</li><li>bridge ebtables</li><li>Bridged with Security Groups</li><li>802.1q vlan network</li><li>Open vSwitch on VXLAN Networks</li></ol></blockquote><p>vxlan , bridge , 8021q 不支持多租户网络隔离,如果需要多租户网络隔离,使用openvswitch </p><h4 id="存储选择"><a href="#存储选择" class="headerlink" title="存储选择"></a>存储选择</h4><blockquote><ol><li>ceph</li><li>iscsi</li><li>raw device mapping </li><li>filesystem</li><li>lvm</li><li>The Kernels &amp; Files Datastore</li></ol></blockquote><p>filesystem 最简单 , iscsi 只能存放image , ceph 可以存放 image和instance</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> opennebula </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opennebula </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
